
1535_Clock.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005830  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000002c  0800593c  0800593c  0000693c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005968  08005968  00007014  2**0
                  CONTENTS
  4 .ARM          00000000  08005968  08005968  00007014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005968  08005968  00007014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005968  08005968  00006968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800596c  0800596c  0000696c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000014  20000000  08005970  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001ec  20000014  08005984  00007014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000200  08005984  00007200  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00007014  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000da6b  00000000  00000000  0000703d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002889  00000000  00000000  00014aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e88  00000000  00000000  00017338  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000b44  00000000  00000000  000181c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000187c1  00000000  00000000  00018d04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000131c1  00000000  00000000  000314c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008c790  00000000  00000000  00044686  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000d0e16  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003b3c  00000000  00000000  000d0e5c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000050  00000000  00000000  000d4998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000014 	.word	0x20000014
 8000128:	00000000 	.word	0x00000000
 800012c:	08005924 	.word	0x08005924

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000018 	.word	0x20000018
 8000148:	08005924 	.word	0x08005924

0800014c <Haamin_Remote>:
uint8_t valueNumber = 0;
uint8_t valueFeedback = 0;
uint8_t muteFlag = 1;

void Haamin_Remote(uint16_t action, uint8_t workMode)
{
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	4603      	mov	r3, r0
 8000154:	460a      	mov	r2, r1
 8000156:	80fb      	strh	r3, [r7, #6]
 8000158:	4613      	mov	r3, r2
 800015a:	717b      	strb	r3, [r7, #5]
    
    if(workMode == MODE_NORMAL)
 800015c:	797b      	ldrb	r3, [r7, #5]
 800015e:	2b52      	cmp	r3, #82	@ 0x52
 8000160:	f040 808f 	bne.w	8000282 <Haamin_Remote+0x136>
    {
        if(action == INFO)
 8000164:	88fb      	ldrh	r3, [r7, #6]
 8000166:	f240 1255 	movw	r2, #341	@ 0x155
 800016a:	4293      	cmp	r3, r2
 800016c:	d10e      	bne.n	800018c <Haamin_Remote+0x40>
        {
            work_Mode = TIME_SETTING;
 800016e:	4b95      	ldr	r3, [pc, #596]	@ (80003c4 <Haamin_Remote+0x278>)
 8000170:	2254      	movs	r2, #84	@ 0x54
 8000172:	701a      	strb	r2, [r3, #0]
            time_Mode = SET_HOUR;
 8000174:	4b94      	ldr	r3, [pc, #592]	@ (80003c8 <Haamin_Remote+0x27c>)
 8000176:	2248      	movs	r2, #72	@ 0x48
 8000178:	701a      	strb	r2, [r3, #0]
            timeValue = time_Hour;
 800017a:	4b94      	ldr	r3, [pc, #592]	@ (80003cc <Haamin_Remote+0x280>)
 800017c:	781a      	ldrb	r2, [r3, #0]
 800017e:	4b94      	ldr	r3, [pc, #592]	@ (80003d0 <Haamin_Remote+0x284>)
 8000180:	701a      	strb	r2, [r3, #0]
            time_Minute_t = time_Minute;
 8000182:	4b94      	ldr	r3, [pc, #592]	@ (80003d4 <Haamin_Remote+0x288>)
 8000184:	781a      	ldrb	r2, [r3, #0]
 8000186:	4b94      	ldr	r3, [pc, #592]	@ (80003d8 <Haamin_Remote+0x28c>)
 8000188:	701a      	strb	r2, [r3, #0]
 800018a:	e076      	b.n	800027a <Haamin_Remote+0x12e>
        }
        else if(action == MUTE)
 800018c:	88fb      	ldrh	r3, [r7, #6]
 800018e:	f240 1219 	movw	r2, #281	@ 0x119
 8000192:	4293      	cmp	r3, r2
 8000194:	d10b      	bne.n	80001ae <Haamin_Remote+0x62>
        {
            if(muteFlag)
 8000196:	4b91      	ldr	r3, [pc, #580]	@ (80003dc <Haamin_Remote+0x290>)
 8000198:	781b      	ldrb	r3, [r3, #0]
 800019a:	2b00      	cmp	r3, #0
 800019c:	d003      	beq.n	80001a6 <Haamin_Remote+0x5a>
                muteFlag = 0;
 800019e:	4b8f      	ldr	r3, [pc, #572]	@ (80003dc <Haamin_Remote+0x290>)
 80001a0:	2200      	movs	r2, #0
 80001a2:	701a      	strb	r2, [r3, #0]
 80001a4:	e069      	b.n	800027a <Haamin_Remote+0x12e>
            else
                muteFlag = 1;
 80001a6:	4b8d      	ldr	r3, [pc, #564]	@ (80003dc <Haamin_Remote+0x290>)
 80001a8:	2201      	movs	r2, #1
 80001aa:	701a      	strb	r2, [r3, #0]
 80001ac:	e065      	b.n	800027a <Haamin_Remote+0x12e>
        }
        else if(action == ON_OFF)
 80001ae:	88fb      	ldrh	r3, [r7, #6]
 80001b0:	f240 1259 	movw	r2, #345	@ 0x159
 80001b4:	4293      	cmp	r3, r2
 80001b6:	d103      	bne.n	80001c0 <Haamin_Remote+0x74>
        {
            work_Mode = MODE_OFF;
 80001b8:	4b82      	ldr	r3, [pc, #520]	@ (80003c4 <Haamin_Remote+0x278>)
 80001ba:	2246      	movs	r2, #70	@ 0x46
 80001bc:	701a      	strb	r2, [r3, #0]
 80001be:	e05c      	b.n	800027a <Haamin_Remote+0x12e>
        }
        else if(action == AM_PM)
 80001c0:	88fb      	ldrh	r3, [r7, #6]
 80001c2:	f240 1215 	movw	r2, #277	@ 0x115
 80001c6:	4293      	cmp	r3, r2
 80001c8:	d10e      	bne.n	80001e8 <Haamin_Remote+0x9c>
        {
            if(PM_Mode)
 80001ca:	4b85      	ldr	r3, [pc, #532]	@ (80003e0 <Haamin_Remote+0x294>)
 80001cc:	781b      	ldrb	r3, [r3, #0]
 80001ce:	2b00      	cmp	r3, #0
 80001d0:	d003      	beq.n	80001da <Haamin_Remote+0x8e>
                PM_Mode = 0;
 80001d2:	4b83      	ldr	r3, [pc, #524]	@ (80003e0 <Haamin_Remote+0x294>)
 80001d4:	2200      	movs	r2, #0
 80001d6:	701a      	strb	r2, [r3, #0]
 80001d8:	e002      	b.n	80001e0 <Haamin_Remote+0x94>
            else 
                PM_Mode = 1;
 80001da:	4b81      	ldr	r3, [pc, #516]	@ (80003e0 <Haamin_Remote+0x294>)
 80001dc:	2201      	movs	r2, #1
 80001de:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 80001e0:	2064      	movs	r0, #100	@ 0x64
 80001e2:	f000 fbb1 	bl	8000948 <Buzz>
 80001e6:	e048      	b.n	800027a <Haamin_Remote+0x12e>
        }
        else if(action == INCREASE)  
 80001e8:	88fb      	ldrh	r3, [r7, #6]
 80001ea:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80001ee:	d117      	bne.n	8000220 <Haamin_Remote+0xd4>
        {
            if(position_Level == 7)
 80001f0:	4b7c      	ldr	r3, [pc, #496]	@ (80003e4 <Haamin_Remote+0x298>)
 80001f2:	781b      	ldrb	r3, [r3, #0]
 80001f4:	2b07      	cmp	r3, #7
 80001f6:	d109      	bne.n	800020c <Haamin_Remote+0xc0>
            {
                position_Level = 7;
 80001f8:	4b7a      	ldr	r3, [pc, #488]	@ (80003e4 <Haamin_Remote+0x298>)
 80001fa:	2207      	movs	r2, #7
 80001fc:	701a      	strb	r2, [r3, #0]
                Buzz(50);
 80001fe:	2032      	movs	r0, #50	@ 0x32
 8000200:	f000 fba2 	bl	8000948 <Buzz>
                HAL_Delay(50);
 8000204:	2032      	movs	r0, #50	@ 0x32
 8000206:	f002 fd35 	bl	8002c74 <HAL_Delay>
 800020a:	e005      	b.n	8000218 <Haamin_Remote+0xcc>
            }
            else 
                position_Level--;
 800020c:	4b75      	ldr	r3, [pc, #468]	@ (80003e4 <Haamin_Remote+0x298>)
 800020e:	781b      	ldrb	r3, [r3, #0]
 8000210:	3b01      	subs	r3, #1
 8000212:	b2da      	uxtb	r2, r3
 8000214:	4b73      	ldr	r3, [pc, #460]	@ (80003e4 <Haamin_Remote+0x298>)
 8000216:	701a      	strb	r2, [r3, #0]
            Buzz(50);
 8000218:	2032      	movs	r0, #50	@ 0x32
 800021a:	f000 fb95 	bl	8000948 <Buzz>
 800021e:	e02c      	b.n	800027a <Haamin_Remote+0x12e>

        }
        else if(action == DECREASE)
 8000220:	88fb      	ldrh	r3, [r7, #6]
 8000222:	f5b3 7f8b 	cmp.w	r3, #278	@ 0x116
 8000226:	d117      	bne.n	8000258 <Haamin_Remote+0x10c>
        {
            
            if(position_Level > 20)
 8000228:	4b6e      	ldr	r3, [pc, #440]	@ (80003e4 <Haamin_Remote+0x298>)
 800022a:	781b      	ldrb	r3, [r3, #0]
 800022c:	2b14      	cmp	r3, #20
 800022e:	d909      	bls.n	8000244 <Haamin_Remote+0xf8>
            {
                position_Level = 20;
 8000230:	4b6c      	ldr	r3, [pc, #432]	@ (80003e4 <Haamin_Remote+0x298>)
 8000232:	2214      	movs	r2, #20
 8000234:	701a      	strb	r2, [r3, #0]
                Buzz(50);
 8000236:	2032      	movs	r0, #50	@ 0x32
 8000238:	f000 fb86 	bl	8000948 <Buzz>
                HAL_Delay(50);
 800023c:	2032      	movs	r0, #50	@ 0x32
 800023e:	f002 fd19 	bl	8002c74 <HAL_Delay>
 8000242:	e005      	b.n	8000250 <Haamin_Remote+0x104>
            }
            else 
                position_Level++;
 8000244:	4b67      	ldr	r3, [pc, #412]	@ (80003e4 <Haamin_Remote+0x298>)
 8000246:	781b      	ldrb	r3, [r3, #0]
 8000248:	3301      	adds	r3, #1
 800024a:	b2da      	uxtb	r2, r3
 800024c:	4b65      	ldr	r3, [pc, #404]	@ (80003e4 <Haamin_Remote+0x298>)
 800024e:	701a      	strb	r2, [r3, #0]
            Buzz(50);
 8000250:	2032      	movs	r0, #50	@ 0x32
 8000252:	f000 fb79 	bl	8000948 <Buzz>
 8000256:	e010      	b.n	800027a <Haamin_Remote+0x12e>
        }
        else if(action == MENU_KEY)
 8000258:	88fb      	ldrh	r3, [r7, #6]
 800025a:	f240 1245 	movw	r2, #325	@ 0x145
 800025e:	4293      	cmp	r3, r2
 8000260:	d10b      	bne.n	800027a <Haamin_Remote+0x12e>
        {
            work_Mode = SELECT_LEVEL;
 8000262:	4b58      	ldr	r3, [pc, #352]	@ (80003c4 <Haamin_Remote+0x278>)
 8000264:	2263      	movs	r2, #99	@ 0x63
 8000266:	701a      	strb	r2, [r3, #0]
            timer_Run = 0;
 8000268:	4b5f      	ldr	r3, [pc, #380]	@ (80003e8 <Haamin_Remote+0x29c>)
 800026a:	2200      	movs	r2, #0
 800026c:	701a      	strb	r2, [r3, #0]
            timer_Second = 0;
 800026e:	4b5f      	ldr	r3, [pc, #380]	@ (80003ec <Haamin_Remote+0x2a0>)
 8000270:	2200      	movs	r2, #0
 8000272:	701a      	strb	r2, [r3, #0]
            timer_mili_Second = 0;
 8000274:	4b5e      	ldr	r3, [pc, #376]	@ (80003f0 <Haamin_Remote+0x2a4>)
 8000276:	2200      	movs	r2, #0
 8000278:	701a      	strb	r2, [r3, #0]
        }
        Buzz(100);
 800027a:	2064      	movs	r0, #100	@ 0x64
 800027c:	f000 fb64 	bl	8000948 <Buzz>
        {
            timer_Run = 0;
            Buzz(100);
        }
    }
}
 8000280:	e2eb      	b.n	800085a <Haamin_Remote+0x70e>
    else if(workMode == MODE_OFF)
 8000282:	797b      	ldrb	r3, [r7, #5]
 8000284:	2b46      	cmp	r3, #70	@ 0x46
 8000286:	d10b      	bne.n	80002a0 <Haamin_Remote+0x154>
        if(action == ON_OFF)
 8000288:	88fb      	ldrh	r3, [r7, #6]
 800028a:	f240 1259 	movw	r2, #345	@ 0x159
 800028e:	4293      	cmp	r3, r2
 8000290:	d102      	bne.n	8000298 <Haamin_Remote+0x14c>
            work_Mode = MODE_NORMAL;
 8000292:	4b4c      	ldr	r3, [pc, #304]	@ (80003c4 <Haamin_Remote+0x278>)
 8000294:	2252      	movs	r2, #82	@ 0x52
 8000296:	701a      	strb	r2, [r3, #0]
        Buzz(100);
 8000298:	2064      	movs	r0, #100	@ 0x64
 800029a:	f000 fb55 	bl	8000948 <Buzz>
}
 800029e:	e2dc      	b.n	800085a <Haamin_Remote+0x70e>
    else if(workMode == TIME_SETTING)
 80002a0:	797b      	ldrb	r3, [r7, #5]
 80002a2:	2b54      	cmp	r3, #84	@ 0x54
 80002a4:	f040 80f2 	bne.w	800048c <Haamin_Remote+0x340>
        if(action == INCREASE)
 80002a8:	88fb      	ldrh	r3, [r7, #6]
 80002aa:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80002ae:	d121      	bne.n	80002f4 <Haamin_Remote+0x1a8>
            if(time_Mode == SET_HOUR)
 80002b0:	4b45      	ldr	r3, [pc, #276]	@ (80003c8 <Haamin_Remote+0x27c>)
 80002b2:	781b      	ldrb	r3, [r3, #0]
 80002b4:	2b48      	cmp	r3, #72	@ 0x48
 80002b6:	d10e      	bne.n	80002d6 <Haamin_Remote+0x18a>
                if(++timeValue > 23)
 80002b8:	4b45      	ldr	r3, [pc, #276]	@ (80003d0 <Haamin_Remote+0x284>)
 80002ba:	781b      	ldrb	r3, [r3, #0]
 80002bc:	3301      	adds	r3, #1
 80002be:	b2da      	uxtb	r2, r3
 80002c0:	4b43      	ldr	r3, [pc, #268]	@ (80003d0 <Haamin_Remote+0x284>)
 80002c2:	701a      	strb	r2, [r3, #0]
 80002c4:	4b42      	ldr	r3, [pc, #264]	@ (80003d0 <Haamin_Remote+0x284>)
 80002c6:	781b      	ldrb	r3, [r3, #0]
 80002c8:	2b17      	cmp	r3, #23
 80002ca:	f240 80db 	bls.w	8000484 <Haamin_Remote+0x338>
                timeValue = 0;
 80002ce:	4b40      	ldr	r3, [pc, #256]	@ (80003d0 <Haamin_Remote+0x284>)
 80002d0:	2200      	movs	r2, #0
 80002d2:	701a      	strb	r2, [r3, #0]
 80002d4:	e0d6      	b.n	8000484 <Haamin_Remote+0x338>
                if(++timeValue > 59)
 80002d6:	4b3e      	ldr	r3, [pc, #248]	@ (80003d0 <Haamin_Remote+0x284>)
 80002d8:	781b      	ldrb	r3, [r3, #0]
 80002da:	3301      	adds	r3, #1
 80002dc:	b2da      	uxtb	r2, r3
 80002de:	4b3c      	ldr	r3, [pc, #240]	@ (80003d0 <Haamin_Remote+0x284>)
 80002e0:	701a      	strb	r2, [r3, #0]
 80002e2:	4b3b      	ldr	r3, [pc, #236]	@ (80003d0 <Haamin_Remote+0x284>)
 80002e4:	781b      	ldrb	r3, [r3, #0]
 80002e6:	2b3b      	cmp	r3, #59	@ 0x3b
 80002e8:	f240 80cc 	bls.w	8000484 <Haamin_Remote+0x338>
                timeValue = 0;
 80002ec:	4b38      	ldr	r3, [pc, #224]	@ (80003d0 <Haamin_Remote+0x284>)
 80002ee:	2200      	movs	r2, #0
 80002f0:	701a      	strb	r2, [r3, #0]
 80002f2:	e0c7      	b.n	8000484 <Haamin_Remote+0x338>
        else if(action == DECREASE)
 80002f4:	88fb      	ldrh	r3, [r7, #6]
 80002f6:	f5b3 7f8b 	cmp.w	r3, #278	@ 0x116
 80002fa:	d121      	bne.n	8000340 <Haamin_Remote+0x1f4>
            if(time_Mode == SET_HOUR)
 80002fc:	4b32      	ldr	r3, [pc, #200]	@ (80003c8 <Haamin_Remote+0x27c>)
 80002fe:	781b      	ldrb	r3, [r3, #0]
 8000300:	2b48      	cmp	r3, #72	@ 0x48
 8000302:	d10e      	bne.n	8000322 <Haamin_Remote+0x1d6>
                if(timeValue == 0)
 8000304:	4b32      	ldr	r3, [pc, #200]	@ (80003d0 <Haamin_Remote+0x284>)
 8000306:	781b      	ldrb	r3, [r3, #0]
 8000308:	2b00      	cmp	r3, #0
 800030a:	d103      	bne.n	8000314 <Haamin_Remote+0x1c8>
                timeValue = 23;
 800030c:	4b30      	ldr	r3, [pc, #192]	@ (80003d0 <Haamin_Remote+0x284>)
 800030e:	2217      	movs	r2, #23
 8000310:	701a      	strb	r2, [r3, #0]
 8000312:	e0b7      	b.n	8000484 <Haamin_Remote+0x338>
                timeValue--;
 8000314:	4b2e      	ldr	r3, [pc, #184]	@ (80003d0 <Haamin_Remote+0x284>)
 8000316:	781b      	ldrb	r3, [r3, #0]
 8000318:	3b01      	subs	r3, #1
 800031a:	b2da      	uxtb	r2, r3
 800031c:	4b2c      	ldr	r3, [pc, #176]	@ (80003d0 <Haamin_Remote+0x284>)
 800031e:	701a      	strb	r2, [r3, #0]
 8000320:	e0b0      	b.n	8000484 <Haamin_Remote+0x338>
                if(timeValue == 0)
 8000322:	4b2b      	ldr	r3, [pc, #172]	@ (80003d0 <Haamin_Remote+0x284>)
 8000324:	781b      	ldrb	r3, [r3, #0]
 8000326:	2b00      	cmp	r3, #0
 8000328:	d103      	bne.n	8000332 <Haamin_Remote+0x1e6>
                timeValue = 59;
 800032a:	4b29      	ldr	r3, [pc, #164]	@ (80003d0 <Haamin_Remote+0x284>)
 800032c:	223b      	movs	r2, #59	@ 0x3b
 800032e:	701a      	strb	r2, [r3, #0]
 8000330:	e0a8      	b.n	8000484 <Haamin_Remote+0x338>
                timeValue--;
 8000332:	4b27      	ldr	r3, [pc, #156]	@ (80003d0 <Haamin_Remote+0x284>)
 8000334:	781b      	ldrb	r3, [r3, #0]
 8000336:	3b01      	subs	r3, #1
 8000338:	b2da      	uxtb	r2, r3
 800033a:	4b25      	ldr	r3, [pc, #148]	@ (80003d0 <Haamin_Remote+0x284>)
 800033c:	701a      	strb	r2, [r3, #0]
 800033e:	e0a1      	b.n	8000484 <Haamin_Remote+0x338>
        else if(action == EXIT_KEY)
 8000340:	88fb      	ldrh	r3, [r7, #6]
 8000342:	f240 1205 	movw	r2, #261	@ 0x105
 8000346:	4293      	cmp	r3, r2
 8000348:	d103      	bne.n	8000352 <Haamin_Remote+0x206>
            work_Mode = MODE_NORMAL;
 800034a:	4b1e      	ldr	r3, [pc, #120]	@ (80003c4 <Haamin_Remote+0x278>)
 800034c:	2252      	movs	r2, #82	@ 0x52
 800034e:	701a      	strb	r2, [r3, #0]
 8000350:	e098      	b.n	8000484 <Haamin_Remote+0x338>
        else if(action == OK_KEY)
 8000352:	88fb      	ldrh	r3, [r7, #6]
 8000354:	f5b3 7f8d 	cmp.w	r3, #282	@ 0x11a
 8000358:	d152      	bne.n	8000400 <Haamin_Remote+0x2b4>
            if(time_Mode == SET_HOUR)
 800035a:	4b1b      	ldr	r3, [pc, #108]	@ (80003c8 <Haamin_Remote+0x27c>)
 800035c:	781b      	ldrb	r3, [r3, #0]
 800035e:	2b48      	cmp	r3, #72	@ 0x48
 8000360:	d10b      	bne.n	800037a <Haamin_Remote+0x22e>
                time_Hour_t = timeValue;
 8000362:	4b1b      	ldr	r3, [pc, #108]	@ (80003d0 <Haamin_Remote+0x284>)
 8000364:	781a      	ldrb	r2, [r3, #0]
 8000366:	4b23      	ldr	r3, [pc, #140]	@ (80003f4 <Haamin_Remote+0x2a8>)
 8000368:	701a      	strb	r2, [r3, #0]
                time_Mode = SET_MIN;
 800036a:	4b17      	ldr	r3, [pc, #92]	@ (80003c8 <Haamin_Remote+0x27c>)
 800036c:	224d      	movs	r2, #77	@ 0x4d
 800036e:	701a      	strb	r2, [r3, #0]
                timeValue = time_Minute;
 8000370:	4b18      	ldr	r3, [pc, #96]	@ (80003d4 <Haamin_Remote+0x288>)
 8000372:	781a      	ldrb	r2, [r3, #0]
 8000374:	4b16      	ldr	r3, [pc, #88]	@ (80003d0 <Haamin_Remote+0x284>)
 8000376:	701a      	strb	r2, [r3, #0]
 8000378:	e084      	b.n	8000484 <Haamin_Remote+0x338>
            else if(time_Mode == SET_MIN)
 800037a:	4b13      	ldr	r3, [pc, #76]	@ (80003c8 <Haamin_Remote+0x27c>)
 800037c:	781b      	ldrb	r3, [r3, #0]
 800037e:	2b4d      	cmp	r3, #77	@ 0x4d
 8000380:	f040 8080 	bne.w	8000484 <Haamin_Remote+0x338>
                time_Minute_t = timeValue;
 8000384:	4b12      	ldr	r3, [pc, #72]	@ (80003d0 <Haamin_Remote+0x284>)
 8000386:	781a      	ldrb	r2, [r3, #0]
 8000388:	4b13      	ldr	r3, [pc, #76]	@ (80003d8 <Haamin_Remote+0x28c>)
 800038a:	701a      	strb	r2, [r3, #0]
                time_Minute = time_Minute_t;
 800038c:	4b12      	ldr	r3, [pc, #72]	@ (80003d8 <Haamin_Remote+0x28c>)
 800038e:	781a      	ldrb	r2, [r3, #0]
 8000390:	4b10      	ldr	r3, [pc, #64]	@ (80003d4 <Haamin_Remote+0x288>)
 8000392:	701a      	strb	r2, [r3, #0]
                time_Hour = time_Hour_t;
 8000394:	4b17      	ldr	r3, [pc, #92]	@ (80003f4 <Haamin_Remote+0x2a8>)
 8000396:	781a      	ldrb	r2, [r3, #0]
 8000398:	4b0c      	ldr	r3, [pc, #48]	@ (80003cc <Haamin_Remote+0x280>)
 800039a:	701a      	strb	r2, [r3, #0]
                time_Second = 0;
 800039c:	4b16      	ldr	r3, [pc, #88]	@ (80003f8 <Haamin_Remote+0x2ac>)
 800039e:	2200      	movs	r2, #0
 80003a0:	701a      	strb	r2, [r3, #0]
                work_Mode = MODE_NORMAL;
 80003a2:	4b08      	ldr	r3, [pc, #32]	@ (80003c4 <Haamin_Remote+0x278>)
 80003a4:	2252      	movs	r2, #82	@ 0x52
 80003a6:	701a      	strb	r2, [r3, #0]
                time_Mode = SET_HOUR;
 80003a8:	4b07      	ldr	r3, [pc, #28]	@ (80003c8 <Haamin_Remote+0x27c>)
 80003aa:	2248      	movs	r2, #72	@ 0x48
 80003ac:	701a      	strb	r2, [r3, #0]
                DS3231_WriteTime(&hi2c2, time_Hour,time_Minute,0);
 80003ae:	4b07      	ldr	r3, [pc, #28]	@ (80003cc <Haamin_Remote+0x280>)
 80003b0:	781b      	ldrb	r3, [r3, #0]
 80003b2:	4619      	mov	r1, r3
 80003b4:	4b07      	ldr	r3, [pc, #28]	@ (80003d4 <Haamin_Remote+0x288>)
 80003b6:	781b      	ldrb	r3, [r3, #0]
 80003b8:	461a      	mov	r2, r3
 80003ba:	2300      	movs	r3, #0
 80003bc:	480f      	ldr	r0, [pc, #60]	@ (80003fc <Haamin_Remote+0x2b0>)
 80003be:	f001 fbd3 	bl	8001b68 <DS3231_WriteTime>
 80003c2:	e05f      	b.n	8000484 <Haamin_Remote+0x338>
 80003c4:	20000001 	.word	0x20000001
 80003c8:	20000002 	.word	0x20000002
 80003cc:	20000110 	.word	0x20000110
 80003d0:	20000117 	.word	0x20000117
 80003d4:	20000111 	.word	0x20000111
 80003d8:	20000116 	.word	0x20000116
 80003dc:	20000000 	.word	0x20000000
 80003e0:	2000011a 	.word	0x2000011a
 80003e4:	20000003 	.word	0x20000003
 80003e8:	20000121 	.word	0x20000121
 80003ec:	2000011b 	.word	0x2000011b
 80003f0:	2000011c 	.word	0x2000011c
 80003f4:	20000115 	.word	0x20000115
 80003f8:	20000112 	.word	0x20000112
 80003fc:	200000bc 	.word	0x200000bc
        else if((action == KEY_0 ) || (action == KEY_1) || (action == KEY_2) || (action == KEY_3) || (action == KEY_4) || (action == KEY_5) || (action == KEY_6) || (action == KEY_7) || (action == KEY_8) || (action == KEY_9))
 8000400:	88fb      	ldrh	r3, [r7, #6]
 8000402:	f240 120f 	movw	r2, #271	@ 0x10f
 8000406:	4293      	cmp	r3, r2
 8000408:	d023      	beq.n	8000452 <Haamin_Remote+0x306>
 800040a:	88fb      	ldrh	r3, [r7, #6]
 800040c:	f5b3 7fa9 	cmp.w	r3, #338	@ 0x152
 8000410:	d01f      	beq.n	8000452 <Haamin_Remote+0x306>
 8000412:	88fb      	ldrh	r3, [r7, #6]
 8000414:	f5b3 7fa8 	cmp.w	r3, #336	@ 0x150
 8000418:	d01b      	beq.n	8000452 <Haamin_Remote+0x306>
 800041a:	88fb      	ldrh	r3, [r7, #6]
 800041c:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 8000420:	d017      	beq.n	8000452 <Haamin_Remote+0x306>
 8000422:	88fb      	ldrh	r3, [r7, #6]
 8000424:	f5b3 7fab 	cmp.w	r3, #342	@ 0x156
 8000428:	d013      	beq.n	8000452 <Haamin_Remote+0x306>
 800042a:	88fb      	ldrh	r3, [r7, #6]
 800042c:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 8000430:	d00f      	beq.n	8000452 <Haamin_Remote+0x306>
 8000432:	88fb      	ldrh	r3, [r7, #6]
 8000434:	f5b3 7f8a 	cmp.w	r3, #276	@ 0x114
 8000438:	d00b      	beq.n	8000452 <Haamin_Remote+0x306>
 800043a:	88fb      	ldrh	r3, [r7, #6]
 800043c:	f5b3 7fa7 	cmp.w	r3, #334	@ 0x14e
 8000440:	d007      	beq.n	8000452 <Haamin_Remote+0x306>
 8000442:	88fb      	ldrh	r3, [r7, #6]
 8000444:	f5b3 7fa6 	cmp.w	r3, #332	@ 0x14c
 8000448:	d003      	beq.n	8000452 <Haamin_Remote+0x306>
 800044a:	88fb      	ldrh	r3, [r7, #6]
 800044c:	f5b3 7f86 	cmp.w	r3, #268	@ 0x10c
 8000450:	d118      	bne.n	8000484 <Haamin_Remote+0x338>
            valueFeedback = Haamin_NumberKey(action);
 8000452:	88fb      	ldrh	r3, [r7, #6]
 8000454:	4618      	mov	r0, r3
 8000456:	f000 fa19 	bl	800088c <Haamin_NumberKey>
 800045a:	4603      	mov	r3, r0
 800045c:	461a      	mov	r2, r3
 800045e:	4ba3      	ldr	r3, [pc, #652]	@ (80006ec <Haamin_Remote+0x5a0>)
 8000460:	701a      	strb	r2, [r3, #0]
            timeValue = ((valuSetting_tmp * 10) + valueFeedback);
 8000462:	4ba3      	ldr	r3, [pc, #652]	@ (80006f0 <Haamin_Remote+0x5a4>)
 8000464:	781b      	ldrb	r3, [r3, #0]
 8000466:	461a      	mov	r2, r3
 8000468:	0092      	lsls	r2, r2, #2
 800046a:	4413      	add	r3, r2
 800046c:	005b      	lsls	r3, r3, #1
 800046e:	b2da      	uxtb	r2, r3
 8000470:	4b9e      	ldr	r3, [pc, #632]	@ (80006ec <Haamin_Remote+0x5a0>)
 8000472:	781b      	ldrb	r3, [r3, #0]
 8000474:	4413      	add	r3, r2
 8000476:	b2da      	uxtb	r2, r3
 8000478:	4b9e      	ldr	r3, [pc, #632]	@ (80006f4 <Haamin_Remote+0x5a8>)
 800047a:	701a      	strb	r2, [r3, #0]
            valuSetting_tmp = valueFeedback;
 800047c:	4b9b      	ldr	r3, [pc, #620]	@ (80006ec <Haamin_Remote+0x5a0>)
 800047e:	781a      	ldrb	r2, [r3, #0]
 8000480:	4b9b      	ldr	r3, [pc, #620]	@ (80006f0 <Haamin_Remote+0x5a4>)
 8000482:	701a      	strb	r2, [r3, #0]
        Buzz(100);
 8000484:	2064      	movs	r0, #100	@ 0x64
 8000486:	f000 fa5f 	bl	8000948 <Buzz>
}
 800048a:	e1e6      	b.n	800085a <Haamin_Remote+0x70e>
    else if(work_Mode == SELECT_LEVEL)
 800048c:	4b9a      	ldr	r3, [pc, #616]	@ (80006f8 <Haamin_Remote+0x5ac>)
 800048e:	781b      	ldrb	r3, [r3, #0]
 8000490:	2b63      	cmp	r3, #99	@ 0x63
 8000492:	f040 809a 	bne.w	80005ca <Haamin_Remote+0x47e>
        time_Out = 0;
 8000496:	4b99      	ldr	r3, [pc, #612]	@ (80006fc <Haamin_Remote+0x5b0>)
 8000498:	2200      	movs	r2, #0
 800049a:	701a      	strb	r2, [r3, #0]
        if(action == EXIT_KEY)
 800049c:	88fb      	ldrh	r3, [r7, #6]
 800049e:	f240 1205 	movw	r2, #261	@ 0x105
 80004a2:	4293      	cmp	r3, r2
 80004a4:	d109      	bne.n	80004ba <Haamin_Remote+0x36e>
            timer_Run = 0;
 80004a6:	4b96      	ldr	r3, [pc, #600]	@ (8000700 <Haamin_Remote+0x5b4>)
 80004a8:	2200      	movs	r2, #0
 80004aa:	701a      	strb	r2, [r3, #0]
            work_Mode = MODE_NORMAL;
 80004ac:	4b92      	ldr	r3, [pc, #584]	@ (80006f8 <Haamin_Remote+0x5ac>)
 80004ae:	2252      	movs	r2, #82	@ 0x52
 80004b0:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 80004b2:	2064      	movs	r0, #100	@ 0x64
 80004b4:	f000 fa48 	bl	8000948 <Buzz>
}
 80004b8:	e1cf      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action ==DECREASE)  
 80004ba:	88fb      	ldrh	r3, [r7, #6]
 80004bc:	f5b3 7f8b 	cmp.w	r3, #278	@ 0x116
 80004c0:	d117      	bne.n	80004f2 <Haamin_Remote+0x3a6>
            if(chaleng_Level == 1)
 80004c2:	4b90      	ldr	r3, [pc, #576]	@ (8000704 <Haamin_Remote+0x5b8>)
 80004c4:	781b      	ldrb	r3, [r3, #0]
 80004c6:	2b01      	cmp	r3, #1
 80004c8:	d109      	bne.n	80004de <Haamin_Remote+0x392>
                chaleng_Level = 1;
 80004ca:	4b8e      	ldr	r3, [pc, #568]	@ (8000704 <Haamin_Remote+0x5b8>)
 80004cc:	2201      	movs	r2, #1
 80004ce:	701a      	strb	r2, [r3, #0]
                Buzz(50);
 80004d0:	2032      	movs	r0, #50	@ 0x32
 80004d2:	f000 fa39 	bl	8000948 <Buzz>
                HAL_Delay(50);
 80004d6:	2032      	movs	r0, #50	@ 0x32
 80004d8:	f002 fbcc 	bl	8002c74 <HAL_Delay>
 80004dc:	e005      	b.n	80004ea <Haamin_Remote+0x39e>
                chaleng_Level--;
 80004de:	4b89      	ldr	r3, [pc, #548]	@ (8000704 <Haamin_Remote+0x5b8>)
 80004e0:	781b      	ldrb	r3, [r3, #0]
 80004e2:	3b01      	subs	r3, #1
 80004e4:	b2da      	uxtb	r2, r3
 80004e6:	4b87      	ldr	r3, [pc, #540]	@ (8000704 <Haamin_Remote+0x5b8>)
 80004e8:	701a      	strb	r2, [r3, #0]
            Buzz(50);
 80004ea:	2032      	movs	r0, #50	@ 0x32
 80004ec:	f000 fa2c 	bl	8000948 <Buzz>
}
 80004f0:	e1b3      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == INCREASE )
 80004f2:	88fb      	ldrh	r3, [r7, #6]
 80004f4:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80004f8:	d117      	bne.n	800052a <Haamin_Remote+0x3de>
            if(chaleng_Level == 4)
 80004fa:	4b82      	ldr	r3, [pc, #520]	@ (8000704 <Haamin_Remote+0x5b8>)
 80004fc:	781b      	ldrb	r3, [r3, #0]
 80004fe:	2b04      	cmp	r3, #4
 8000500:	d109      	bne.n	8000516 <Haamin_Remote+0x3ca>
                chaleng_Level = 4;
 8000502:	4b80      	ldr	r3, [pc, #512]	@ (8000704 <Haamin_Remote+0x5b8>)
 8000504:	2204      	movs	r2, #4
 8000506:	701a      	strb	r2, [r3, #0]
                Buzz(50);
 8000508:	2032      	movs	r0, #50	@ 0x32
 800050a:	f000 fa1d 	bl	8000948 <Buzz>
                HAL_Delay(50);
 800050e:	2032      	movs	r0, #50	@ 0x32
 8000510:	f002 fbb0 	bl	8002c74 <HAL_Delay>
 8000514:	e005      	b.n	8000522 <Haamin_Remote+0x3d6>
                chaleng_Level++;
 8000516:	4b7b      	ldr	r3, [pc, #492]	@ (8000704 <Haamin_Remote+0x5b8>)
 8000518:	781b      	ldrb	r3, [r3, #0]
 800051a:	3301      	adds	r3, #1
 800051c:	b2da      	uxtb	r2, r3
 800051e:	4b79      	ldr	r3, [pc, #484]	@ (8000704 <Haamin_Remote+0x5b8>)
 8000520:	701a      	strb	r2, [r3, #0]
            Buzz(50);
 8000522:	2032      	movs	r0, #50	@ 0x32
 8000524:	f000 fa10 	bl	8000948 <Buzz>
}
 8000528:	e197      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == OK_KEY)
 800052a:	88fb      	ldrh	r3, [r7, #6]
 800052c:	f5b3 7f8d 	cmp.w	r3, #282	@ 0x11a
 8000530:	d12e      	bne.n	8000590 <Haamin_Remote+0x444>
            switch (chaleng_Level)
 8000532:	4b74      	ldr	r3, [pc, #464]	@ (8000704 <Haamin_Remote+0x5b8>)
 8000534:	781b      	ldrb	r3, [r3, #0]
 8000536:	3b01      	subs	r3, #1
 8000538:	2b03      	cmp	r3, #3
 800053a:	d81b      	bhi.n	8000574 <Haamin_Remote+0x428>
 800053c:	a201      	add	r2, pc, #4	@ (adr r2, 8000544 <Haamin_Remote+0x3f8>)
 800053e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000542:	bf00      	nop
 8000544:	08000555 	.word	0x08000555
 8000548:	0800055d 	.word	0x0800055d
 800054c:	08000565 	.word	0x08000565
 8000550:	0800056d 	.word	0x0800056d
                chaleng_Level_Val = 1;
 8000554:	4b6c      	ldr	r3, [pc, #432]	@ (8000708 <Haamin_Remote+0x5bc>)
 8000556:	2201      	movs	r2, #1
 8000558:	701a      	strb	r2, [r3, #0]
                break;
 800055a:	e00f      	b.n	800057c <Haamin_Remote+0x430>
                chaleng_Level_Val = 2;
 800055c:	4b6a      	ldr	r3, [pc, #424]	@ (8000708 <Haamin_Remote+0x5bc>)
 800055e:	2202      	movs	r2, #2
 8000560:	701a      	strb	r2, [r3, #0]
                break;
 8000562:	e00b      	b.n	800057c <Haamin_Remote+0x430>
                chaleng_Level_Val = 5;
 8000564:	4b68      	ldr	r3, [pc, #416]	@ (8000708 <Haamin_Remote+0x5bc>)
 8000566:	2205      	movs	r2, #5
 8000568:	701a      	strb	r2, [r3, #0]
                break;
 800056a:	e007      	b.n	800057c <Haamin_Remote+0x430>
                chaleng_Level_Val = 10;
 800056c:	4b66      	ldr	r3, [pc, #408]	@ (8000708 <Haamin_Remote+0x5bc>)
 800056e:	220a      	movs	r2, #10
 8000570:	701a      	strb	r2, [r3, #0]
                break;
 8000572:	e003      	b.n	800057c <Haamin_Remote+0x430>
                chaleng_Level_Val = 1;
 8000574:	4b64      	ldr	r3, [pc, #400]	@ (8000708 <Haamin_Remote+0x5bc>)
 8000576:	2201      	movs	r2, #1
 8000578:	701a      	strb	r2, [r3, #0]
                break;
 800057a:	bf00      	nop
            work_Mode = SET_TARGET; 
 800057c:	4b5e      	ldr	r3, [pc, #376]	@ (80006f8 <Haamin_Remote+0x5ac>)
 800057e:	2247      	movs	r2, #71	@ 0x47
 8000580:	701a      	strb	r2, [r3, #0]
            time_Mode = SET_SEC;
 8000582:	4b62      	ldr	r3, [pc, #392]	@ (800070c <Haamin_Remote+0x5c0>)
 8000584:	2253      	movs	r2, #83	@ 0x53
 8000586:	701a      	strb	r2, [r3, #0]
            Buzz(100); 
 8000588:	2064      	movs	r0, #100	@ 0x64
 800058a:	f000 f9dd 	bl	8000948 <Buzz>
}
 800058e:	e164      	b.n	800085a <Haamin_Remote+0x70e>
        else if((action == KEY_1) || (action == KEY_2) || (action == KEY_3) || (action == KEY_4) )
 8000590:	88fb      	ldrh	r3, [r7, #6]
 8000592:	f5b3 7fa9 	cmp.w	r3, #338	@ 0x152
 8000596:	d00c      	beq.n	80005b2 <Haamin_Remote+0x466>
 8000598:	88fb      	ldrh	r3, [r7, #6]
 800059a:	f5b3 7fa8 	cmp.w	r3, #336	@ 0x150
 800059e:	d008      	beq.n	80005b2 <Haamin_Remote+0x466>
 80005a0:	88fb      	ldrh	r3, [r7, #6]
 80005a2:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 80005a6:	d004      	beq.n	80005b2 <Haamin_Remote+0x466>
 80005a8:	88fb      	ldrh	r3, [r7, #6]
 80005aa:	f5b3 7fab 	cmp.w	r3, #342	@ 0x156
 80005ae:	f040 8154 	bne.w	800085a <Haamin_Remote+0x70e>
            chaleng_Level = Haamin_NumberKey(action);
 80005b2:	88fb      	ldrh	r3, [r7, #6]
 80005b4:	4618      	mov	r0, r3
 80005b6:	f000 f969 	bl	800088c <Haamin_NumberKey>
 80005ba:	4603      	mov	r3, r0
 80005bc:	461a      	mov	r2, r3
 80005be:	4b51      	ldr	r3, [pc, #324]	@ (8000704 <Haamin_Remote+0x5b8>)
 80005c0:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 80005c2:	2064      	movs	r0, #100	@ 0x64
 80005c4:	f000 f9c0 	bl	8000948 <Buzz>
}
 80005c8:	e147      	b.n	800085a <Haamin_Remote+0x70e>
    else if(work_Mode == SET_TARGET)
 80005ca:	4b4b      	ldr	r3, [pc, #300]	@ (80006f8 <Haamin_Remote+0x5ac>)
 80005cc:	781b      	ldrb	r3, [r3, #0]
 80005ce:	2b47      	cmp	r3, #71	@ 0x47
 80005d0:	f040 80fb 	bne.w	80007ca <Haamin_Remote+0x67e>
        time_Out = 0;
 80005d4:	4b49      	ldr	r3, [pc, #292]	@ (80006fc <Haamin_Remote+0x5b0>)
 80005d6:	2200      	movs	r2, #0
 80005d8:	701a      	strb	r2, [r3, #0]
        if(action == INCREASE)
 80005da:	88fb      	ldrh	r3, [r7, #6]
 80005dc:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80005e0:	d122      	bne.n	8000628 <Haamin_Remote+0x4dc>
            if(time_Mode == SET_SEC)
 80005e2:	4b4a      	ldr	r3, [pc, #296]	@ (800070c <Haamin_Remote+0x5c0>)
 80005e4:	781b      	ldrb	r3, [r3, #0]
 80005e6:	2b53      	cmp	r3, #83	@ 0x53
 80005e8:	d10d      	bne.n	8000606 <Haamin_Remote+0x4ba>
                if(++target_Second > 99)
 80005ea:	4b49      	ldr	r3, [pc, #292]	@ (8000710 <Haamin_Remote+0x5c4>)
 80005ec:	781b      	ldrb	r3, [r3, #0]
 80005ee:	3301      	adds	r3, #1
 80005f0:	b2da      	uxtb	r2, r3
 80005f2:	4b47      	ldr	r3, [pc, #284]	@ (8000710 <Haamin_Remote+0x5c4>)
 80005f4:	701a      	strb	r2, [r3, #0]
 80005f6:	4b46      	ldr	r3, [pc, #280]	@ (8000710 <Haamin_Remote+0x5c4>)
 80005f8:	781b      	ldrb	r3, [r3, #0]
 80005fa:	2b63      	cmp	r3, #99	@ 0x63
 80005fc:	d910      	bls.n	8000620 <Haamin_Remote+0x4d4>
                    target_Second = 0;
 80005fe:	4b44      	ldr	r3, [pc, #272]	@ (8000710 <Haamin_Remote+0x5c4>)
 8000600:	2200      	movs	r2, #0
 8000602:	701a      	strb	r2, [r3, #0]
 8000604:	e00c      	b.n	8000620 <Haamin_Remote+0x4d4>
                if(++target_mili_Second > 99)
 8000606:	4b43      	ldr	r3, [pc, #268]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000608:	781b      	ldrb	r3, [r3, #0]
 800060a:	3301      	adds	r3, #1
 800060c:	b2da      	uxtb	r2, r3
 800060e:	4b41      	ldr	r3, [pc, #260]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000610:	701a      	strb	r2, [r3, #0]
 8000612:	4b40      	ldr	r3, [pc, #256]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000614:	781b      	ldrb	r3, [r3, #0]
 8000616:	2b63      	cmp	r3, #99	@ 0x63
 8000618:	d902      	bls.n	8000620 <Haamin_Remote+0x4d4>
                    target_mili_Second = 0;
 800061a:	4b3e      	ldr	r3, [pc, #248]	@ (8000714 <Haamin_Remote+0x5c8>)
 800061c:	2200      	movs	r2, #0
 800061e:	701a      	strb	r2, [r3, #0]
             Buzz(100);
 8000620:	2064      	movs	r0, #100	@ 0x64
 8000622:	f000 f991 	bl	8000948 <Buzz>
}
 8000626:	e118      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == DECREASE)
 8000628:	88fb      	ldrh	r3, [r7, #6]
 800062a:	f5b3 7f8b 	cmp.w	r3, #278	@ 0x116
 800062e:	d124      	bne.n	800067a <Haamin_Remote+0x52e>
            if(time_Mode == SET_SEC)
 8000630:	4b36      	ldr	r3, [pc, #216]	@ (800070c <Haamin_Remote+0x5c0>)
 8000632:	781b      	ldrb	r3, [r3, #0]
 8000634:	2b53      	cmp	r3, #83	@ 0x53
 8000636:	d10e      	bne.n	8000656 <Haamin_Remote+0x50a>
                if(target_Second == 0)
 8000638:	4b35      	ldr	r3, [pc, #212]	@ (8000710 <Haamin_Remote+0x5c4>)
 800063a:	781b      	ldrb	r3, [r3, #0]
 800063c:	2b00      	cmp	r3, #0
 800063e:	d103      	bne.n	8000648 <Haamin_Remote+0x4fc>
                    target_Second = 99;
 8000640:	4b33      	ldr	r3, [pc, #204]	@ (8000710 <Haamin_Remote+0x5c4>)
 8000642:	2263      	movs	r2, #99	@ 0x63
 8000644:	701a      	strb	r2, [r3, #0]
 8000646:	e014      	b.n	8000672 <Haamin_Remote+0x526>
                    target_Second--;
 8000648:	4b31      	ldr	r3, [pc, #196]	@ (8000710 <Haamin_Remote+0x5c4>)
 800064a:	781b      	ldrb	r3, [r3, #0]
 800064c:	3b01      	subs	r3, #1
 800064e:	b2da      	uxtb	r2, r3
 8000650:	4b2f      	ldr	r3, [pc, #188]	@ (8000710 <Haamin_Remote+0x5c4>)
 8000652:	701a      	strb	r2, [r3, #0]
 8000654:	e00d      	b.n	8000672 <Haamin_Remote+0x526>
                if(target_mili_Second == 0)
 8000656:	4b2f      	ldr	r3, [pc, #188]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000658:	781b      	ldrb	r3, [r3, #0]
 800065a:	2b00      	cmp	r3, #0
 800065c:	d103      	bne.n	8000666 <Haamin_Remote+0x51a>
                    target_mili_Second = 99;
 800065e:	4b2d      	ldr	r3, [pc, #180]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000660:	2263      	movs	r2, #99	@ 0x63
 8000662:	701a      	strb	r2, [r3, #0]
 8000664:	e005      	b.n	8000672 <Haamin_Remote+0x526>
                    target_mili_Second--;
 8000666:	4b2b      	ldr	r3, [pc, #172]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000668:	781b      	ldrb	r3, [r3, #0]
 800066a:	3b01      	subs	r3, #1
 800066c:	b2da      	uxtb	r2, r3
 800066e:	4b29      	ldr	r3, [pc, #164]	@ (8000714 <Haamin_Remote+0x5c8>)
 8000670:	701a      	strb	r2, [r3, #0]
             Buzz(100);
 8000672:	2064      	movs	r0, #100	@ 0x64
 8000674:	f000 f968 	bl	8000948 <Buzz>
}
 8000678:	e0ef      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == EXIT_KEY)
 800067a:	88fb      	ldrh	r3, [r7, #6]
 800067c:	f240 1205 	movw	r2, #261	@ 0x105
 8000680:	4293      	cmp	r3, r2
 8000682:	d106      	bne.n	8000692 <Haamin_Remote+0x546>
            work_Mode = SELECT_LEVEL;
 8000684:	4b1c      	ldr	r3, [pc, #112]	@ (80006f8 <Haamin_Remote+0x5ac>)
 8000686:	2263      	movs	r2, #99	@ 0x63
 8000688:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 800068a:	2064      	movs	r0, #100	@ 0x64
 800068c:	f000 f95c 	bl	8000948 <Buzz>
}
 8000690:	e0e3      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == OK_KEY)
 8000692:	88fb      	ldrh	r3, [r7, #6]
 8000694:	f5b3 7f8d 	cmp.w	r3, #282	@ 0x11a
 8000698:	d140      	bne.n	800071c <Haamin_Remote+0x5d0>
            if(time_Mode == SET_SEC)
 800069a:	4b1c      	ldr	r3, [pc, #112]	@ (800070c <Haamin_Remote+0x5c0>)
 800069c:	781b      	ldrb	r3, [r3, #0]
 800069e:	2b53      	cmp	r3, #83	@ 0x53
 80006a0:	d106      	bne.n	80006b0 <Haamin_Remote+0x564>
                time_Mode = SET_MILI;
 80006a2:	4b1a      	ldr	r3, [pc, #104]	@ (800070c <Haamin_Remote+0x5c0>)
 80006a4:	2249      	movs	r2, #73	@ 0x49
 80006a6:	701a      	strb	r2, [r3, #0]
                timeValue = 0;
 80006a8:	4b12      	ldr	r3, [pc, #72]	@ (80006f4 <Haamin_Remote+0x5a8>)
 80006aa:	2200      	movs	r2, #0
 80006ac:	701a      	strb	r2, [r3, #0]
 80006ae:	e018      	b.n	80006e2 <Haamin_Remote+0x596>
            else if(time_Mode == SET_MILI)
 80006b0:	4b16      	ldr	r3, [pc, #88]	@ (800070c <Haamin_Remote+0x5c0>)
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	2b49      	cmp	r3, #73	@ 0x49
 80006b6:	d114      	bne.n	80006e2 <Haamin_Remote+0x596>
                work_Mode = CHALENG;
 80006b8:	4b0f      	ldr	r3, [pc, #60]	@ (80006f8 <Haamin_Remote+0x5ac>)
 80006ba:	224c      	movs	r2, #76	@ 0x4c
 80006bc:	701a      	strb	r2, [r3, #0]
                target_Number = (target_Second * 100) + target_mili_Second;
 80006be:	4b14      	ldr	r3, [pc, #80]	@ (8000710 <Haamin_Remote+0x5c4>)
 80006c0:	781b      	ldrb	r3, [r3, #0]
 80006c2:	461a      	mov	r2, r3
 80006c4:	0092      	lsls	r2, r2, #2
 80006c6:	4413      	add	r3, r2
 80006c8:	461a      	mov	r2, r3
 80006ca:	0091      	lsls	r1, r2, #2
 80006cc:	461a      	mov	r2, r3
 80006ce:	460b      	mov	r3, r1
 80006d0:	4413      	add	r3, r2
 80006d2:	009b      	lsls	r3, r3, #2
 80006d4:	b2da      	uxtb	r2, r3
 80006d6:	4b0f      	ldr	r3, [pc, #60]	@ (8000714 <Haamin_Remote+0x5c8>)
 80006d8:	781b      	ldrb	r3, [r3, #0]
 80006da:	4413      	add	r3, r2
 80006dc:	b2da      	uxtb	r2, r3
 80006de:	4b0e      	ldr	r3, [pc, #56]	@ (8000718 <Haamin_Remote+0x5cc>)
 80006e0:	701a      	strb	r2, [r3, #0]
             Buzz(100);
 80006e2:	2064      	movs	r0, #100	@ 0x64
 80006e4:	f000 f930 	bl	8000948 <Buzz>
}
 80006e8:	e0b7      	b.n	800085a <Haamin_Remote+0x70e>
 80006ea:	bf00      	nop
 80006ec:	20000032 	.word	0x20000032
 80006f0:	20000030 	.word	0x20000030
 80006f4:	20000117 	.word	0x20000117
 80006f8:	20000001 	.word	0x20000001
 80006fc:	20000114 	.word	0x20000114
 8000700:	20000121 	.word	0x20000121
 8000704:	20000004 	.word	0x20000004
 8000708:	20000005 	.word	0x20000005
 800070c:	20000002 	.word	0x20000002
 8000710:	2000011d 	.word	0x2000011d
 8000714:	2000011e 	.word	0x2000011e
 8000718:	20000006 	.word	0x20000006
        else if((action == KEY_0 ) || (action == KEY_1) || (action == KEY_2) || (action == KEY_3) || (action == KEY_4) || (action == KEY_5) || (action == KEY_6) || (action == KEY_7) || (action == KEY_8) || (action == KEY_9))
 800071c:	88fb      	ldrh	r3, [r7, #6]
 800071e:	f240 120f 	movw	r2, #271	@ 0x10f
 8000722:	4293      	cmp	r3, r2
 8000724:	d023      	beq.n	800076e <Haamin_Remote+0x622>
 8000726:	88fb      	ldrh	r3, [r7, #6]
 8000728:	f5b3 7fa9 	cmp.w	r3, #338	@ 0x152
 800072c:	d01f      	beq.n	800076e <Haamin_Remote+0x622>
 800072e:	88fb      	ldrh	r3, [r7, #6]
 8000730:	f5b3 7fa8 	cmp.w	r3, #336	@ 0x150
 8000734:	d01b      	beq.n	800076e <Haamin_Remote+0x622>
 8000736:	88fb      	ldrh	r3, [r7, #6]
 8000738:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 800073c:	d017      	beq.n	800076e <Haamin_Remote+0x622>
 800073e:	88fb      	ldrh	r3, [r7, #6]
 8000740:	f5b3 7fab 	cmp.w	r3, #342	@ 0x156
 8000744:	d013      	beq.n	800076e <Haamin_Remote+0x622>
 8000746:	88fb      	ldrh	r3, [r7, #6]
 8000748:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 800074c:	d00f      	beq.n	800076e <Haamin_Remote+0x622>
 800074e:	88fb      	ldrh	r3, [r7, #6]
 8000750:	f5b3 7f8a 	cmp.w	r3, #276	@ 0x114
 8000754:	d00b      	beq.n	800076e <Haamin_Remote+0x622>
 8000756:	88fb      	ldrh	r3, [r7, #6]
 8000758:	f5b3 7fa7 	cmp.w	r3, #334	@ 0x14e
 800075c:	d007      	beq.n	800076e <Haamin_Remote+0x622>
 800075e:	88fb      	ldrh	r3, [r7, #6]
 8000760:	f5b3 7fa6 	cmp.w	r3, #332	@ 0x14c
 8000764:	d003      	beq.n	800076e <Haamin_Remote+0x622>
 8000766:	88fb      	ldrh	r3, [r7, #6]
 8000768:	f5b3 7f86 	cmp.w	r3, #268	@ 0x10c
 800076c:	d175      	bne.n	800085a <Haamin_Remote+0x70e>
            valueFeedback = Haamin_NumberKey(action);
 800076e:	88fb      	ldrh	r3, [r7, #6]
 8000770:	4618      	mov	r0, r3
 8000772:	f000 f88b 	bl	800088c <Haamin_NumberKey>
 8000776:	4603      	mov	r3, r0
 8000778:	461a      	mov	r2, r3
 800077a:	4b3a      	ldr	r3, [pc, #232]	@ (8000864 <Haamin_Remote+0x718>)
 800077c:	701a      	strb	r2, [r3, #0]
            timeValue = ((valuSetting_tmp * 10) + valueFeedback);
 800077e:	4b3a      	ldr	r3, [pc, #232]	@ (8000868 <Haamin_Remote+0x71c>)
 8000780:	781b      	ldrb	r3, [r3, #0]
 8000782:	461a      	mov	r2, r3
 8000784:	0092      	lsls	r2, r2, #2
 8000786:	4413      	add	r3, r2
 8000788:	005b      	lsls	r3, r3, #1
 800078a:	b2da      	uxtb	r2, r3
 800078c:	4b35      	ldr	r3, [pc, #212]	@ (8000864 <Haamin_Remote+0x718>)
 800078e:	781b      	ldrb	r3, [r3, #0]
 8000790:	4413      	add	r3, r2
 8000792:	b2da      	uxtb	r2, r3
 8000794:	4b35      	ldr	r3, [pc, #212]	@ (800086c <Haamin_Remote+0x720>)
 8000796:	701a      	strb	r2, [r3, #0]
            valuSetting_tmp = valueFeedback;
 8000798:	4b32      	ldr	r3, [pc, #200]	@ (8000864 <Haamin_Remote+0x718>)
 800079a:	781a      	ldrb	r2, [r3, #0]
 800079c:	4b32      	ldr	r3, [pc, #200]	@ (8000868 <Haamin_Remote+0x71c>)
 800079e:	701a      	strb	r2, [r3, #0]
            if(time_Mode == SET_SEC)              target_Second = timeValue;
 80007a0:	4b33      	ldr	r3, [pc, #204]	@ (8000870 <Haamin_Remote+0x724>)
 80007a2:	781b      	ldrb	r3, [r3, #0]
 80007a4:	2b53      	cmp	r3, #83	@ 0x53
 80007a6:	d104      	bne.n	80007b2 <Haamin_Remote+0x666>
 80007a8:	4b30      	ldr	r3, [pc, #192]	@ (800086c <Haamin_Remote+0x720>)
 80007aa:	781a      	ldrb	r2, [r3, #0]
 80007ac:	4b31      	ldr	r3, [pc, #196]	@ (8000874 <Haamin_Remote+0x728>)
 80007ae:	701a      	strb	r2, [r3, #0]
 80007b0:	e007      	b.n	80007c2 <Haamin_Remote+0x676>
            else if(time_Mode == SET_MILI)        target_mili_Second = timeValue;
 80007b2:	4b2f      	ldr	r3, [pc, #188]	@ (8000870 <Haamin_Remote+0x724>)
 80007b4:	781b      	ldrb	r3, [r3, #0]
 80007b6:	2b49      	cmp	r3, #73	@ 0x49
 80007b8:	d103      	bne.n	80007c2 <Haamin_Remote+0x676>
 80007ba:	4b2c      	ldr	r3, [pc, #176]	@ (800086c <Haamin_Remote+0x720>)
 80007bc:	781a      	ldrb	r2, [r3, #0]
 80007be:	4b2e      	ldr	r3, [pc, #184]	@ (8000878 <Haamin_Remote+0x72c>)
 80007c0:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 80007c2:	2064      	movs	r0, #100	@ 0x64
 80007c4:	f000 f8c0 	bl	8000948 <Buzz>
}
 80007c8:	e047      	b.n	800085a <Haamin_Remote+0x70e>
    else if(work_Mode == CHALENG)
 80007ca:	4b2c      	ldr	r3, [pc, #176]	@ (800087c <Haamin_Remote+0x730>)
 80007cc:	781b      	ldrb	r3, [r3, #0]
 80007ce:	2b4c      	cmp	r3, #76	@ 0x4c
 80007d0:	d143      	bne.n	800085a <Haamin_Remote+0x70e>
        if(action == EXIT_KEY)
 80007d2:	88fb      	ldrh	r3, [r7, #6]
 80007d4:	f240 1205 	movw	r2, #261	@ 0x105
 80007d8:	4293      	cmp	r3, r2
 80007da:	d109      	bne.n	80007f0 <Haamin_Remote+0x6a4>
            timer_Run = 0;
 80007dc:	4b28      	ldr	r3, [pc, #160]	@ (8000880 <Haamin_Remote+0x734>)
 80007de:	2200      	movs	r2, #0
 80007e0:	701a      	strb	r2, [r3, #0]
            work_Mode = MODE_NORMAL;
 80007e2:	4b26      	ldr	r3, [pc, #152]	@ (800087c <Haamin_Remote+0x730>)
 80007e4:	2252      	movs	r2, #82	@ 0x52
 80007e6:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 80007e8:	2064      	movs	r0, #100	@ 0x64
 80007ea:	f000 f8ad 	bl	8000948 <Buzz>
}
 80007ee:	e034      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == INFO)
 80007f0:	88fb      	ldrh	r3, [r7, #6]
 80007f2:	f240 1255 	movw	r2, #341	@ 0x155
 80007f6:	4293      	cmp	r3, r2
 80007f8:	d109      	bne.n	800080e <Haamin_Remote+0x6c2>
            work_Mode = SET_TARGET;
 80007fa:	4b20      	ldr	r3, [pc, #128]	@ (800087c <Haamin_Remote+0x730>)
 80007fc:	2247      	movs	r2, #71	@ 0x47
 80007fe:	701a      	strb	r2, [r3, #0]
            time_Mode = SET_SEC;
 8000800:	4b1b      	ldr	r3, [pc, #108]	@ (8000870 <Haamin_Remote+0x724>)
 8000802:	2253      	movs	r2, #83	@ 0x53
 8000804:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 8000806:	2064      	movs	r0, #100	@ 0x64
 8000808:	f000 f89e 	bl	8000948 <Buzz>
}
 800080c:	e025      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == RESET_KEY)
 800080e:	88fb      	ldrh	r3, [r7, #6]
 8000810:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8000814:	d10c      	bne.n	8000830 <Haamin_Remote+0x6e4>
            timer_Run = 0;
 8000816:	4b1a      	ldr	r3, [pc, #104]	@ (8000880 <Haamin_Remote+0x734>)
 8000818:	2200      	movs	r2, #0
 800081a:	701a      	strb	r2, [r3, #0]
            timer_Second = 0;
 800081c:	4b19      	ldr	r3, [pc, #100]	@ (8000884 <Haamin_Remote+0x738>)
 800081e:	2200      	movs	r2, #0
 8000820:	701a      	strb	r2, [r3, #0]
            timer_mili_Second = 0;
 8000822:	4b19      	ldr	r3, [pc, #100]	@ (8000888 <Haamin_Remote+0x73c>)
 8000824:	2200      	movs	r2, #0
 8000826:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 8000828:	2064      	movs	r0, #100	@ 0x64
 800082a:	f000 f88d 	bl	8000948 <Buzz>
}
 800082e:	e014      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == PLAY_KEY)
 8000830:	88fb      	ldrh	r3, [r7, #6]
 8000832:	f5b3 7fa3 	cmp.w	r3, #326	@ 0x146
 8000836:	d106      	bne.n	8000846 <Haamin_Remote+0x6fa>
            timer_Run = 1;
 8000838:	4b11      	ldr	r3, [pc, #68]	@ (8000880 <Haamin_Remote+0x734>)
 800083a:	2201      	movs	r2, #1
 800083c:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 800083e:	2064      	movs	r0, #100	@ 0x64
 8000840:	f000 f882 	bl	8000948 <Buzz>
}
 8000844:	e009      	b.n	800085a <Haamin_Remote+0x70e>
        else if(action == PUSE_KEY)
 8000846:	88fb      	ldrh	r3, [r7, #6]
 8000848:	f5b3 7fa2 	cmp.w	r3, #324	@ 0x144
 800084c:	d105      	bne.n	800085a <Haamin_Remote+0x70e>
            timer_Run = 0;
 800084e:	4b0c      	ldr	r3, [pc, #48]	@ (8000880 <Haamin_Remote+0x734>)
 8000850:	2200      	movs	r2, #0
 8000852:	701a      	strb	r2, [r3, #0]
            Buzz(100);
 8000854:	2064      	movs	r0, #100	@ 0x64
 8000856:	f000 f877 	bl	8000948 <Buzz>
}
 800085a:	bf00      	nop
 800085c:	3708      	adds	r7, #8
 800085e:	46bd      	mov	sp, r7
 8000860:	bd80      	pop	{r7, pc}
 8000862:	bf00      	nop
 8000864:	20000032 	.word	0x20000032
 8000868:	20000030 	.word	0x20000030
 800086c:	20000117 	.word	0x20000117
 8000870:	20000002 	.word	0x20000002
 8000874:	2000011d 	.word	0x2000011d
 8000878:	2000011e 	.word	0x2000011e
 800087c:	20000001 	.word	0x20000001
 8000880:	20000121 	.word	0x20000121
 8000884:	2000011b 	.word	0x2000011b
 8000888:	2000011c 	.word	0x2000011c

0800088c <Haamin_NumberKey>:

uint8_t Haamin_NumberKey (uint16_t numberKey)
{
 800088c:	b480      	push	{r7}
 800088e:	b083      	sub	sp, #12
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	80fb      	strh	r3, [r7, #6]
    if(numberKey == KEY_0)
 8000896:	88fb      	ldrh	r3, [r7, #6]
 8000898:	f240 120f 	movw	r2, #271	@ 0x10f
 800089c:	4293      	cmp	r3, r2
 800089e:	d103      	bne.n	80008a8 <Haamin_NumberKey+0x1c>
        valueNumber = 0;
 80008a0:	4b28      	ldr	r3, [pc, #160]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008a2:	2200      	movs	r2, #0
 80008a4:	701a      	strb	r2, [r3, #0]
 80008a6:	e046      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_1)
 80008a8:	88fb      	ldrh	r3, [r7, #6]
 80008aa:	f5b3 7fa9 	cmp.w	r3, #338	@ 0x152
 80008ae:	d103      	bne.n	80008b8 <Haamin_NumberKey+0x2c>
        valueNumber = 1;
 80008b0:	4b24      	ldr	r3, [pc, #144]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008b2:	2201      	movs	r2, #1
 80008b4:	701a      	strb	r2, [r3, #0]
 80008b6:	e03e      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_2)
 80008b8:	88fb      	ldrh	r3, [r7, #6]
 80008ba:	f5b3 7fa8 	cmp.w	r3, #336	@ 0x150
 80008be:	d103      	bne.n	80008c8 <Haamin_NumberKey+0x3c>
        valueNumber = 2;
 80008c0:	4b20      	ldr	r3, [pc, #128]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008c2:	2202      	movs	r2, #2
 80008c4:	701a      	strb	r2, [r3, #0]
 80008c6:	e036      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_3)
 80008c8:	88fb      	ldrh	r3, [r7, #6]
 80008ca:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 80008ce:	d103      	bne.n	80008d8 <Haamin_NumberKey+0x4c>
        valueNumber = 3;
 80008d0:	4b1c      	ldr	r3, [pc, #112]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008d2:	2203      	movs	r2, #3
 80008d4:	701a      	strb	r2, [r3, #0]
 80008d6:	e02e      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_4)
 80008d8:	88fb      	ldrh	r3, [r7, #6]
 80008da:	f5b3 7fab 	cmp.w	r3, #342	@ 0x156
 80008de:	d103      	bne.n	80008e8 <Haamin_NumberKey+0x5c>
        valueNumber = 4;
 80008e0:	4b18      	ldr	r3, [pc, #96]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008e2:	2204      	movs	r2, #4
 80008e4:	701a      	strb	r2, [r3, #0]
 80008e6:	e026      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_5)
 80008e8:	88fb      	ldrh	r3, [r7, #6]
 80008ea:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 80008ee:	d103      	bne.n	80008f8 <Haamin_NumberKey+0x6c>
        valueNumber = 5;
 80008f0:	4b14      	ldr	r3, [pc, #80]	@ (8000944 <Haamin_NumberKey+0xb8>)
 80008f2:	2205      	movs	r2, #5
 80008f4:	701a      	strb	r2, [r3, #0]
 80008f6:	e01e      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_6)
 80008f8:	88fb      	ldrh	r3, [r7, #6]
 80008fa:	f5b3 7f8a 	cmp.w	r3, #276	@ 0x114
 80008fe:	d103      	bne.n	8000908 <Haamin_NumberKey+0x7c>
        valueNumber = 6;
 8000900:	4b10      	ldr	r3, [pc, #64]	@ (8000944 <Haamin_NumberKey+0xb8>)
 8000902:	2206      	movs	r2, #6
 8000904:	701a      	strb	r2, [r3, #0]
 8000906:	e016      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_7)
 8000908:	88fb      	ldrh	r3, [r7, #6]
 800090a:	f5b3 7fa7 	cmp.w	r3, #334	@ 0x14e
 800090e:	d103      	bne.n	8000918 <Haamin_NumberKey+0x8c>
        valueNumber = 7;
 8000910:	4b0c      	ldr	r3, [pc, #48]	@ (8000944 <Haamin_NumberKey+0xb8>)
 8000912:	2207      	movs	r2, #7
 8000914:	701a      	strb	r2, [r3, #0]
 8000916:	e00e      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_8)
 8000918:	88fb      	ldrh	r3, [r7, #6]
 800091a:	f5b3 7fa6 	cmp.w	r3, #332	@ 0x14c
 800091e:	d103      	bne.n	8000928 <Haamin_NumberKey+0x9c>
        valueNumber = 8;
 8000920:	4b08      	ldr	r3, [pc, #32]	@ (8000944 <Haamin_NumberKey+0xb8>)
 8000922:	2208      	movs	r2, #8
 8000924:	701a      	strb	r2, [r3, #0]
 8000926:	e006      	b.n	8000936 <Haamin_NumberKey+0xaa>
    else if(numberKey == KEY_9)
 8000928:	88fb      	ldrh	r3, [r7, #6]
 800092a:	f5b3 7f86 	cmp.w	r3, #268	@ 0x10c
 800092e:	d102      	bne.n	8000936 <Haamin_NumberKey+0xaa>
        valueNumber = 9;
 8000930:	4b04      	ldr	r3, [pc, #16]	@ (8000944 <Haamin_NumberKey+0xb8>)
 8000932:	2209      	movs	r2, #9
 8000934:	701a      	strb	r2, [r3, #0]

    return valueNumber;
 8000936:	4b03      	ldr	r3, [pc, #12]	@ (8000944 <Haamin_NumberKey+0xb8>)
 8000938:	781b      	ldrb	r3, [r3, #0]

}
 800093a:	4618      	mov	r0, r3
 800093c:	370c      	adds	r7, #12
 800093e:	46bd      	mov	sp, r7
 8000940:	bc80      	pop	{r7}
 8000942:	4770      	bx	lr
 8000944:	20000031 	.word	0x20000031

08000948 <Buzz>:


void Buzz(uint16_t time)
{
 8000948:	b580      	push	{r7, lr}
 800094a:	b082      	sub	sp, #8
 800094c:	af00      	add	r7, sp, #0
 800094e:	4603      	mov	r3, r0
 8000950:	80fb      	strh	r3, [r7, #6]
  if(muteFlag)
 8000952:	4b0b      	ldr	r3, [pc, #44]	@ (8000980 <Buzz+0x38>)
 8000954:	781b      	ldrb	r3, [r3, #0]
 8000956:	2b00      	cmp	r3, #0
 8000958:	d00d      	beq.n	8000976 <Buzz+0x2e>
  {
    HAL_GPIO_WritePin(Buzzer_GPIO_Port, Buzzer_Pin, GPIO_PIN_SET);
 800095a:	2201      	movs	r2, #1
 800095c:	2120      	movs	r1, #32
 800095e:	4809      	ldr	r0, [pc, #36]	@ (8000984 <Buzz+0x3c>)
 8000960:	f002 fe67 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_Delay(time);
 8000964:	88fb      	ldrh	r3, [r7, #6]
 8000966:	4618      	mov	r0, r3
 8000968:	f002 f984 	bl	8002c74 <HAL_Delay>
    HAL_GPIO_WritePin(Buzzer_GPIO_Port, Buzzer_Pin, GPIO_PIN_RESET);
 800096c:	2200      	movs	r2, #0
 800096e:	2120      	movs	r1, #32
 8000970:	4804      	ldr	r0, [pc, #16]	@ (8000984 <Buzz+0x3c>)
 8000972:	f002 fe5e 	bl	8003632 <HAL_GPIO_WritePin>
  }
}
 8000976:	bf00      	nop
 8000978:	3708      	adds	r7, #8
 800097a:	46bd      	mov	sp, r7
 800097c:	bd80      	pop	{r7, pc}
 800097e:	bf00      	nop
 8000980:	20000000 	.word	0x20000000
 8000984:	40010c00 	.word	0x40010c00

08000988 <IR_SetTimeArrayValues>:
uint8_t ir_DataReady = 0;
uint16_t ir_Data = 0;
uint8_t ir_running = 0;

void IR_SetTimeArrayValues(uint16_t timevalue)// daryaft , zakhire zaman har palse 
{
 8000988:	b580      	push	{r7, lr}
 800098a:	b084      	sub	sp, #16
 800098c:	af00      	add	r7, sp, #0
 800098e:	4603      	mov	r3, r0
 8000990:	80fb      	strh	r3, [r7, #6]
  if (ir_running == 2)
 8000992:	4b18      	ldr	r3, [pc, #96]	@ (80009f4 <IR_SetTimeArrayValues+0x6c>)
 8000994:	781b      	ldrb	r3, [r3, #0]
 8000996:	2b02      	cmp	r3, #2
 8000998:	d121      	bne.n	80009de <IR_SetTimeArrayValues+0x56>
  {
    ir_TimeValue[ir_ArrayIndex] = timevalue;
 800099a:	4b17      	ldr	r3, [pc, #92]	@ (80009f8 <IR_SetTimeArrayValues+0x70>)
 800099c:	781b      	ldrb	r3, [r3, #0]
 800099e:	4619      	mov	r1, r3
 80009a0:	4a16      	ldr	r2, [pc, #88]	@ (80009fc <IR_SetTimeArrayValues+0x74>)
 80009a2:	88fb      	ldrh	r3, [r7, #6]
 80009a4:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
    if (++ir_ArrayIndex >= IR_FRAME_SIZE)
 80009a8:	4b13      	ldr	r3, [pc, #76]	@ (80009f8 <IR_SetTimeArrayValues+0x70>)
 80009aa:	781b      	ldrb	r3, [r3, #0]
 80009ac:	3301      	adds	r3, #1
 80009ae:	b2da      	uxtb	r2, r3
 80009b0:	4b11      	ldr	r3, [pc, #68]	@ (80009f8 <IR_SetTimeArrayValues+0x70>)
 80009b2:	701a      	strb	r2, [r3, #0]
 80009b4:	4b10      	ldr	r3, [pc, #64]	@ (80009f8 <IR_SetTimeArrayValues+0x70>)
 80009b6:	781b      	ldrb	r3, [r3, #0]
 80009b8:	2b20      	cmp	r3, #32
 80009ba:	d917      	bls.n	80009ec <IR_SetTimeArrayValues+0x64>
    {
      ir_ArrayIndex = 0;
 80009bc:	4b0e      	ldr	r3, [pc, #56]	@ (80009f8 <IR_SetTimeArrayValues+0x70>)
 80009be:	2200      	movs	r2, #0
 80009c0:	701a      	strb	r2, [r3, #0]
      ir_running = 0;
 80009c2:	4b0c      	ldr	r3, [pc, #48]	@ (80009f4 <IR_SetTimeArrayValues+0x6c>)
 80009c4:	2200      	movs	r2, #0
 80009c6:	701a      	strb	r2, [r3, #0]
      uint8_t res = Ir_AnalyzeTimeArrayValues();
 80009c8:	f000 f81c 	bl	8000a04 <Ir_AnalyzeTimeArrayValues>
 80009cc:	4603      	mov	r3, r0
 80009ce:	73fb      	strb	r3, [r7, #15]
      if (res == 13)
 80009d0:	7bfb      	ldrb	r3, [r7, #15]
 80009d2:	2b0d      	cmp	r3, #13
 80009d4:	d10a      	bne.n	80009ec <IR_SetTimeArrayValues+0x64>
      {
        ir_DataReady = 1;
 80009d6:	4b0a      	ldr	r3, [pc, #40]	@ (8000a00 <IR_SetTimeArrayValues+0x78>)
 80009d8:	2201      	movs	r2, #1
 80009da:	701a      	strb	r2, [r3, #0]
  }
  else if (ir_running == 1)
  {
    ir_running = 2;
  }
}
 80009dc:	e006      	b.n	80009ec <IR_SetTimeArrayValues+0x64>
  else if (ir_running == 1)
 80009de:	4b05      	ldr	r3, [pc, #20]	@ (80009f4 <IR_SetTimeArrayValues+0x6c>)
 80009e0:	781b      	ldrb	r3, [r3, #0]
 80009e2:	2b01      	cmp	r3, #1
 80009e4:	d102      	bne.n	80009ec <IR_SetTimeArrayValues+0x64>
    ir_running = 2;
 80009e6:	4b03      	ldr	r3, [pc, #12]	@ (80009f4 <IR_SetTimeArrayValues+0x6c>)
 80009e8:	2202      	movs	r2, #2
 80009ea:	701a      	strb	r2, [r3, #0]
}
 80009ec:	bf00      	nop
 80009ee:	3710      	adds	r7, #16
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bd80      	pop	{r7, pc}
 80009f4:	2000007a 	.word	0x2000007a
 80009f8:	20000076 	.word	0x20000076
 80009fc:	20000034 	.word	0x20000034
 8000a00:	20000077 	.word	0x20000077

08000a04 <Ir_AnalyzeTimeArrayValues>:

// NEC IR Data Analysis Function
uint16_t Ir_AnalyzeTimeArrayValues(void)
{
 8000a04:	b480      	push	{r7}
 8000a06:	b083      	sub	sp, #12
 8000a08:	af00      	add	r7, sp, #0

  uint8_t address = 0, address_inv = 0, command = 0, command_inv = 0;
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	71fb      	strb	r3, [r7, #7]
 8000a0e:	2300      	movs	r3, #0
 8000a10:	71bb      	strb	r3, [r7, #6]
 8000a12:	2300      	movs	r3, #0
 8000a14:	717b      	strb	r3, [r7, #5]
 8000a16:	2300      	movs	r3, #0
 8000a18:	713b      	strb	r3, [r7, #4]

  // Validate NEC Frame Start Pulse (9ms + 4.5ms)
  if (ir_TimeValue[0] < 12500 || ir_TimeValue[0] > 14500)
 8000a1a:	4b3e      	ldr	r3, [pc, #248]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000a1c:	881b      	ldrh	r3, [r3, #0]
 8000a1e:	f243 02d3 	movw	r2, #12499	@ 0x30d3
 8000a22:	4293      	cmp	r3, r2
 8000a24:	d905      	bls.n	8000a32 <Ir_AnalyzeTimeArrayValues+0x2e>
 8000a26:	4b3b      	ldr	r3, [pc, #236]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000a28:	881b      	ldrh	r3, [r3, #0]
 8000a2a:	f643 02a4 	movw	r2, #14500	@ 0x38a4
 8000a2e:	4293      	cmp	r3, r2
 8000a30:	d901      	bls.n	8000a36 <Ir_AnalyzeTimeArrayValues+0x32>
  {
    return 1; // Invalid NEC frame
 8000a32:	2301      	movs	r3, #1
 8000a34:	e069      	b.n	8000b0a <Ir_AnalyzeTimeArrayValues+0x106>
  }

  // Decode 32-bit NEC frame (Address + Address_inv + Command + Command_inv)
  for (int i = 0; i <= 8; i++)
 8000a36:	2300      	movs	r3, #0
 8000a38:	603b      	str	r3, [r7, #0]
 8000a3a:	e04a      	b.n	8000ad2 <Ir_AnalyzeTimeArrayValues+0xce>
  {
    if (ir_TimeValue[i + 1 + 0] > 2000)
 8000a3c:	683b      	ldr	r3, [r7, #0]
 8000a3e:	3301      	adds	r3, #1
 8000a40:	4a34      	ldr	r2, [pc, #208]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000a42:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000a46:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000a4a:	d909      	bls.n	8000a60 <Ir_AnalyzeTimeArrayValues+0x5c>
      address |= (1 << i); // Logical 1 threshold
 8000a4c:	2201      	movs	r2, #1
 8000a4e:	683b      	ldr	r3, [r7, #0]
 8000a50:	fa02 f303 	lsl.w	r3, r2, r3
 8000a54:	b25a      	sxtb	r2, r3
 8000a56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a5a:	4313      	orrs	r3, r2
 8000a5c:	b25b      	sxtb	r3, r3
 8000a5e:	71fb      	strb	r3, [r7, #7]
    if (ir_TimeValue[i + 1 + 8] > 2000)
 8000a60:	683b      	ldr	r3, [r7, #0]
 8000a62:	3309      	adds	r3, #9
 8000a64:	4a2b      	ldr	r2, [pc, #172]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000a66:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000a6a:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000a6e:	d909      	bls.n	8000a84 <Ir_AnalyzeTimeArrayValues+0x80>
      address_inv |= (1 << i);
 8000a70:	2201      	movs	r2, #1
 8000a72:	683b      	ldr	r3, [r7, #0]
 8000a74:	fa02 f303 	lsl.w	r3, r2, r3
 8000a78:	b25a      	sxtb	r2, r3
 8000a7a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000a7e:	4313      	orrs	r3, r2
 8000a80:	b25b      	sxtb	r3, r3
 8000a82:	71bb      	strb	r3, [r7, #6]
    if (ir_TimeValue[i + 1 + 16] > 2000)
 8000a84:	683b      	ldr	r3, [r7, #0]
 8000a86:	3311      	adds	r3, #17
 8000a88:	4a22      	ldr	r2, [pc, #136]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000a8a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000a8e:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000a92:	d909      	bls.n	8000aa8 <Ir_AnalyzeTimeArrayValues+0xa4>
      command |= (1 << i);
 8000a94:	2201      	movs	r2, #1
 8000a96:	683b      	ldr	r3, [r7, #0]
 8000a98:	fa02 f303 	lsl.w	r3, r2, r3
 8000a9c:	b25a      	sxtb	r2, r3
 8000a9e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8000aa2:	4313      	orrs	r3, r2
 8000aa4:	b25b      	sxtb	r3, r3
 8000aa6:	717b      	strb	r3, [r7, #5]
    if (ir_TimeValue[i + 1 + 24] > 2000)
 8000aa8:	683b      	ldr	r3, [r7, #0]
 8000aaa:	3319      	adds	r3, #25
 8000aac:	4a19      	ldr	r2, [pc, #100]	@ (8000b14 <Ir_AnalyzeTimeArrayValues+0x110>)
 8000aae:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000ab2:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8000ab6:	d909      	bls.n	8000acc <Ir_AnalyzeTimeArrayValues+0xc8>
      command_inv |= (1 << i);
 8000ab8:	2201      	movs	r2, #1
 8000aba:	683b      	ldr	r3, [r7, #0]
 8000abc:	fa02 f303 	lsl.w	r3, r2, r3
 8000ac0:	b25a      	sxtb	r2, r3
 8000ac2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8000ac6:	4313      	orrs	r3, r2
 8000ac8:	b25b      	sxtb	r3, r3
 8000aca:	713b      	strb	r3, [r7, #4]
  for (int i = 0; i <= 8; i++)
 8000acc:	683b      	ldr	r3, [r7, #0]
 8000ace:	3301      	adds	r3, #1
 8000ad0:	603b      	str	r3, [r7, #0]
 8000ad2:	683b      	ldr	r3, [r7, #0]
 8000ad4:	2b08      	cmp	r3, #8
 8000ad6:	ddb1      	ble.n	8000a3c <Ir_AnalyzeTimeArrayValues+0x38>
  }

  // Validate Address and Command Integrity
  if ((address ^ address_inv) == 0xFF && (command ^ command_inv) == 0xFF)
 8000ad8:	79fa      	ldrb	r2, [r7, #7]
 8000ada:	79bb      	ldrb	r3, [r7, #6]
 8000adc:	4053      	eors	r3, r2
 8000ade:	b2db      	uxtb	r3, r3
 8000ae0:	2bff      	cmp	r3, #255	@ 0xff
 8000ae2:	d111      	bne.n	8000b08 <Ir_AnalyzeTimeArrayValues+0x104>
 8000ae4:	797a      	ldrb	r2, [r7, #5]
 8000ae6:	793b      	ldrb	r3, [r7, #4]
 8000ae8:	4053      	eors	r3, r2
 8000aea:	b2db      	uxtb	r3, r3
 8000aec:	2bff      	cmp	r3, #255	@ 0xff
 8000aee:	d10b      	bne.n	8000b08 <Ir_AnalyzeTimeArrayValues+0x104>
  {
    // NEC Protocol Successfully Decoded
    ir_Data = (address << 8) + command;
 8000af0:	79fb      	ldrb	r3, [r7, #7]
 8000af2:	b29b      	uxth	r3, r3
 8000af4:	021b      	lsls	r3, r3, #8
 8000af6:	b29a      	uxth	r2, r3
 8000af8:	797b      	ldrb	r3, [r7, #5]
 8000afa:	b29b      	uxth	r3, r3
 8000afc:	4413      	add	r3, r2
 8000afe:	b29a      	uxth	r2, r3
 8000b00:	4b05      	ldr	r3, [pc, #20]	@ (8000b18 <Ir_AnalyzeTimeArrayValues+0x114>)
 8000b02:	801a      	strh	r2, [r3, #0]
    return 13;
 8000b04:	230d      	movs	r3, #13
 8000b06:	e000      	b.n	8000b0a <Ir_AnalyzeTimeArrayValues+0x106>
  }

  return 0;
 8000b08:	2300      	movs	r3, #0
}
 8000b0a:	4618      	mov	r0, r3
 8000b0c:	370c      	adds	r7, #12
 8000b0e:	46bd      	mov	sp, r7
 8000b10:	bc80      	pop	{r7}
 8000b12:	4770      	bx	lr
 8000b14:	20000034 	.word	0x20000034
 8000b18:	20000078 	.word	0x20000078

08000b1c <Ir_GetData>:

uint16_t Ir_GetData(void)
{
 8000b1c:	b480      	push	{r7}
 8000b1e:	af00      	add	r7, sp, #0
  if (!ir_DataReady)
 8000b20:	4b07      	ldr	r3, [pc, #28]	@ (8000b40 <Ir_GetData+0x24>)
 8000b22:	781b      	ldrb	r3, [r3, #0]
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d101      	bne.n	8000b2c <Ir_GetData+0x10>
    return 0;
 8000b28:	2300      	movs	r3, #0
 8000b2a:	e004      	b.n	8000b36 <Ir_GetData+0x1a>
  else
  {
    ir_DataReady = 0;
 8000b2c:	4b04      	ldr	r3, [pc, #16]	@ (8000b40 <Ir_GetData+0x24>)
 8000b2e:	2200      	movs	r2, #0
 8000b30:	701a      	strb	r2, [r3, #0]
    return ir_Data;
 8000b32:	4b04      	ldr	r3, [pc, #16]	@ (8000b44 <Ir_GetData+0x28>)
 8000b34:	881b      	ldrh	r3, [r3, #0]
  }
}
 8000b36:	4618      	mov	r0, r3
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	bc80      	pop	{r7}
 8000b3c:	4770      	bx	lr
 8000b3e:	bf00      	nop
 8000b40:	20000077 	.word	0x20000077
 8000b44:	20000078 	.word	0x20000078

08000b48 <Ir_ResetRunning>:

void Ir_ResetRunning(void)
{
 8000b48:	b480      	push	{r7}
 8000b4a:	af00      	add	r7, sp, #0
  ir_running = 1;
 8000b4c:	4b04      	ldr	r3, [pc, #16]	@ (8000b60 <Ir_ResetRunning+0x18>)
 8000b4e:	2201      	movs	r2, #1
 8000b50:	701a      	strb	r2, [r3, #0]
  ir_ArrayIndex = 0;
 8000b52:	4b04      	ldr	r3, [pc, #16]	@ (8000b64 <Ir_ResetRunning+0x1c>)
 8000b54:	2200      	movs	r2, #0
 8000b56:	701a      	strb	r2, [r3, #0]
}
 8000b58:	bf00      	nop
 8000b5a:	46bd      	mov	sp, r7
 8000b5c:	bc80      	pop	{r7}
 8000b5e:	4770      	bx	lr
 8000b60:	2000007a 	.word	0x2000007a
 8000b64:	20000076 	.word	0x20000076

08000b68 <Segments_Scan>:

uint8_t segment_position = 0;
uint8_t segment_value[14] = {0};

void Segments_Scan(void)
{
 8000b68:	b580      	push	{r7, lr}
 8000b6a:	af00      	add	r7, sp, #0
    if (++segment_position > position_Level)
 8000b6c:	4b59      	ldr	r3, [pc, #356]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000b6e:	781b      	ldrb	r3, [r3, #0]
 8000b70:	3301      	adds	r3, #1
 8000b72:	b2da      	uxtb	r2, r3
 8000b74:	4b57      	ldr	r3, [pc, #348]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000b76:	701a      	strb	r2, [r3, #0]
 8000b78:	4b56      	ldr	r3, [pc, #344]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000b7a:	781a      	ldrb	r2, [r3, #0]
 8000b7c:	4b56      	ldr	r3, [pc, #344]	@ (8000cd8 <Segments_Scan+0x170>)
 8000b7e:	781b      	ldrb	r3, [r3, #0]
 8000b80:	429a      	cmp	r2, r3
 8000b82:	d902      	bls.n	8000b8a <Segments_Scan+0x22>
        segment_position = 0;
 8000b84:	4b53      	ldr	r3, [pc, #332]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000b86:	2200      	movs	r2, #0
 8000b88:	701a      	strb	r2, [r3, #0]

    HAL_GPIO_WritePin(SEG_H1, LOW);
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000b90:	4852      	ldr	r0, [pc, #328]	@ (8000cdc <Segments_Scan+0x174>)
 8000b92:	f002 fd4e 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(SEG_H2, LOW);
 8000b96:	2200      	movs	r2, #0
 8000b98:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000b9c:	4850      	ldr	r0, [pc, #320]	@ (8000ce0 <Segments_Scan+0x178>)
 8000b9e:	f002 fd48 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(SEG_M1, LOW);
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000ba8:	484d      	ldr	r0, [pc, #308]	@ (8000ce0 <Segments_Scan+0x178>)
 8000baa:	f002 fd42 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(SEG_M2, LOW);
 8000bae:	2200      	movs	r2, #0
 8000bb0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000bb4:	484a      	ldr	r0, [pc, #296]	@ (8000ce0 <Segments_Scan+0x178>)
 8000bb6:	f002 fd3c 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(SEG_S1, LOW);
 8000bba:	2200      	movs	r2, #0
 8000bbc:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000bc0:	4847      	ldr	r0, [pc, #284]	@ (8000ce0 <Segments_Scan+0x178>)
 8000bc2:	f002 fd36 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(SEG_S2, LOW);
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000bcc:	4844      	ldr	r0, [pc, #272]	@ (8000ce0 <Segments_Scan+0x178>)
 8000bce:	f002 fd30 	bl	8003632 <HAL_GPIO_WritePin>

    HAL_GPIO_WritePin(SEG_DAY, LOW);
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000bd8:	4841      	ldr	r0, [pc, #260]	@ (8000ce0 <Segments_Scan+0x178>)
 8000bda:	f002 fd2a 	bl	8003632 <HAL_GPIO_WritePin>

    Segment_Map(segment_value[segment_position]);
 8000bde:	4b3d      	ldr	r3, [pc, #244]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000be0:	781b      	ldrb	r3, [r3, #0]
 8000be2:	461a      	mov	r2, r3
 8000be4:	4b3f      	ldr	r3, [pc, #252]	@ (8000ce4 <Segments_Scan+0x17c>)
 8000be6:	5c9b      	ldrb	r3, [r3, r2]
 8000be8:	4618      	mov	r0, r3
 8000bea:	f000 f87d 	bl	8000ce8 <Segment_Map>

    switch (segment_position)
 8000bee:	4b39      	ldr	r3, [pc, #228]	@ (8000cd4 <Segments_Scan+0x16c>)
 8000bf0:	781b      	ldrb	r3, [r3, #0]
 8000bf2:	2b06      	cmp	r3, #6
 8000bf4:	d841      	bhi.n	8000c7a <Segments_Scan+0x112>
 8000bf6:	a201      	add	r2, pc, #4	@ (adr r2, 8000bfc <Segments_Scan+0x94>)
 8000bf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000bfc:	08000c19 	.word	0x08000c19
 8000c00:	08000c27 	.word	0x08000c27
 8000c04:	08000c35 	.word	0x08000c35
 8000c08:	08000c43 	.word	0x08000c43
 8000c0c:	08000c51 	.word	0x08000c51
 8000c10:	08000c5f 	.word	0x08000c5f
 8000c14:	08000c6d 	.word	0x08000c6d
    {
    case 0:
        HAL_GPIO_WritePin(SEG_H1, HIGH);
 8000c18:	2201      	movs	r2, #1
 8000c1a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000c1e:	482f      	ldr	r0, [pc, #188]	@ (8000cdc <Segments_Scan+0x174>)
 8000c20:	f002 fd07 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c24:	e054      	b.n	8000cd0 <Segments_Scan+0x168>
    case 1:
        HAL_GPIO_WritePin(SEG_H2, HIGH);
 8000c26:	2201      	movs	r2, #1
 8000c28:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000c2c:	482c      	ldr	r0, [pc, #176]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c2e:	f002 fd00 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c32:	e04d      	b.n	8000cd0 <Segments_Scan+0x168>
    case 2:
        HAL_GPIO_WritePin(SEG_M1, HIGH);
 8000c34:	2201      	movs	r2, #1
 8000c36:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000c3a:	4829      	ldr	r0, [pc, #164]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c3c:	f002 fcf9 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c40:	e046      	b.n	8000cd0 <Segments_Scan+0x168>
    case 3:
        HAL_GPIO_WritePin(SEG_M2, HIGH);
 8000c42:	2201      	movs	r2, #1
 8000c44:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c48:	4825      	ldr	r0, [pc, #148]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c4a:	f002 fcf2 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c4e:	e03f      	b.n	8000cd0 <Segments_Scan+0x168>
    case 4:
        HAL_GPIO_WritePin(SEG_S1, HIGH);
 8000c50:	2201      	movs	r2, #1
 8000c52:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000c56:	4822      	ldr	r0, [pc, #136]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c58:	f002 fceb 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c5c:	e038      	b.n	8000cd0 <Segments_Scan+0x168>
    case 5:
        HAL_GPIO_WritePin(SEG_S2, HIGH);
 8000c5e:	2201      	movs	r2, #1
 8000c60:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000c64:	481e      	ldr	r0, [pc, #120]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c66:	f002 fce4 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c6a:	e031      	b.n	8000cd0 <Segments_Scan+0x168>
    case 6:
        HAL_GPIO_WritePin(SEG_DAY, HIGH);
 8000c6c:	2201      	movs	r2, #1
 8000c6e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000c72:	481b      	ldr	r0, [pc, #108]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c74:	f002 fcdd 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000c78:	e02a      	b.n	8000cd0 <Segments_Scan+0x168>
    default:
        HAL_GPIO_WritePin(SEG_H1, LOW);
 8000c7a:	2200      	movs	r2, #0
 8000c7c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000c80:	4816      	ldr	r0, [pc, #88]	@ (8000cdc <Segments_Scan+0x174>)
 8000c82:	f002 fcd6 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_H2, LOW);
 8000c86:	2200      	movs	r2, #0
 8000c88:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000c8c:	4814      	ldr	r0, [pc, #80]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c8e:	f002 fcd0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_M1, LOW);
 8000c92:	2200      	movs	r2, #0
 8000c94:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000c98:	4811      	ldr	r0, [pc, #68]	@ (8000ce0 <Segments_Scan+0x178>)
 8000c9a:	f002 fcca 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_M2, LOW);
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000ca4:	480e      	ldr	r0, [pc, #56]	@ (8000ce0 <Segments_Scan+0x178>)
 8000ca6:	f002 fcc4 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_S1, LOW);
 8000caa:	2200      	movs	r2, #0
 8000cac:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8000cb0:	480b      	ldr	r0, [pc, #44]	@ (8000ce0 <Segments_Scan+0x178>)
 8000cb2:	f002 fcbe 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_S2, LOW);
 8000cb6:	2200      	movs	r2, #0
 8000cb8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000cbc:	4808      	ldr	r0, [pc, #32]	@ (8000ce0 <Segments_Scan+0x178>)
 8000cbe:	f002 fcb8 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(SEG_DAY, LOW);
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000cc8:	4805      	ldr	r0, [pc, #20]	@ (8000ce0 <Segments_Scan+0x178>)
 8000cca:	f002 fcb2 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000cce:	bf00      	nop
    }
}
 8000cd0:	bf00      	nop
 8000cd2:	bd80      	pop	{r7, pc}
 8000cd4:	2000007b 	.word	0x2000007b
 8000cd8:	20000003 	.word	0x20000003
 8000cdc:	40010c00 	.word	0x40010c00
 8000ce0:	40010800 	.word	0x40010800
 8000ce4:	2000007c 	.word	0x2000007c

08000ce8 <Segment_Map>:

void Segment_Map(uint8_t value)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	b082      	sub	sp, #8
 8000cec:	af00      	add	r7, sp, #0
 8000cee:	4603      	mov	r3, r0
 8000cf0:	71fb      	strb	r3, [r7, #7]
    switch (value)
 8000cf2:	79fb      	ldrb	r3, [r7, #7]
 8000cf4:	2b74      	cmp	r3, #116	@ 0x74
 8000cf6:	f200 84f1 	bhi.w	80016dc <Segment_Map+0x9f4>
 8000cfa:	a201      	add	r2, pc, #4	@ (adr r2, 8000d00 <Segment_Map+0x18>)
 8000cfc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d00:	08000f2b 	.word	0x08000f2b
 8000d04:	08000f7f 	.word	0x08000f7f
 8000d08:	08000fd3 	.word	0x08000fd3
 8000d0c:	08001027 	.word	0x08001027
 8000d10:	0800107b 	.word	0x0800107b
 8000d14:	080010cf 	.word	0x080010cf
 8000d18:	08001123 	.word	0x08001123
 8000d1c:	08001177 	.word	0x08001177
 8000d20:	080011cb 	.word	0x080011cb
 8000d24:	08001239 	.word	0x08001239
 8000d28:	080016dd 	.word	0x080016dd
 8000d2c:	080016dd 	.word	0x080016dd
 8000d30:	080016dd 	.word	0x080016dd
 8000d34:	080016dd 	.word	0x080016dd
 8000d38:	080016dd 	.word	0x080016dd
 8000d3c:	080016dd 	.word	0x080016dd
 8000d40:	080016dd 	.word	0x080016dd
 8000d44:	080016dd 	.word	0x080016dd
 8000d48:	080016dd 	.word	0x080016dd
 8000d4c:	080016dd 	.word	0x080016dd
 8000d50:	080016dd 	.word	0x080016dd
 8000d54:	080016dd 	.word	0x080016dd
 8000d58:	080016dd 	.word	0x080016dd
 8000d5c:	080016dd 	.word	0x080016dd
 8000d60:	080016dd 	.word	0x080016dd
 8000d64:	080016dd 	.word	0x080016dd
 8000d68:	080016dd 	.word	0x080016dd
 8000d6c:	080016dd 	.word	0x080016dd
 8000d70:	080016dd 	.word	0x080016dd
 8000d74:	080016dd 	.word	0x080016dd
 8000d78:	080016dd 	.word	0x080016dd
 8000d7c:	080016dd 	.word	0x080016dd
 8000d80:	080016dd 	.word	0x080016dd
 8000d84:	080016dd 	.word	0x080016dd
 8000d88:	080016dd 	.word	0x080016dd
 8000d8c:	080016dd 	.word	0x080016dd
 8000d90:	080016dd 	.word	0x080016dd
 8000d94:	080016dd 	.word	0x080016dd
 8000d98:	080016dd 	.word	0x080016dd
 8000d9c:	080016dd 	.word	0x080016dd
 8000da0:	080016dd 	.word	0x080016dd
 8000da4:	080016dd 	.word	0x080016dd
 8000da8:	080016dd 	.word	0x080016dd
 8000dac:	080016dd 	.word	0x080016dd
 8000db0:	080016dd 	.word	0x080016dd
 8000db4:	080016dd 	.word	0x080016dd
 8000db8:	080016dd 	.word	0x080016dd
 8000dbc:	080016dd 	.word	0x080016dd
 8000dc0:	080016dd 	.word	0x080016dd
 8000dc4:	080016dd 	.word	0x080016dd
 8000dc8:	080016dd 	.word	0x080016dd
 8000dcc:	080016dd 	.word	0x080016dd
 8000dd0:	080016dd 	.word	0x080016dd
 8000dd4:	080016dd 	.word	0x080016dd
 8000dd8:	080016dd 	.word	0x080016dd
 8000ddc:	080016dd 	.word	0x080016dd
 8000de0:	080016dd 	.word	0x080016dd
 8000de4:	080016dd 	.word	0x080016dd
 8000de8:	080016dd 	.word	0x080016dd
 8000dec:	080016dd 	.word	0x080016dd
 8000df0:	080016dd 	.word	0x080016dd
 8000df4:	080016dd 	.word	0x080016dd
 8000df8:	080016dd 	.word	0x080016dd
 8000dfc:	080016dd 	.word	0x080016dd
 8000e00:	080016dd 	.word	0x080016dd
 8000e04:	080015e1 	.word	0x080015e1
 8000e08:	080016dd 	.word	0x080016dd
 8000e0c:	080012e1 	.word	0x080012e1
 8000e10:	080016dd 	.word	0x080016dd
 8000e14:	08001485 	.word	0x08001485
 8000e18:	080016dd 	.word	0x080016dd
 8000e1c:	080016dd 	.word	0x080016dd
 8000e20:	08001389 	.word	0x08001389
 8000e24:	080016dd 	.word	0x080016dd
 8000e28:	080016dd 	.word	0x080016dd
 8000e2c:	080016dd 	.word	0x080016dd
 8000e30:	08001335 	.word	0x08001335
 8000e34:	080016dd 	.word	0x080016dd
 8000e38:	08000ed5 	.word	0x08000ed5
 8000e3c:	080016dd 	.word	0x080016dd
 8000e40:	080016dd 	.word	0x080016dd
 8000e44:	080016dd 	.word	0x080016dd
 8000e48:	080016dd 	.word	0x080016dd
 8000e4c:	080013dd 	.word	0x080013dd
 8000e50:	080016dd 	.word	0x080016dd
 8000e54:	08001431 	.word	0x08001431
 8000e58:	080016dd 	.word	0x080016dd
 8000e5c:	080016dd 	.word	0x080016dd
 8000e60:	080016dd 	.word	0x080016dd
 8000e64:	080016dd 	.word	0x080016dd
 8000e68:	080016dd 	.word	0x080016dd
 8000e6c:	080016dd 	.word	0x080016dd
 8000e70:	080016dd 	.word	0x080016dd
 8000e74:	080016dd 	.word	0x080016dd
 8000e78:	080016dd 	.word	0x080016dd
 8000e7c:	080016dd 	.word	0x080016dd
 8000e80:	080016dd 	.word	0x080016dd
 8000e84:	080016dd 	.word	0x080016dd
 8000e88:	080016dd 	.word	0x080016dd
 8000e8c:	080016dd 	.word	0x080016dd
 8000e90:	080016dd 	.word	0x080016dd
 8000e94:	080016dd 	.word	0x080016dd
 8000e98:	0800158d 	.word	0x0800158d
 8000e9c:	080016dd 	.word	0x080016dd
 8000ea0:	080016dd 	.word	0x080016dd
 8000ea4:	080016dd 	.word	0x080016dd
 8000ea8:	080016dd 	.word	0x080016dd
 8000eac:	080016dd 	.word	0x080016dd
 8000eb0:	080016dd 	.word	0x080016dd
 8000eb4:	080016dd 	.word	0x080016dd
 8000eb8:	080014d9 	.word	0x080014d9
 8000ebc:	0800128d 	.word	0x0800128d
 8000ec0:	080016dd 	.word	0x080016dd
 8000ec4:	080016dd 	.word	0x080016dd
 8000ec8:	08001635 	.word	0x08001635
 8000ecc:	08001689 	.word	0x08001689
 8000ed0:	0800152d 	.word	0x0800152d
    {
    case 'N':
        HAL_GPIO_WritePin(A, LOW);
 8000ed4:	2200      	movs	r2, #0
 8000ed6:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000eda:	48d4      	ldr	r0, [pc, #848]	@ (800122c <Segment_Map+0x544>)
 8000edc:	f002 fba9 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000ee6:	48d1      	ldr	r0, [pc, #836]	@ (800122c <Segment_Map+0x544>)
 8000ee8:	f002 fba3 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 8000eec:	2200      	movs	r2, #0
 8000eee:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000ef2:	48cf      	ldr	r0, [pc, #828]	@ (8001230 <Segment_Map+0x548>)
 8000ef4:	f002 fb9d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 8000ef8:	2200      	movs	r2, #0
 8000efa:	2101      	movs	r1, #1
 8000efc:	48cd      	ldr	r0, [pc, #820]	@ (8001234 <Segment_Map+0x54c>)
 8000efe:	f002 fb98 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 8000f02:	2200      	movs	r2, #0
 8000f04:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000f08:	48c9      	ldr	r0, [pc, #804]	@ (8001230 <Segment_Map+0x548>)
 8000f0a:	f002 fb92 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 8000f0e:	2200      	movs	r2, #0
 8000f10:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000f14:	48c5      	ldr	r0, [pc, #788]	@ (800122c <Segment_Map+0x544>)
 8000f16:	f002 fb8c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 8000f1a:	2200      	movs	r2, #0
 8000f1c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000f20:	48c3      	ldr	r0, [pc, #780]	@ (8001230 <Segment_Map+0x548>)
 8000f22:	f002 fb86 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000f26:	f000 bc03 	b.w	8001730 <Segment_Map+0xa48>
    case 0:
        HAL_GPIO_WritePin(A, HIGH);
 8000f2a:	2201      	movs	r2, #1
 8000f2c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000f30:	48be      	ldr	r0, [pc, #760]	@ (800122c <Segment_Map+0x544>)
 8000f32:	f002 fb7e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8000f36:	2201      	movs	r2, #1
 8000f38:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000f3c:	48bb      	ldr	r0, [pc, #748]	@ (800122c <Segment_Map+0x544>)
 8000f3e:	f002 fb78 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 8000f42:	2201      	movs	r2, #1
 8000f44:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000f48:	48b9      	ldr	r0, [pc, #740]	@ (8001230 <Segment_Map+0x548>)
 8000f4a:	f002 fb72 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8000f4e:	2201      	movs	r2, #1
 8000f50:	2101      	movs	r1, #1
 8000f52:	48b8      	ldr	r0, [pc, #736]	@ (8001234 <Segment_Map+0x54c>)
 8000f54:	f002 fb6d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8000f58:	2201      	movs	r2, #1
 8000f5a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000f5e:	48b4      	ldr	r0, [pc, #720]	@ (8001230 <Segment_Map+0x548>)
 8000f60:	f002 fb67 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8000f64:	2201      	movs	r2, #1
 8000f66:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000f6a:	48b0      	ldr	r0, [pc, #704]	@ (800122c <Segment_Map+0x544>)
 8000f6c:	f002 fb61 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 8000f70:	2200      	movs	r2, #0
 8000f72:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000f76:	48ae      	ldr	r0, [pc, #696]	@ (8001230 <Segment_Map+0x548>)
 8000f78:	f002 fb5b 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000f7c:	e3d8      	b.n	8001730 <Segment_Map+0xa48>
    case 1:
        HAL_GPIO_WritePin(A, LOW);
 8000f7e:	2200      	movs	r2, #0
 8000f80:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000f84:	48a9      	ldr	r0, [pc, #676]	@ (800122c <Segment_Map+0x544>)
 8000f86:	f002 fb54 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8000f8a:	2201      	movs	r2, #1
 8000f8c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000f90:	48a6      	ldr	r0, [pc, #664]	@ (800122c <Segment_Map+0x544>)
 8000f92:	f002 fb4e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 8000f96:	2201      	movs	r2, #1
 8000f98:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000f9c:	48a4      	ldr	r0, [pc, #656]	@ (8001230 <Segment_Map+0x548>)
 8000f9e:	f002 fb48 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	2101      	movs	r1, #1
 8000fa6:	48a3      	ldr	r0, [pc, #652]	@ (8001234 <Segment_Map+0x54c>)
 8000fa8:	f002 fb43 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 8000fac:	2200      	movs	r2, #0
 8000fae:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000fb2:	489f      	ldr	r0, [pc, #636]	@ (8001230 <Segment_Map+0x548>)
 8000fb4:	f002 fb3d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 8000fb8:	2200      	movs	r2, #0
 8000fba:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000fbe:	489b      	ldr	r0, [pc, #620]	@ (800122c <Segment_Map+0x544>)
 8000fc0:	f002 fb37 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000fca:	4899      	ldr	r0, [pc, #612]	@ (8001230 <Segment_Map+0x548>)
 8000fcc:	f002 fb31 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8000fd0:	e3ae      	b.n	8001730 <Segment_Map+0xa48>
    case 2:
        HAL_GPIO_WritePin(A, HIGH);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000fd8:	4894      	ldr	r0, [pc, #592]	@ (800122c <Segment_Map+0x544>)
 8000fda:	f002 fb2a 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8000fe4:	4891      	ldr	r0, [pc, #580]	@ (800122c <Segment_Map+0x544>)
 8000fe6:	f002 fb24 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 8000fea:	2200      	movs	r2, #0
 8000fec:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8000ff0:	488f      	ldr	r0, [pc, #572]	@ (8001230 <Segment_Map+0x548>)
 8000ff2:	f002 fb1e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8000ff6:	2201      	movs	r2, #1
 8000ff8:	2101      	movs	r1, #1
 8000ffa:	488e      	ldr	r0, [pc, #568]	@ (8001234 <Segment_Map+0x54c>)
 8000ffc:	f002 fb19 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001000:	2201      	movs	r2, #1
 8001002:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001006:	488a      	ldr	r0, [pc, #552]	@ (8001230 <Segment_Map+0x548>)
 8001008:	f002 fb13 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 800100c:	2200      	movs	r2, #0
 800100e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001012:	4886      	ldr	r0, [pc, #536]	@ (800122c <Segment_Map+0x544>)
 8001014:	f002 fb0d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001018:	2201      	movs	r2, #1
 800101a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800101e:	4884      	ldr	r0, [pc, #528]	@ (8001230 <Segment_Map+0x548>)
 8001020:	f002 fb07 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001024:	e384      	b.n	8001730 <Segment_Map+0xa48>
    case 3:
        HAL_GPIO_WritePin(A, HIGH);
 8001026:	2201      	movs	r2, #1
 8001028:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800102c:	487f      	ldr	r0, [pc, #508]	@ (800122c <Segment_Map+0x544>)
 800102e:	f002 fb00 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001032:	2201      	movs	r2, #1
 8001034:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001038:	487c      	ldr	r0, [pc, #496]	@ (800122c <Segment_Map+0x544>)
 800103a:	f002 fafa 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 800103e:	2201      	movs	r2, #1
 8001040:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001044:	487a      	ldr	r0, [pc, #488]	@ (8001230 <Segment_Map+0x548>)
 8001046:	f002 faf4 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 800104a:	2201      	movs	r2, #1
 800104c:	2101      	movs	r1, #1
 800104e:	4879      	ldr	r0, [pc, #484]	@ (8001234 <Segment_Map+0x54c>)
 8001050:	f002 faef 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 8001054:	2200      	movs	r2, #0
 8001056:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800105a:	4875      	ldr	r0, [pc, #468]	@ (8001230 <Segment_Map+0x548>)
 800105c:	f002 fae9 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 8001060:	2200      	movs	r2, #0
 8001062:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001066:	4871      	ldr	r0, [pc, #452]	@ (800122c <Segment_Map+0x544>)
 8001068:	f002 fae3 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 800106c:	2201      	movs	r2, #1
 800106e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001072:	486f      	ldr	r0, [pc, #444]	@ (8001230 <Segment_Map+0x548>)
 8001074:	f002 fadd 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001078:	e35a      	b.n	8001730 <Segment_Map+0xa48>
    case 4:
        HAL_GPIO_WritePin(A, LOW);
 800107a:	2200      	movs	r2, #0
 800107c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001080:	486a      	ldr	r0, [pc, #424]	@ (800122c <Segment_Map+0x544>)
 8001082:	f002 fad6 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001086:	2201      	movs	r2, #1
 8001088:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800108c:	4867      	ldr	r0, [pc, #412]	@ (800122c <Segment_Map+0x544>)
 800108e:	f002 fad0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 8001092:	2201      	movs	r2, #1
 8001094:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001098:	4865      	ldr	r0, [pc, #404]	@ (8001230 <Segment_Map+0x548>)
 800109a:	f002 faca 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 800109e:	2200      	movs	r2, #0
 80010a0:	2101      	movs	r1, #1
 80010a2:	4864      	ldr	r0, [pc, #400]	@ (8001234 <Segment_Map+0x54c>)
 80010a4:	f002 fac5 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 80010a8:	2200      	movs	r2, #0
 80010aa:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80010ae:	4860      	ldr	r0, [pc, #384]	@ (8001230 <Segment_Map+0x548>)
 80010b0:	f002 fabf 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 80010b4:	2201      	movs	r2, #1
 80010b6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80010ba:	485c      	ldr	r0, [pc, #368]	@ (800122c <Segment_Map+0x544>)
 80010bc:	f002 fab9 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 80010c0:	2201      	movs	r2, #1
 80010c2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80010c6:	485a      	ldr	r0, [pc, #360]	@ (8001230 <Segment_Map+0x548>)
 80010c8:	f002 fab3 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80010cc:	e330      	b.n	8001730 <Segment_Map+0xa48>
    case 5:
        HAL_GPIO_WritePin(A, HIGH);
 80010ce:	2201      	movs	r2, #1
 80010d0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80010d4:	4855      	ldr	r0, [pc, #340]	@ (800122c <Segment_Map+0x544>)
 80010d6:	f002 faac 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 80010da:	2200      	movs	r2, #0
 80010dc:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80010e0:	4852      	ldr	r0, [pc, #328]	@ (800122c <Segment_Map+0x544>)
 80010e2:	f002 faa6 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80010e6:	2201      	movs	r2, #1
 80010e8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80010ec:	4850      	ldr	r0, [pc, #320]	@ (8001230 <Segment_Map+0x548>)
 80010ee:	f002 faa0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 80010f2:	2201      	movs	r2, #1
 80010f4:	2101      	movs	r1, #1
 80010f6:	484f      	ldr	r0, [pc, #316]	@ (8001234 <Segment_Map+0x54c>)
 80010f8:	f002 fa9b 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 80010fc:	2200      	movs	r2, #0
 80010fe:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001102:	484b      	ldr	r0, [pc, #300]	@ (8001230 <Segment_Map+0x548>)
 8001104:	f002 fa95 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8001108:	2201      	movs	r2, #1
 800110a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800110e:	4847      	ldr	r0, [pc, #284]	@ (800122c <Segment_Map+0x544>)
 8001110:	f002 fa8f 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001114:	2201      	movs	r2, #1
 8001116:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800111a:	4845      	ldr	r0, [pc, #276]	@ (8001230 <Segment_Map+0x548>)
 800111c:	f002 fa89 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001120:	e306      	b.n	8001730 <Segment_Map+0xa48>
    case 6:
        HAL_GPIO_WritePin(A, HIGH);
 8001122:	2201      	movs	r2, #1
 8001124:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001128:	4840      	ldr	r0, [pc, #256]	@ (800122c <Segment_Map+0x544>)
 800112a:	f002 fa82 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 800112e:	2200      	movs	r2, #0
 8001130:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001134:	483d      	ldr	r0, [pc, #244]	@ (800122c <Segment_Map+0x544>)
 8001136:	f002 fa7c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 800113a:	2201      	movs	r2, #1
 800113c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001140:	483b      	ldr	r0, [pc, #236]	@ (8001230 <Segment_Map+0x548>)
 8001142:	f002 fa76 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001146:	2201      	movs	r2, #1
 8001148:	2101      	movs	r1, #1
 800114a:	483a      	ldr	r0, [pc, #232]	@ (8001234 <Segment_Map+0x54c>)
 800114c:	f002 fa71 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001150:	2201      	movs	r2, #1
 8001152:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001156:	4836      	ldr	r0, [pc, #216]	@ (8001230 <Segment_Map+0x548>)
 8001158:	f002 fa6b 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 800115c:	2201      	movs	r2, #1
 800115e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001162:	4832      	ldr	r0, [pc, #200]	@ (800122c <Segment_Map+0x544>)
 8001164:	f002 fa65 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001168:	2201      	movs	r2, #1
 800116a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800116e:	4830      	ldr	r0, [pc, #192]	@ (8001230 <Segment_Map+0x548>)
 8001170:	f002 fa5f 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001174:	e2dc      	b.n	8001730 <Segment_Map+0xa48>
    case 7:
        HAL_GPIO_WritePin(A, HIGH);
 8001176:	2201      	movs	r2, #1
 8001178:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800117c:	482b      	ldr	r0, [pc, #172]	@ (800122c <Segment_Map+0x544>)
 800117e:	f002 fa58 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001182:	2201      	movs	r2, #1
 8001184:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001188:	4828      	ldr	r0, [pc, #160]	@ (800122c <Segment_Map+0x544>)
 800118a:	f002 fa52 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 800118e:	2201      	movs	r2, #1
 8001190:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001194:	4826      	ldr	r0, [pc, #152]	@ (8001230 <Segment_Map+0x548>)
 8001196:	f002 fa4c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 800119a:	2200      	movs	r2, #0
 800119c:	2101      	movs	r1, #1
 800119e:	4825      	ldr	r0, [pc, #148]	@ (8001234 <Segment_Map+0x54c>)
 80011a0:	f002 fa47 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 80011a4:	2200      	movs	r2, #0
 80011a6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80011aa:	4821      	ldr	r0, [pc, #132]	@ (8001230 <Segment_Map+0x548>)
 80011ac:	f002 fa41 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 80011b0:	2200      	movs	r2, #0
 80011b2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80011b6:	481d      	ldr	r0, [pc, #116]	@ (800122c <Segment_Map+0x544>)
 80011b8:	f002 fa3b 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 80011bc:	2200      	movs	r2, #0
 80011be:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80011c2:	481b      	ldr	r0, [pc, #108]	@ (8001230 <Segment_Map+0x548>)
 80011c4:	f002 fa35 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80011c8:	e2b2      	b.n	8001730 <Segment_Map+0xa48>
    case 8:
        HAL_GPIO_WritePin(A, HIGH);
 80011ca:	2201      	movs	r2, #1
 80011cc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011d0:	4816      	ldr	r0, [pc, #88]	@ (800122c <Segment_Map+0x544>)
 80011d2:	f002 fa2e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(A, HIGH);
 80011d6:	2201      	movs	r2, #1
 80011d8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80011dc:	4813      	ldr	r0, [pc, #76]	@ (800122c <Segment_Map+0x544>)
 80011de:	f002 fa28 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 80011e2:	2201      	movs	r2, #1
 80011e4:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80011e8:	4810      	ldr	r0, [pc, #64]	@ (800122c <Segment_Map+0x544>)
 80011ea:	f002 fa22 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80011ee:	2201      	movs	r2, #1
 80011f0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80011f4:	480e      	ldr	r0, [pc, #56]	@ (8001230 <Segment_Map+0x548>)
 80011f6:	f002 fa1c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 80011fa:	2201      	movs	r2, #1
 80011fc:	2101      	movs	r1, #1
 80011fe:	480d      	ldr	r0, [pc, #52]	@ (8001234 <Segment_Map+0x54c>)
 8001200:	f002 fa17 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001204:	2201      	movs	r2, #1
 8001206:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800120a:	4809      	ldr	r0, [pc, #36]	@ (8001230 <Segment_Map+0x548>)
 800120c:	f002 fa11 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8001210:	2201      	movs	r2, #1
 8001212:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001216:	4805      	ldr	r0, [pc, #20]	@ (800122c <Segment_Map+0x544>)
 8001218:	f002 fa0b 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 800121c:	2201      	movs	r2, #1
 800121e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001222:	4803      	ldr	r0, [pc, #12]	@ (8001230 <Segment_Map+0x548>)
 8001224:	f002 fa05 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001228:	e282      	b.n	8001730 <Segment_Map+0xa48>
 800122a:	bf00      	nop
 800122c:	40010c00 	.word	0x40010c00
 8001230:	40011000 	.word	0x40011000
 8001234:	40010800 	.word	0x40010800
    case 9:
        HAL_GPIO_WritePin(A, HIGH);
 8001238:	2201      	movs	r2, #1
 800123a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800123e:	48d0      	ldr	r0, [pc, #832]	@ (8001580 <Segment_Map+0x898>)
 8001240:	f002 f9f7 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001244:	2201      	movs	r2, #1
 8001246:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800124a:	48cd      	ldr	r0, [pc, #820]	@ (8001580 <Segment_Map+0x898>)
 800124c:	f002 f9f1 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 8001250:	2201      	movs	r2, #1
 8001252:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001256:	48cb      	ldr	r0, [pc, #812]	@ (8001584 <Segment_Map+0x89c>)
 8001258:	f002 f9eb 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 800125c:	2201      	movs	r2, #1
 800125e:	2101      	movs	r1, #1
 8001260:	48c9      	ldr	r0, [pc, #804]	@ (8001588 <Segment_Map+0x8a0>)
 8001262:	f002 f9e6 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 8001266:	2200      	movs	r2, #0
 8001268:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800126c:	48c5      	ldr	r0, [pc, #788]	@ (8001584 <Segment_Map+0x89c>)
 800126e:	f002 f9e0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8001272:	2201      	movs	r2, #1
 8001274:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001278:	48c1      	ldr	r0, [pc, #772]	@ (8001580 <Segment_Map+0x898>)
 800127a:	f002 f9da 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 800127e:	2201      	movs	r2, #1
 8001280:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001284:	48bf      	ldr	r0, [pc, #764]	@ (8001584 <Segment_Map+0x89c>)
 8001286:	f002 f9d4 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 800128a:	e251      	b.n	8001730 <Segment_Map+0xa48>
    case 'o':
        HAL_GPIO_WritePin(A, HIGH);
 800128c:	2201      	movs	r2, #1
 800128e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001292:	48bb      	ldr	r0, [pc, #748]	@ (8001580 <Segment_Map+0x898>)
 8001294:	f002 f9cd 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001298:	2201      	movs	r2, #1
 800129a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800129e:	48b8      	ldr	r0, [pc, #736]	@ (8001580 <Segment_Map+0x898>)
 80012a0:	f002 f9c7 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 80012a4:	2200      	movs	r2, #0
 80012a6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80012aa:	48b6      	ldr	r0, [pc, #728]	@ (8001584 <Segment_Map+0x89c>)
 80012ac:	f002 f9c1 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 80012b0:	2200      	movs	r2, #0
 80012b2:	2101      	movs	r1, #1
 80012b4:	48b4      	ldr	r0, [pc, #720]	@ (8001588 <Segment_Map+0x8a0>)
 80012b6:	f002 f9bc 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 80012ba:	2200      	movs	r2, #0
 80012bc:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80012c0:	48b0      	ldr	r0, [pc, #704]	@ (8001584 <Segment_Map+0x89c>)
 80012c2:	f002 f9b6 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 80012c6:	2201      	movs	r2, #1
 80012c8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80012cc:	48ac      	ldr	r0, [pc, #688]	@ (8001580 <Segment_Map+0x898>)
 80012ce:	f002 f9b0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 80012d2:	2201      	movs	r2, #1
 80012d4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80012d8:	48aa      	ldr	r0, [pc, #680]	@ (8001584 <Segment_Map+0x89c>)
 80012da:	f002 f9aa 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80012de:	e227      	b.n	8001730 <Segment_Map+0xa48>
    case 'C':
        HAL_GPIO_WritePin(A, HIGH);
 80012e0:	2201      	movs	r2, #1
 80012e2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80012e6:	48a6      	ldr	r0, [pc, #664]	@ (8001580 <Segment_Map+0x898>)
 80012e8:	f002 f9a3 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 80012ec:	2200      	movs	r2, #0
 80012ee:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80012f2:	48a3      	ldr	r0, [pc, #652]	@ (8001580 <Segment_Map+0x898>)
 80012f4:	f002 f99d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 80012f8:	2200      	movs	r2, #0
 80012fa:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80012fe:	48a1      	ldr	r0, [pc, #644]	@ (8001584 <Segment_Map+0x89c>)
 8001300:	f002 f997 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001304:	2201      	movs	r2, #1
 8001306:	2101      	movs	r1, #1
 8001308:	489f      	ldr	r0, [pc, #636]	@ (8001588 <Segment_Map+0x8a0>)
 800130a:	f002 f992 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 800130e:	2201      	movs	r2, #1
 8001310:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001314:	489b      	ldr	r0, [pc, #620]	@ (8001584 <Segment_Map+0x89c>)
 8001316:	f002 f98c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 800131a:	2201      	movs	r2, #1
 800131c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001320:	4897      	ldr	r0, [pc, #604]	@ (8001580 <Segment_Map+0x898>)
 8001322:	f002 f986 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 8001326:	2200      	movs	r2, #0
 8001328:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800132c:	4895      	ldr	r0, [pc, #596]	@ (8001584 <Segment_Map+0x89c>)
 800132e:	f002 f980 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001332:	e1fd      	b.n	8001730 <Segment_Map+0xa48>
    case 'L':
        HAL_GPIO_WritePin(A, LOW);
 8001334:	2200      	movs	r2, #0
 8001336:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800133a:	4891      	ldr	r0, [pc, #580]	@ (8001580 <Segment_Map+0x898>)
 800133c:	f002 f979 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001340:	2200      	movs	r2, #0
 8001342:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001346:	488e      	ldr	r0, [pc, #568]	@ (8001580 <Segment_Map+0x898>)
 8001348:	f002 f973 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 800134c:	2200      	movs	r2, #0
 800134e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001352:	488c      	ldr	r0, [pc, #560]	@ (8001584 <Segment_Map+0x89c>)
 8001354:	f002 f96d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001358:	2201      	movs	r2, #1
 800135a:	2101      	movs	r1, #1
 800135c:	488a      	ldr	r0, [pc, #552]	@ (8001588 <Segment_Map+0x8a0>)
 800135e:	f002 f968 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001362:	2201      	movs	r2, #1
 8001364:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001368:	4886      	ldr	r0, [pc, #536]	@ (8001584 <Segment_Map+0x89c>)
 800136a:	f002 f962 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 800136e:	2201      	movs	r2, #1
 8001370:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001374:	4882      	ldr	r0, [pc, #520]	@ (8001580 <Segment_Map+0x898>)
 8001376:	f002 f95c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 800137a:	2200      	movs	r2, #0
 800137c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001380:	4880      	ldr	r0, [pc, #512]	@ (8001584 <Segment_Map+0x89c>)
 8001382:	f002 f956 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001386:	e1d3      	b.n	8001730 <Segment_Map+0xa48>
    case 'H':
        HAL_GPIO_WritePin(A, LOW);
 8001388:	2200      	movs	r2, #0
 800138a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800138e:	487c      	ldr	r0, [pc, #496]	@ (8001580 <Segment_Map+0x898>)
 8001390:	f002 f94f 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 8001394:	2201      	movs	r2, #1
 8001396:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800139a:	4879      	ldr	r0, [pc, #484]	@ (8001580 <Segment_Map+0x898>)
 800139c:	f002 f949 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80013a0:	2201      	movs	r2, #1
 80013a2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80013a6:	4877      	ldr	r0, [pc, #476]	@ (8001584 <Segment_Map+0x89c>)
 80013a8:	f002 f943 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 80013ac:	2200      	movs	r2, #0
 80013ae:	2101      	movs	r1, #1
 80013b0:	4875      	ldr	r0, [pc, #468]	@ (8001588 <Segment_Map+0x8a0>)
 80013b2:	f002 f93e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 80013b6:	2201      	movs	r2, #1
 80013b8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80013bc:	4871      	ldr	r0, [pc, #452]	@ (8001584 <Segment_Map+0x89c>)
 80013be:	f002 f938 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 80013c2:	2201      	movs	r2, #1
 80013c4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80013c8:	486d      	ldr	r0, [pc, #436]	@ (8001580 <Segment_Map+0x898>)
 80013ca:	f002 f932 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 80013ce:	2201      	movs	r2, #1
 80013d0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80013d4:	486b      	ldr	r0, [pc, #428]	@ (8001584 <Segment_Map+0x89c>)
 80013d6:	f002 f92c 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80013da:	e1a9      	b.n	8001730 <Segment_Map+0xa48>
    case 'S':
        HAL_GPIO_WritePin(A, HIGH);
 80013dc:	2201      	movs	r2, #1
 80013de:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80013e2:	4867      	ldr	r0, [pc, #412]	@ (8001580 <Segment_Map+0x898>)
 80013e4:	f002 f925 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 80013e8:	2200      	movs	r2, #0
 80013ea:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80013ee:	4864      	ldr	r0, [pc, #400]	@ (8001580 <Segment_Map+0x898>)
 80013f0:	f002 f91f 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80013f4:	2201      	movs	r2, #1
 80013f6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80013fa:	4862      	ldr	r0, [pc, #392]	@ (8001584 <Segment_Map+0x89c>)
 80013fc:	f002 f919 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001400:	2201      	movs	r2, #1
 8001402:	2101      	movs	r1, #1
 8001404:	4860      	ldr	r0, [pc, #384]	@ (8001588 <Segment_Map+0x8a0>)
 8001406:	f002 f914 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 800140a:	2200      	movs	r2, #0
 800140c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001410:	485c      	ldr	r0, [pc, #368]	@ (8001584 <Segment_Map+0x89c>)
 8001412:	f002 f90e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8001416:	2201      	movs	r2, #1
 8001418:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800141c:	4858      	ldr	r0, [pc, #352]	@ (8001580 <Segment_Map+0x898>)
 800141e:	f002 f908 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001422:	2201      	movs	r2, #1
 8001424:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001428:	4856      	ldr	r0, [pc, #344]	@ (8001584 <Segment_Map+0x89c>)
 800142a:	f002 f902 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 800142e:	e17f      	b.n	8001730 <Segment_Map+0xa48>
    case 'U':
        HAL_GPIO_WritePin(A, LOW);
 8001430:	2200      	movs	r2, #0
 8001432:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001436:	4852      	ldr	r0, [pc, #328]	@ (8001580 <Segment_Map+0x898>)
 8001438:	f002 f8fb 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 800143c:	2201      	movs	r2, #1
 800143e:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001442:	484f      	ldr	r0, [pc, #316]	@ (8001580 <Segment_Map+0x898>)
 8001444:	f002 f8f5 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 8001448:	2201      	movs	r2, #1
 800144a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800144e:	484d      	ldr	r0, [pc, #308]	@ (8001584 <Segment_Map+0x89c>)
 8001450:	f002 f8ef 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001454:	2201      	movs	r2, #1
 8001456:	2101      	movs	r1, #1
 8001458:	484b      	ldr	r0, [pc, #300]	@ (8001588 <Segment_Map+0x8a0>)
 800145a:	f002 f8ea 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 800145e:	2201      	movs	r2, #1
 8001460:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001464:	4847      	ldr	r0, [pc, #284]	@ (8001584 <Segment_Map+0x89c>)
 8001466:	f002 f8e4 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 800146a:	2201      	movs	r2, #1
 800146c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001470:	4843      	ldr	r0, [pc, #268]	@ (8001580 <Segment_Map+0x898>)
 8001472:	f002 f8de 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 8001476:	2200      	movs	r2, #0
 8001478:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800147c:	4841      	ldr	r0, [pc, #260]	@ (8001584 <Segment_Map+0x89c>)
 800147e:	f002 f8d8 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001482:	e155      	b.n	8001730 <Segment_Map+0xa48>
    case 'E':
        HAL_GPIO_WritePin(A, HIGH);
 8001484:	2201      	movs	r2, #1
 8001486:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800148a:	483d      	ldr	r0, [pc, #244]	@ (8001580 <Segment_Map+0x898>)
 800148c:	f002 f8d1 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001490:	2200      	movs	r2, #0
 8001492:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001496:	483a      	ldr	r0, [pc, #232]	@ (8001580 <Segment_Map+0x898>)
 8001498:	f002 f8cb 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 800149c:	2200      	movs	r2, #0
 800149e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80014a2:	4838      	ldr	r0, [pc, #224]	@ (8001584 <Segment_Map+0x89c>)
 80014a4:	f002 f8c5 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 80014a8:	2201      	movs	r2, #1
 80014aa:	2101      	movs	r1, #1
 80014ac:	4836      	ldr	r0, [pc, #216]	@ (8001588 <Segment_Map+0x8a0>)
 80014ae:	f002 f8c0 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 80014b2:	2201      	movs	r2, #1
 80014b4:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80014b8:	4832      	ldr	r0, [pc, #200]	@ (8001584 <Segment_Map+0x89c>)
 80014ba:	f002 f8ba 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 80014be:	2201      	movs	r2, #1
 80014c0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80014c4:	482e      	ldr	r0, [pc, #184]	@ (8001580 <Segment_Map+0x898>)
 80014c6:	f002 f8b4 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 80014ca:	2201      	movs	r2, #1
 80014cc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80014d0:	482c      	ldr	r0, [pc, #176]	@ (8001584 <Segment_Map+0x89c>)
 80014d2:	f002 f8ae 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80014d6:	e12b      	b.n	8001730 <Segment_Map+0xa48>
    case 'n':
        HAL_GPIO_WritePin(A, LOW);
 80014d8:	2200      	movs	r2, #0
 80014da:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80014de:	4828      	ldr	r0, [pc, #160]	@ (8001580 <Segment_Map+0x898>)
 80014e0:	f002 f8a7 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 80014e4:	2200      	movs	r2, #0
 80014e6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80014ea:	4825      	ldr	r0, [pc, #148]	@ (8001580 <Segment_Map+0x898>)
 80014ec:	f002 f8a1 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80014f0:	2201      	movs	r2, #1
 80014f2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80014f6:	4823      	ldr	r0, [pc, #140]	@ (8001584 <Segment_Map+0x89c>)
 80014f8:	f002 f89b 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 80014fc:	2200      	movs	r2, #0
 80014fe:	2101      	movs	r1, #1
 8001500:	4821      	ldr	r0, [pc, #132]	@ (8001588 <Segment_Map+0x8a0>)
 8001502:	f002 f896 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001506:	2201      	movs	r2, #1
 8001508:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800150c:	481d      	ldr	r0, [pc, #116]	@ (8001584 <Segment_Map+0x89c>)
 800150e:	f002 f890 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 8001512:	2200      	movs	r2, #0
 8001514:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001518:	4819      	ldr	r0, [pc, #100]	@ (8001580 <Segment_Map+0x898>)
 800151a:	f002 f88a 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 800151e:	2201      	movs	r2, #1
 8001520:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001524:	4817      	ldr	r0, [pc, #92]	@ (8001584 <Segment_Map+0x89c>)
 8001526:	f002 f884 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 800152a:	e101      	b.n	8001730 <Segment_Map+0xa48>
    case 't':
        HAL_GPIO_WritePin(A, LOW);
 800152c:	2200      	movs	r2, #0
 800152e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001532:	4813      	ldr	r0, [pc, #76]	@ (8001580 <Segment_Map+0x898>)
 8001534:	f002 f87d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001538:	2200      	movs	r2, #0
 800153a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800153e:	4810      	ldr	r0, [pc, #64]	@ (8001580 <Segment_Map+0x898>)
 8001540:	f002 f877 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 8001544:	2200      	movs	r2, #0
 8001546:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800154a:	480e      	ldr	r0, [pc, #56]	@ (8001584 <Segment_Map+0x89c>)
 800154c:	f002 f871 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, HIGH);
 8001550:	2201      	movs	r2, #1
 8001552:	2101      	movs	r1, #1
 8001554:	480c      	ldr	r0, [pc, #48]	@ (8001588 <Segment_Map+0x8a0>)
 8001556:	f002 f86c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 800155a:	2201      	movs	r2, #1
 800155c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001560:	4808      	ldr	r0, [pc, #32]	@ (8001584 <Segment_Map+0x89c>)
 8001562:	f002 f866 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 8001566:	2201      	movs	r2, #1
 8001568:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800156c:	4804      	ldr	r0, [pc, #16]	@ (8001580 <Segment_Map+0x898>)
 800156e:	f002 f860 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001572:	2201      	movs	r2, #1
 8001574:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001578:	4802      	ldr	r0, [pc, #8]	@ (8001584 <Segment_Map+0x89c>)
 800157a:	f002 f85a 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 800157e:	e0d7      	b.n	8001730 <Segment_Map+0xa48>
 8001580:	40010c00 	.word	0x40010c00
 8001584:	40011000 	.word	0x40011000
 8001588:	40010800 	.word	0x40010800
     case 'f':
        HAL_GPIO_WritePin(A, HIGH);
 800158c:	2201      	movs	r2, #1
 800158e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001592:	4869      	ldr	r0, [pc, #420]	@ (8001738 <Segment_Map+0xa50>)
 8001594:	f002 f84d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001598:	2200      	movs	r2, #0
 800159a:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800159e:	4866      	ldr	r0, [pc, #408]	@ (8001738 <Segment_Map+0xa50>)
 80015a0:	f002 f847 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 80015a4:	2200      	movs	r2, #0
 80015a6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80015aa:	4864      	ldr	r0, [pc, #400]	@ (800173c <Segment_Map+0xa54>)
 80015ac:	f002 f841 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 80015b0:	2200      	movs	r2, #0
 80015b2:	2101      	movs	r1, #1
 80015b4:	4862      	ldr	r0, [pc, #392]	@ (8001740 <Segment_Map+0xa58>)
 80015b6:	f002 f83c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 80015ba:	2201      	movs	r2, #1
 80015bc:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80015c0:	485e      	ldr	r0, [pc, #376]	@ (800173c <Segment_Map+0xa54>)
 80015c2:	f002 f836 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 80015c6:	2201      	movs	r2, #1
 80015c8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80015cc:	485a      	ldr	r0, [pc, #360]	@ (8001738 <Segment_Map+0xa50>)
 80015ce:	f002 f830 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 80015d2:	2201      	movs	r2, #1
 80015d4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80015d8:	4858      	ldr	r0, [pc, #352]	@ (800173c <Segment_Map+0xa54>)
 80015da:	f002 f82a 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80015de:	e0a7      	b.n	8001730 <Segment_Map+0xa48>
    case 'A':
        HAL_GPIO_WritePin(A, HIGH);
 80015e0:	2201      	movs	r2, #1
 80015e2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80015e6:	4854      	ldr	r0, [pc, #336]	@ (8001738 <Segment_Map+0xa50>)
 80015e8:	f002 f823 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, HIGH);
 80015ec:	2201      	movs	r2, #1
 80015ee:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80015f2:	4851      	ldr	r0, [pc, #324]	@ (8001738 <Segment_Map+0xa50>)
 80015f4:	f002 f81d 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, HIGH);
 80015f8:	2201      	movs	r2, #1
 80015fa:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80015fe:	484f      	ldr	r0, [pc, #316]	@ (800173c <Segment_Map+0xa54>)
 8001600:	f002 f817 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 8001604:	2200      	movs	r2, #0
 8001606:	2101      	movs	r1, #1
 8001608:	484d      	ldr	r0, [pc, #308]	@ (8001740 <Segment_Map+0xa58>)
 800160a:	f002 f812 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 800160e:	2201      	movs	r2, #1
 8001610:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001614:	4849      	ldr	r0, [pc, #292]	@ (800173c <Segment_Map+0xa54>)
 8001616:	f002 f80c 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, HIGH);
 800161a:	2201      	movs	r2, #1
 800161c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001620:	4845      	ldr	r0, [pc, #276]	@ (8001738 <Segment_Map+0xa50>)
 8001622:	f002 f806 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001626:	2201      	movs	r2, #1
 8001628:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800162c:	4843      	ldr	r0, [pc, #268]	@ (800173c <Segment_Map+0xa54>)
 800162e:	f002 f800 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001632:	e07d      	b.n	8001730 <Segment_Map+0xa48>
    case 'r':
        HAL_GPIO_WritePin(A, LOW);
 8001634:	2200      	movs	r2, #0
 8001636:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800163a:	483f      	ldr	r0, [pc, #252]	@ (8001738 <Segment_Map+0xa50>)
 800163c:	f001 fff9 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001640:	2200      	movs	r2, #0
 8001642:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001646:	483c      	ldr	r0, [pc, #240]	@ (8001738 <Segment_Map+0xa50>)
 8001648:	f001 fff3 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 800164c:	2200      	movs	r2, #0
 800164e:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001652:	483a      	ldr	r0, [pc, #232]	@ (800173c <Segment_Map+0xa54>)
 8001654:	f001 ffed 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 8001658:	2200      	movs	r2, #0
 800165a:	2101      	movs	r1, #1
 800165c:	4838      	ldr	r0, [pc, #224]	@ (8001740 <Segment_Map+0xa58>)
 800165e:	f001 ffe8 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, HIGH);
 8001662:	2201      	movs	r2, #1
 8001664:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001668:	4834      	ldr	r0, [pc, #208]	@ (800173c <Segment_Map+0xa54>)
 800166a:	f001 ffe2 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 800166e:	2200      	movs	r2, #0
 8001670:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001674:	4830      	ldr	r0, [pc, #192]	@ (8001738 <Segment_Map+0xa50>)
 8001676:	f001 ffdc 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 800167a:	2201      	movs	r2, #1
 800167c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001680:	482e      	ldr	r0, [pc, #184]	@ (800173c <Segment_Map+0xa54>)
 8001682:	f001 ffd6 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 8001686:	e053      	b.n	8001730 <Segment_Map+0xa48>
    case 's': // saturday
        HAL_GPIO_WritePin(A, HIGH);
 8001688:	2201      	movs	r2, #1
 800168a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800168e:	482a      	ldr	r0, [pc, #168]	@ (8001738 <Segment_Map+0xa50>)
 8001690:	f001 ffcf 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 8001694:	2200      	movs	r2, #0
 8001696:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 800169a:	4827      	ldr	r0, [pc, #156]	@ (8001738 <Segment_Map+0xa50>)
 800169c:	f001 ffc9 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 80016a0:	2200      	movs	r2, #0
 80016a2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80016a6:	4825      	ldr	r0, [pc, #148]	@ (800173c <Segment_Map+0xa54>)
 80016a8:	f001 ffc3 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 80016ac:	2200      	movs	r2, #0
 80016ae:	2101      	movs	r1, #1
 80016b0:	4823      	ldr	r0, [pc, #140]	@ (8001740 <Segment_Map+0xa58>)
 80016b2:	f001 ffbe 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 80016b6:	2200      	movs	r2, #0
 80016b8:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80016bc:	481f      	ldr	r0, [pc, #124]	@ (800173c <Segment_Map+0xa54>)
 80016be:	f001 ffb8 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 80016c2:	2200      	movs	r2, #0
 80016c4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80016c8:	481b      	ldr	r0, [pc, #108]	@ (8001738 <Segment_Map+0xa50>)
 80016ca:	f001 ffb2 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, LOW);
 80016ce:	2200      	movs	r2, #0
 80016d0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80016d4:	4819      	ldr	r0, [pc, #100]	@ (800173c <Segment_Map+0xa54>)
 80016d6:	f001 ffac 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 80016da:	e029      	b.n	8001730 <Segment_Map+0xa48>

    default:
        HAL_GPIO_WritePin(A, LOW);
 80016dc:	2200      	movs	r2, #0
 80016de:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80016e2:	4815      	ldr	r0, [pc, #84]	@ (8001738 <Segment_Map+0xa50>)
 80016e4:	f001 ffa5 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(B, LOW);
 80016e8:	2200      	movs	r2, #0
 80016ea:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80016ee:	4812      	ldr	r0, [pc, #72]	@ (8001738 <Segment_Map+0xa50>)
 80016f0:	f001 ff9f 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(C, LOW);
 80016f4:	2200      	movs	r2, #0
 80016f6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80016fa:	4810      	ldr	r0, [pc, #64]	@ (800173c <Segment_Map+0xa54>)
 80016fc:	f001 ff99 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(D, LOW);
 8001700:	2200      	movs	r2, #0
 8001702:	2101      	movs	r1, #1
 8001704:	480e      	ldr	r0, [pc, #56]	@ (8001740 <Segment_Map+0xa58>)
 8001706:	f001 ff94 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(E, LOW);
 800170a:	2200      	movs	r2, #0
 800170c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001710:	480a      	ldr	r0, [pc, #40]	@ (800173c <Segment_Map+0xa54>)
 8001712:	f001 ff8e 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(F, LOW);
 8001716:	2200      	movs	r2, #0
 8001718:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800171c:	4806      	ldr	r0, [pc, #24]	@ (8001738 <Segment_Map+0xa50>)
 800171e:	f001 ff88 	bl	8003632 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(G, HIGH);
 8001722:	2201      	movs	r2, #1
 8001724:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001728:	4804      	ldr	r0, [pc, #16]	@ (800173c <Segment_Map+0xa54>)
 800172a:	f001 ff82 	bl	8003632 <HAL_GPIO_WritePin>
        break;
 800172e:	bf00      	nop
    }
}
 8001730:	bf00      	nop
 8001732:	3708      	adds	r7, #8
 8001734:	46bd      	mov	sp, r7
 8001736:	bd80      	pop	{r7, pc}
 8001738:	40010c00 	.word	0x40010c00
 800173c:	40011000 	.word	0x40011000
 8001740:	40010800 	.word	0x40010800

08001744 <Segment_Set>:

void Segment_Set(uint8_t seg, uint8_t value)
{
 8001744:	b480      	push	{r7}
 8001746:	b083      	sub	sp, #12
 8001748:	af00      	add	r7, sp, #0
 800174a:	4603      	mov	r3, r0
 800174c:	460a      	mov	r2, r1
 800174e:	71fb      	strb	r3, [r7, #7]
 8001750:	4613      	mov	r3, r2
 8001752:	71bb      	strb	r3, [r7, #6]

    segment_value[seg] = value;
 8001754:	79fb      	ldrb	r3, [r7, #7]
 8001756:	4904      	ldr	r1, [pc, #16]	@ (8001768 <Segment_Set+0x24>)
 8001758:	79ba      	ldrb	r2, [r7, #6]
 800175a:	54ca      	strb	r2, [r1, r3]
}
 800175c:	bf00      	nop
 800175e:	370c      	adds	r7, #12
 8001760:	46bd      	mov	sp, r7
 8001762:	bc80      	pop	{r7}
 8001764:	4770      	bx	lr
 8001766:	bf00      	nop
 8001768:	2000007c 	.word	0x2000007c

0800176c <MX_ADC1_Init>:
 800176c:	b580      	push	{r7, lr}
 800176e:	b084      	sub	sp, #16
 8001770:	af00      	add	r7, sp, #0
 8001772:	1d3b      	adds	r3, r7, #4
 8001774:	2200      	movs	r2, #0
 8001776:	601a      	str	r2, [r3, #0]
 8001778:	605a      	str	r2, [r3, #4]
 800177a:	609a      	str	r2, [r3, #8]
 800177c:	4b18      	ldr	r3, [pc, #96]	@ (80017e0 <MX_ADC1_Init+0x74>)
 800177e:	4a19      	ldr	r2, [pc, #100]	@ (80017e4 <MX_ADC1_Init+0x78>)
 8001780:	601a      	str	r2, [r3, #0]
 8001782:	4b17      	ldr	r3, [pc, #92]	@ (80017e0 <MX_ADC1_Init+0x74>)
 8001784:	2200      	movs	r2, #0
 8001786:	609a      	str	r2, [r3, #8]
 8001788:	4b15      	ldr	r3, [pc, #84]	@ (80017e0 <MX_ADC1_Init+0x74>)
 800178a:	2200      	movs	r2, #0
 800178c:	731a      	strb	r2, [r3, #12]
 800178e:	4b14      	ldr	r3, [pc, #80]	@ (80017e0 <MX_ADC1_Init+0x74>)
 8001790:	2200      	movs	r2, #0
 8001792:	751a      	strb	r2, [r3, #20]
 8001794:	4b12      	ldr	r3, [pc, #72]	@ (80017e0 <MX_ADC1_Init+0x74>)
 8001796:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 800179a:	61da      	str	r2, [r3, #28]
 800179c:	4b10      	ldr	r3, [pc, #64]	@ (80017e0 <MX_ADC1_Init+0x74>)
 800179e:	2200      	movs	r2, #0
 80017a0:	605a      	str	r2, [r3, #4]
 80017a2:	4b0f      	ldr	r3, [pc, #60]	@ (80017e0 <MX_ADC1_Init+0x74>)
 80017a4:	2201      	movs	r2, #1
 80017a6:	611a      	str	r2, [r3, #16]
 80017a8:	480d      	ldr	r0, [pc, #52]	@ (80017e0 <MX_ADC1_Init+0x74>)
 80017aa:	f001 fa87 	bl	8002cbc <HAL_ADC_Init>
 80017ae:	4603      	mov	r3, r0
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d001      	beq.n	80017b8 <MX_ADC1_Init+0x4c>
 80017b4:	f000 ffe6 	bl	8002784 <Error_Handler>
 80017b8:	2301      	movs	r3, #1
 80017ba:	607b      	str	r3, [r7, #4]
 80017bc:	2301      	movs	r3, #1
 80017be:	60bb      	str	r3, [r7, #8]
 80017c0:	2300      	movs	r3, #0
 80017c2:	60fb      	str	r3, [r7, #12]
 80017c4:	1d3b      	adds	r3, r7, #4
 80017c6:	4619      	mov	r1, r3
 80017c8:	4805      	ldr	r0, [pc, #20]	@ (80017e0 <MX_ADC1_Init+0x74>)
 80017ca:	f001 fb4f 	bl	8002e6c <HAL_ADC_ConfigChannel>
 80017ce:	4603      	mov	r3, r0
 80017d0:	2b00      	cmp	r3, #0
 80017d2:	d001      	beq.n	80017d8 <MX_ADC1_Init+0x6c>
 80017d4:	f000 ffd6 	bl	8002784 <Error_Handler>
 80017d8:	bf00      	nop
 80017da:	3710      	adds	r7, #16
 80017dc:	46bd      	mov	sp, r7
 80017de:	bd80      	pop	{r7, pc}
 80017e0:	2000008c 	.word	0x2000008c
 80017e4:	40012400 	.word	0x40012400

080017e8 <HAL_ADC_MspInit>:
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b088      	sub	sp, #32
 80017ec:	af00      	add	r7, sp, #0
 80017ee:	6078      	str	r0, [r7, #4]
 80017f0:	f107 0310 	add.w	r3, r7, #16
 80017f4:	2200      	movs	r2, #0
 80017f6:	601a      	str	r2, [r3, #0]
 80017f8:	605a      	str	r2, [r3, #4]
 80017fa:	609a      	str	r2, [r3, #8]
 80017fc:	60da      	str	r2, [r3, #12]
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	4a14      	ldr	r2, [pc, #80]	@ (8001854 <HAL_ADC_MspInit+0x6c>)
 8001804:	4293      	cmp	r3, r2
 8001806:	d121      	bne.n	800184c <HAL_ADC_MspInit+0x64>
 8001808:	4b13      	ldr	r3, [pc, #76]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 800180a:	699b      	ldr	r3, [r3, #24]
 800180c:	4a12      	ldr	r2, [pc, #72]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 800180e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001812:	6193      	str	r3, [r2, #24]
 8001814:	4b10      	ldr	r3, [pc, #64]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 8001816:	699b      	ldr	r3, [r3, #24]
 8001818:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800181c:	60fb      	str	r3, [r7, #12]
 800181e:	68fb      	ldr	r3, [r7, #12]
 8001820:	4b0d      	ldr	r3, [pc, #52]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 8001822:	699b      	ldr	r3, [r3, #24]
 8001824:	4a0c      	ldr	r2, [pc, #48]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 8001826:	f043 0304 	orr.w	r3, r3, #4
 800182a:	6193      	str	r3, [r2, #24]
 800182c:	4b0a      	ldr	r3, [pc, #40]	@ (8001858 <HAL_ADC_MspInit+0x70>)
 800182e:	699b      	ldr	r3, [r3, #24]
 8001830:	f003 0304 	and.w	r3, r3, #4
 8001834:	60bb      	str	r3, [r7, #8]
 8001836:	68bb      	ldr	r3, [r7, #8]
 8001838:	2302      	movs	r3, #2
 800183a:	613b      	str	r3, [r7, #16]
 800183c:	2303      	movs	r3, #3
 800183e:	617b      	str	r3, [r7, #20]
 8001840:	f107 0310 	add.w	r3, r7, #16
 8001844:	4619      	mov	r1, r3
 8001846:	4805      	ldr	r0, [pc, #20]	@ (800185c <HAL_ADC_MspInit+0x74>)
 8001848:	f001 fd58 	bl	80032fc <HAL_GPIO_Init>
 800184c:	bf00      	nop
 800184e:	3720      	adds	r7, #32
 8001850:	46bd      	mov	sp, r7
 8001852:	bd80      	pop	{r7, pc}
 8001854:	40012400 	.word	0x40012400
 8001858:	40021000 	.word	0x40021000
 800185c:	40010800 	.word	0x40010800

08001860 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001860:	b580      	push	{r7, lr}
 8001862:	b088      	sub	sp, #32
 8001864:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001866:	f107 0310 	add.w	r3, r7, #16
 800186a:	2200      	movs	r2, #0
 800186c:	601a      	str	r2, [r3, #0]
 800186e:	605a      	str	r2, [r3, #4]
 8001870:	609a      	str	r2, [r3, #8]
 8001872:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001874:	4b61      	ldr	r3, [pc, #388]	@ (80019fc <MX_GPIO_Init+0x19c>)
 8001876:	699b      	ldr	r3, [r3, #24]
 8001878:	4a60      	ldr	r2, [pc, #384]	@ (80019fc <MX_GPIO_Init+0x19c>)
 800187a:	f043 0310 	orr.w	r3, r3, #16
 800187e:	6193      	str	r3, [r2, #24]
 8001880:	4b5e      	ldr	r3, [pc, #376]	@ (80019fc <MX_GPIO_Init+0x19c>)
 8001882:	699b      	ldr	r3, [r3, #24]
 8001884:	f003 0310 	and.w	r3, r3, #16
 8001888:	60fb      	str	r3, [r7, #12]
 800188a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800188c:	4b5b      	ldr	r3, [pc, #364]	@ (80019fc <MX_GPIO_Init+0x19c>)
 800188e:	699b      	ldr	r3, [r3, #24]
 8001890:	4a5a      	ldr	r2, [pc, #360]	@ (80019fc <MX_GPIO_Init+0x19c>)
 8001892:	f043 0320 	orr.w	r3, r3, #32
 8001896:	6193      	str	r3, [r2, #24]
 8001898:	4b58      	ldr	r3, [pc, #352]	@ (80019fc <MX_GPIO_Init+0x19c>)
 800189a:	699b      	ldr	r3, [r3, #24]
 800189c:	f003 0320 	and.w	r3, r3, #32
 80018a0:	60bb      	str	r3, [r7, #8]
 80018a2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80018a4:	4b55      	ldr	r3, [pc, #340]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018a6:	699b      	ldr	r3, [r3, #24]
 80018a8:	4a54      	ldr	r2, [pc, #336]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018aa:	f043 0304 	orr.w	r3, r3, #4
 80018ae:	6193      	str	r3, [r2, #24]
 80018b0:	4b52      	ldr	r3, [pc, #328]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018b2:	699b      	ldr	r3, [r3, #24]
 80018b4:	f003 0304 	and.w	r3, r3, #4
 80018b8:	607b      	str	r3, [r7, #4]
 80018ba:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018bc:	4b4f      	ldr	r3, [pc, #316]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018be:	699b      	ldr	r3, [r3, #24]
 80018c0:	4a4e      	ldr	r2, [pc, #312]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018c2:	f043 0308 	orr.w	r3, r3, #8
 80018c6:	6193      	str	r3, [r2, #24]
 80018c8:	4b4c      	ldr	r3, [pc, #304]	@ (80019fc <MX_GPIO_Init+0x19c>)
 80018ca:	699b      	ldr	r3, [r3, #24]
 80018cc:	f003 0308 	and.w	r3, r3, #8
 80018d0:	603b      	str	r3, [r7, #0]
 80018d2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, G_Pin|E_Pin|C_Pin, GPIO_PIN_RESET);
 80018d4:	2200      	movs	r2, #0
 80018d6:	f44f 4160 	mov.w	r1, #57344	@ 0xe000
 80018da:	4849      	ldr	r0, [pc, #292]	@ (8001a00 <MX_GPIO_Init+0x1a0>)
 80018dc:	f001 fea9 	bl	8003632 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, D_Pin|Blinky_Point_Pin|Seg_2_VCC_Pin|Seg_3_VCC_Pin
 80018e0:	2200      	movs	r2, #0
 80018e2:	f649 7111 	movw	r1, #40721	@ 0x9f11
 80018e6:	4847      	ldr	r0, [pc, #284]	@ (8001a04 <MX_GPIO_Init+0x1a4>)
 80018e8:	f001 fea3 	bl	8003632 <HAL_GPIO_WritePin>
                          |Seg_4_VCC_Pin|Seg_5_VCC_Pin|Seg_6_VCC_Pin|Seg_7_VCC_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Date_Point_Pin|A_Pin|F_Pin|B_Pin
 80018ec:	2200      	movs	r2, #0
 80018ee:	f24f 0121 	movw	r1, #61473	@ 0xf021
 80018f2:	4845      	ldr	r0, [pc, #276]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 80018f4:	f001 fe9d 	bl	8003632 <HAL_GPIO_WritePin>
                          |Seg_1_VCC_Pin|Buzzer_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : G_Pin E_Pin C_Pin */
  GPIO_InitStruct.Pin = G_Pin|E_Pin|C_Pin;
 80018f8:	f44f 4360 	mov.w	r3, #57344	@ 0xe000
 80018fc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018fe:	2301      	movs	r3, #1
 8001900:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001902:	2300      	movs	r3, #0
 8001904:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001906:	2303      	movs	r3, #3
 8001908:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800190a:	f107 0310 	add.w	r3, r7, #16
 800190e:	4619      	mov	r1, r3
 8001910:	483b      	ldr	r0, [pc, #236]	@ (8001a00 <MX_GPIO_Init+0x1a0>)
 8001912:	f001 fcf3 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pins : D_Pin Seg_2_VCC_Pin Seg_3_VCC_Pin Seg_4_VCC_Pin
                           Seg_5_VCC_Pin Seg_6_VCC_Pin Seg_7_VCC_Pin */
  GPIO_InitStruct.Pin = D_Pin|Seg_2_VCC_Pin|Seg_3_VCC_Pin|Seg_4_VCC_Pin
 8001916:	f649 7301 	movw	r3, #40705	@ 0x9f01
 800191a:	613b      	str	r3, [r7, #16]
                          |Seg_5_VCC_Pin|Seg_6_VCC_Pin|Seg_7_VCC_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800191c:	2301      	movs	r3, #1
 800191e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001920:	2300      	movs	r3, #0
 8001922:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001924:	2303      	movs	r3, #3
 8001926:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001928:	f107 0310 	add.w	r3, r7, #16
 800192c:	4619      	mov	r1, r3
 800192e:	4835      	ldr	r0, [pc, #212]	@ (8001a04 <MX_GPIO_Init+0x1a4>)
 8001930:	f001 fce4 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pin : Blinky_Point_Pin */
  GPIO_InitStruct.Pin = Blinky_Point_Pin;
 8001934:	2310      	movs	r3, #16
 8001936:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001938:	2301      	movs	r3, #1
 800193a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800193c:	2300      	movs	r3, #0
 800193e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001940:	2302      	movs	r3, #2
 8001942:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Blinky_Point_GPIO_Port, &GPIO_InitStruct);
 8001944:	f107 0310 	add.w	r3, r7, #16
 8001948:	4619      	mov	r1, r3
 800194a:	482e      	ldr	r0, [pc, #184]	@ (8001a04 <MX_GPIO_Init+0x1a4>)
 800194c:	f001 fcd6 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pins : Date_Point_Pin Buzzer_Pin */
  GPIO_InitStruct.Pin = Date_Point_Pin|Buzzer_Pin;
 8001950:	2321      	movs	r3, #33	@ 0x21
 8001952:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001954:	2301      	movs	r3, #1
 8001956:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001958:	2300      	movs	r3, #0
 800195a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800195c:	2302      	movs	r3, #2
 800195e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001960:	f107 0310 	add.w	r3, r7, #16
 8001964:	4619      	mov	r1, r3
 8001966:	4828      	ldr	r0, [pc, #160]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 8001968:	f001 fcc8 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pin : SQW_Pin */
  GPIO_InitStruct.Pin = SQW_Pin;
 800196c:	2302      	movs	r3, #2
 800196e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001970:	4b26      	ldr	r3, [pc, #152]	@ (8001a0c <MX_GPIO_Init+0x1ac>)
 8001972:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001974:	2300      	movs	r3, #0
 8001976:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(SQW_GPIO_Port, &GPIO_InitStruct);
 8001978:	f107 0310 	add.w	r3, r7, #16
 800197c:	4619      	mov	r1, r3
 800197e:	4822      	ldr	r0, [pc, #136]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 8001980:	f001 fcbc 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pins : A_Pin F_Pin B_Pin Seg_1_VCC_Pin */
  GPIO_InitStruct.Pin = A_Pin|F_Pin|B_Pin|Seg_1_VCC_Pin;
 8001984:	f44f 4370 	mov.w	r3, #61440	@ 0xf000
 8001988:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800198a:	2301      	movs	r3, #1
 800198c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800198e:	2300      	movs	r3, #0
 8001990:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001992:	2303      	movs	r3, #3
 8001994:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001996:	f107 0310 	add.w	r3, r7, #16
 800199a:	4619      	mov	r1, r3
 800199c:	481a      	ldr	r0, [pc, #104]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 800199e:	f001 fcad 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pin : IR_Pin */
  GPIO_InitStruct.Pin = IR_Pin;
 80019a2:	2308      	movs	r3, #8
 80019a4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80019a6:	4b1a      	ldr	r3, [pc, #104]	@ (8001a10 <MX_GPIO_Init+0x1b0>)
 80019a8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019aa:	2300      	movs	r3, #0
 80019ac:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(IR_GPIO_Port, &GPIO_InitStruct);
 80019ae:	f107 0310 	add.w	r3, r7, #16
 80019b2:	4619      	mov	r1, r3
 80019b4:	4814      	ldr	r0, [pc, #80]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 80019b6:	f001 fca1 	bl	80032fc <HAL_GPIO_Init>

  /*Configure GPIO pins : Reset_Pin Timer_Pin Counter_Pin */
  GPIO_InitStruct.Pin = Reset_Pin|Timer_Pin|Counter_Pin;
 80019ba:	f44f 7360 	mov.w	r3, #896	@ 0x380
 80019be:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80019c0:	2300      	movs	r3, #0
 80019c2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80019c4:	2301      	movs	r3, #1
 80019c6:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019c8:	f107 0310 	add.w	r3, r7, #16
 80019cc:	4619      	mov	r1, r3
 80019ce:	480e      	ldr	r0, [pc, #56]	@ (8001a08 <MX_GPIO_Init+0x1a8>)
 80019d0:	f001 fc94 	bl	80032fc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 80019d4:	2200      	movs	r2, #0
 80019d6:	2100      	movs	r1, #0
 80019d8:	2007      	movs	r0, #7
 80019da:	f001 fc58 	bl	800328e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 80019de:	2007      	movs	r0, #7
 80019e0:	f001 fc71 	bl	80032c6 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 80019e4:	2200      	movs	r2, #0
 80019e6:	2100      	movs	r1, #0
 80019e8:	2009      	movs	r0, #9
 80019ea:	f001 fc50 	bl	800328e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80019ee:	2009      	movs	r0, #9
 80019f0:	f001 fc69 	bl	80032c6 <HAL_NVIC_EnableIRQ>

}
 80019f4:	bf00      	nop
 80019f6:	3720      	adds	r7, #32
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bd80      	pop	{r7, pc}
 80019fc:	40021000 	.word	0x40021000
 8001a00:	40011000 	.word	0x40011000
 8001a04:	40010800 	.word	0x40010800
 8001a08:	40010c00 	.word	0x40010c00
 8001a0c:	10110000 	.word	0x10110000
 8001a10:	10210000 	.word	0x10210000

08001a14 <MX_I2C2_Init>:
 8001a14:	b580      	push	{r7, lr}
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	4b12      	ldr	r3, [pc, #72]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a1a:	4a13      	ldr	r2, [pc, #76]	@ (8001a68 <MX_I2C2_Init+0x54>)
 8001a1c:	601a      	str	r2, [r3, #0]
 8001a1e:	4b11      	ldr	r3, [pc, #68]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a20:	4a12      	ldr	r2, [pc, #72]	@ (8001a6c <MX_I2C2_Init+0x58>)
 8001a22:	605a      	str	r2, [r3, #4]
 8001a24:	4b0f      	ldr	r3, [pc, #60]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a26:	2200      	movs	r2, #0
 8001a28:	609a      	str	r2, [r3, #8]
 8001a2a:	4b0e      	ldr	r3, [pc, #56]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	60da      	str	r2, [r3, #12]
 8001a30:	4b0c      	ldr	r3, [pc, #48]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a32:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001a36:	611a      	str	r2, [r3, #16]
 8001a38:	4b0a      	ldr	r3, [pc, #40]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	615a      	str	r2, [r3, #20]
 8001a3e:	4b09      	ldr	r3, [pc, #36]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a40:	2200      	movs	r2, #0
 8001a42:	619a      	str	r2, [r3, #24]
 8001a44:	4b07      	ldr	r3, [pc, #28]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a46:	2200      	movs	r2, #0
 8001a48:	61da      	str	r2, [r3, #28]
 8001a4a:	4b06      	ldr	r3, [pc, #24]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	621a      	str	r2, [r3, #32]
 8001a50:	4804      	ldr	r0, [pc, #16]	@ (8001a64 <MX_I2C2_Init+0x50>)
 8001a52:	f001 fe29 	bl	80036a8 <HAL_I2C_Init>
 8001a56:	4603      	mov	r3, r0
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d001      	beq.n	8001a60 <MX_I2C2_Init+0x4c>
 8001a5c:	f000 fe92 	bl	8002784 <Error_Handler>
 8001a60:	bf00      	nop
 8001a62:	bd80      	pop	{r7, pc}
 8001a64:	200000bc 	.word	0x200000bc
 8001a68:	40005800 	.word	0x40005800
 8001a6c:	000186a0 	.word	0x000186a0

08001a70 <HAL_I2C_MspInit>:
 8001a70:	b580      	push	{r7, lr}
 8001a72:	b088      	sub	sp, #32
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
 8001a78:	f107 0310 	add.w	r3, r7, #16
 8001a7c:	2200      	movs	r2, #0
 8001a7e:	601a      	str	r2, [r3, #0]
 8001a80:	605a      	str	r2, [r3, #4]
 8001a82:	609a      	str	r2, [r3, #8]
 8001a84:	60da      	str	r2, [r3, #12]
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	4a16      	ldr	r2, [pc, #88]	@ (8001ae4 <HAL_I2C_MspInit+0x74>)
 8001a8c:	4293      	cmp	r3, r2
 8001a8e:	d124      	bne.n	8001ada <HAL_I2C_MspInit+0x6a>
 8001a90:	4b15      	ldr	r3, [pc, #84]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001a92:	699b      	ldr	r3, [r3, #24]
 8001a94:	4a14      	ldr	r2, [pc, #80]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001a96:	f043 0308 	orr.w	r3, r3, #8
 8001a9a:	6193      	str	r3, [r2, #24]
 8001a9c:	4b12      	ldr	r3, [pc, #72]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001a9e:	699b      	ldr	r3, [r3, #24]
 8001aa0:	f003 0308 	and.w	r3, r3, #8
 8001aa4:	60fb      	str	r3, [r7, #12]
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001aac:	613b      	str	r3, [r7, #16]
 8001aae:	2312      	movs	r3, #18
 8001ab0:	617b      	str	r3, [r7, #20]
 8001ab2:	2303      	movs	r3, #3
 8001ab4:	61fb      	str	r3, [r7, #28]
 8001ab6:	f107 0310 	add.w	r3, r7, #16
 8001aba:	4619      	mov	r1, r3
 8001abc:	480b      	ldr	r0, [pc, #44]	@ (8001aec <HAL_I2C_MspInit+0x7c>)
 8001abe:	f001 fc1d 	bl	80032fc <HAL_GPIO_Init>
 8001ac2:	4b09      	ldr	r3, [pc, #36]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001ac4:	69db      	ldr	r3, [r3, #28]
 8001ac6:	4a08      	ldr	r2, [pc, #32]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001ac8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001acc:	61d3      	str	r3, [r2, #28]
 8001ace:	4b06      	ldr	r3, [pc, #24]	@ (8001ae8 <HAL_I2C_MspInit+0x78>)
 8001ad0:	69db      	ldr	r3, [r3, #28]
 8001ad2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001ad6:	60bb      	str	r3, [r7, #8]
 8001ad8:	68bb      	ldr	r3, [r7, #8]
 8001ada:	bf00      	nop
 8001adc:	3720      	adds	r7, #32
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	bd80      	pop	{r7, pc}
 8001ae2:	bf00      	nop
 8001ae4:	40005800 	.word	0x40005800
 8001ae8:	40021000 	.word	0x40021000
 8001aec:	40010c00 	.word	0x40010c00

08001af0 <BCD_to_Decimal>:
#include "Variable.h"
#include "Definition.h"
#include "i2c.h"


uint8_t BCD_to_Decimal(uint8_t bcd) {
 8001af0:	b480      	push	{r7}
 8001af2:	b083      	sub	sp, #12
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	4603      	mov	r3, r0
 8001af8:	71fb      	strb	r3, [r7, #7]
    return ((bcd >> 4) * 10) + (bcd & 0x0F);
 8001afa:	79fb      	ldrb	r3, [r7, #7]
 8001afc:	091b      	lsrs	r3, r3, #4
 8001afe:	b2db      	uxtb	r3, r3
 8001b00:	461a      	mov	r2, r3
 8001b02:	0092      	lsls	r2, r2, #2
 8001b04:	4413      	add	r3, r2
 8001b06:	005b      	lsls	r3, r3, #1
 8001b08:	b2da      	uxtb	r2, r3
 8001b0a:	79fb      	ldrb	r3, [r7, #7]
 8001b0c:	f003 030f 	and.w	r3, r3, #15
 8001b10:	b2db      	uxtb	r3, r3
 8001b12:	4413      	add	r3, r2
 8001b14:	b2db      	uxtb	r3, r3
}
 8001b16:	4618      	mov	r0, r3
 8001b18:	370c      	adds	r7, #12
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bc80      	pop	{r7}
 8001b1e:	4770      	bx	lr

08001b20 <Decimal_to_BCD>:

uint8_t Decimal_to_BCD(uint8_t decimal) {
 8001b20:	b480      	push	{r7}
 8001b22:	b083      	sub	sp, #12
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	4603      	mov	r3, r0
 8001b28:	71fb      	strb	r3, [r7, #7]
    return ((decimal / 10) << 4) | (decimal % 10);
 8001b2a:	79fb      	ldrb	r3, [r7, #7]
 8001b2c:	4a0d      	ldr	r2, [pc, #52]	@ (8001b64 <Decimal_to_BCD+0x44>)
 8001b2e:	fba2 2303 	umull	r2, r3, r2, r3
 8001b32:	08db      	lsrs	r3, r3, #3
 8001b34:	b2db      	uxtb	r3, r3
 8001b36:	011b      	lsls	r3, r3, #4
 8001b38:	b258      	sxtb	r0, r3
 8001b3a:	79fa      	ldrb	r2, [r7, #7]
 8001b3c:	4b09      	ldr	r3, [pc, #36]	@ (8001b64 <Decimal_to_BCD+0x44>)
 8001b3e:	fba3 1302 	umull	r1, r3, r3, r2
 8001b42:	08d9      	lsrs	r1, r3, #3
 8001b44:	460b      	mov	r3, r1
 8001b46:	009b      	lsls	r3, r3, #2
 8001b48:	440b      	add	r3, r1
 8001b4a:	005b      	lsls	r3, r3, #1
 8001b4c:	1ad3      	subs	r3, r2, r3
 8001b4e:	b2db      	uxtb	r3, r3
 8001b50:	b25b      	sxtb	r3, r3
 8001b52:	4303      	orrs	r3, r0
 8001b54:	b25b      	sxtb	r3, r3
 8001b56:	b2db      	uxtb	r3, r3
}
 8001b58:	4618      	mov	r0, r3
 8001b5a:	370c      	adds	r7, #12
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	bc80      	pop	{r7}
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop
 8001b64:	cccccccd 	.word	0xcccccccd

08001b68 <DS3231_WriteTime>:

void DS3231_WriteTime(I2C_HandleTypeDef *hi2c, uint8_t hour, uint8_t minute, uint8_t second) {
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b088      	sub	sp, #32
 8001b6c:	af04      	add	r7, sp, #16
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	4608      	mov	r0, r1
 8001b72:	4611      	mov	r1, r2
 8001b74:	461a      	mov	r2, r3
 8001b76:	4603      	mov	r3, r0
 8001b78:	70fb      	strb	r3, [r7, #3]
 8001b7a:	460b      	mov	r3, r1
 8001b7c:	70bb      	strb	r3, [r7, #2]
 8001b7e:	4613      	mov	r3, r2
 8001b80:	707b      	strb	r3, [r7, #1]
    uint8_t timeData[3];

    timeData[0] = Decimal_to_BCD(second);  // Convert second to BCD
 8001b82:	787b      	ldrb	r3, [r7, #1]
 8001b84:	4618      	mov	r0, r3
 8001b86:	f7ff ffcb 	bl	8001b20 <Decimal_to_BCD>
 8001b8a:	4603      	mov	r3, r0
 8001b8c:	733b      	strb	r3, [r7, #12]
    timeData[1] = Decimal_to_BCD(minute);  // Convert minute to BCD
 8001b8e:	78bb      	ldrb	r3, [r7, #2]
 8001b90:	4618      	mov	r0, r3
 8001b92:	f7ff ffc5 	bl	8001b20 <Decimal_to_BCD>
 8001b96:	4603      	mov	r3, r0
 8001b98:	737b      	strb	r3, [r7, #13]
    timeData[2] = Decimal_to_BCD(hour);    // Convert hour to BCD
 8001b9a:	78fb      	ldrb	r3, [r7, #3]
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	f7ff ffbf 	bl	8001b20 <Decimal_to_BCD>
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	73bb      	strb	r3, [r7, #14]

    // DS3231 I2C address (0x68 is default address)
    HAL_I2C_Mem_Write(hi2c, 0xD0, 0x00, I2C_MEMADD_SIZE_8BIT, timeData, 3, 1000);
 8001ba6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001baa:	9302      	str	r3, [sp, #8]
 8001bac:	2303      	movs	r3, #3
 8001bae:	9301      	str	r3, [sp, #4]
 8001bb0:	f107 030c 	add.w	r3, r7, #12
 8001bb4:	9300      	str	r3, [sp, #0]
 8001bb6:	2301      	movs	r3, #1
 8001bb8:	2200      	movs	r2, #0
 8001bba:	21d0      	movs	r1, #208	@ 0xd0
 8001bbc:	6878      	ldr	r0, [r7, #4]
 8001bbe:	f001 feb7 	bl	8003930 <HAL_I2C_Mem_Write>
}
 8001bc2:	bf00      	nop
 8001bc4:	3710      	adds	r7, #16
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	bd80      	pop	{r7, pc}

08001bca <DS3231_ReadTime>:

void DS3231_ReadTime(I2C_HandleTypeDef *hi2c, uint8_t *hour, uint8_t *minute, uint8_t *second) {
 8001bca:	b580      	push	{r7, lr}
 8001bcc:	b08a      	sub	sp, #40	@ 0x28
 8001bce:	af04      	add	r7, sp, #16
 8001bd0:	60f8      	str	r0, [r7, #12]
 8001bd2:	60b9      	str	r1, [r7, #8]
 8001bd4:	607a      	str	r2, [r7, #4]
 8001bd6:	603b      	str	r3, [r7, #0]
    uint8_t timeData[4];

    // DS3231 I2C address (0x68 is default address)
    HAL_I2C_Mem_Read(hi2c, 0xD0, 0x00, I2C_MEMADD_SIZE_8BIT, timeData, 4, 1000);
 8001bd8:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001bdc:	9302      	str	r3, [sp, #8]
 8001bde:	2304      	movs	r3, #4
 8001be0:	9301      	str	r3, [sp, #4]
 8001be2:	f107 0314 	add.w	r3, r7, #20
 8001be6:	9300      	str	r3, [sp, #0]
 8001be8:	2301      	movs	r3, #1
 8001bea:	2200      	movs	r2, #0
 8001bec:	21d0      	movs	r1, #208	@ 0xd0
 8001bee:	68f8      	ldr	r0, [r7, #12]
 8001bf0:	f001 ff98 	bl	8003b24 <HAL_I2C_Mem_Read>

    *second = BCD_to_Decimal(timeData[0]);  // Convert BCD to decimal
 8001bf4:	7d3b      	ldrb	r3, [r7, #20]
 8001bf6:	4618      	mov	r0, r3
 8001bf8:	f7ff ff7a 	bl	8001af0 <BCD_to_Decimal>
 8001bfc:	4603      	mov	r3, r0
 8001bfe:	461a      	mov	r2, r3
 8001c00:	683b      	ldr	r3, [r7, #0]
 8001c02:	701a      	strb	r2, [r3, #0]
    *minute = BCD_to_Decimal(timeData[1]);  // Convert BCD to decimal
 8001c04:	7d7b      	ldrb	r3, [r7, #21]
 8001c06:	4618      	mov	r0, r3
 8001c08:	f7ff ff72 	bl	8001af0 <BCD_to_Decimal>
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	461a      	mov	r2, r3
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	701a      	strb	r2, [r3, #0]
    *hour = BCD_to_Decimal(timeData[2]);    // Convert BCD to decimal
 8001c14:	7dbb      	ldrb	r3, [r7, #22]
 8001c16:	4618      	mov	r0, r3
 8001c18:	f7ff ff6a 	bl	8001af0 <BCD_to_Decimal>
 8001c1c:	4603      	mov	r3, r0
 8001c1e:	461a      	mov	r2, r3
 8001c20:	68bb      	ldr	r3, [r7, #8]
 8001c22:	701a      	strb	r2, [r3, #0]
}
 8001c24:	bf00      	nop
 8001c26:	3718      	adds	r7, #24
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	bd80      	pop	{r7, pc}

08001c2c <DS3231_EnableSQW1Hz>:


void DS3231_EnableSQW1Hz(I2C_HandleTypeDef *hi2c) {
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b088      	sub	sp, #32
 8001c30:	af04      	add	r7, sp, #16
 8001c32:	6078      	str	r0, [r7, #4]

    // Read the current Control/Status Register value (0x0E)
    //HAL_I2C_Mem_Read(hi2c, 0xD0, 0x0E, I2C_MEMADD_SIZE_8BIT, &controlRegValue, 1, 1000);

    // Set the square wave frequency to 1Hz (bits 0-1 = 00) and enable SQW output (bit 7 = 1)
    controlRegValue = 0x00;
 8001c34:	2300      	movs	r3, #0
 8001c36:	73fb      	strb	r3, [r7, #15]

    // Write the updated value back to the Control/Status Register
    HAL_I2C_Mem_Write(hi2c, 0xD0, 0x0E, I2C_MEMADD_SIZE_8BIT, &controlRegValue, 1, 1000);
 8001c38:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001c3c:	9302      	str	r3, [sp, #8]
 8001c3e:	2301      	movs	r3, #1
 8001c40:	9301      	str	r3, [sp, #4]
 8001c42:	f107 030f 	add.w	r3, r7, #15
 8001c46:	9300      	str	r3, [sp, #0]
 8001c48:	2301      	movs	r3, #1
 8001c4a:	220e      	movs	r2, #14
 8001c4c:	21d0      	movs	r1, #208	@ 0xd0
 8001c4e:	6878      	ldr	r0, [r7, #4]
 8001c50:	f001 fe6e 	bl	8003930 <HAL_I2C_Mem_Write>
}
 8001c54:	bf00      	nop
 8001c56:	3710      	adds	r7, #16
 8001c58:	46bd      	mov	sp, r7
 8001c5a:	bd80      	pop	{r7, pc}

08001c5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b082      	sub	sp, #8
 8001c60:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001c62:	f000 ffa5 	bl	8002bb0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001c66:	f000 fca9 	bl	80025bc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001c6a:	f7ff fdf9 	bl	8001860 <MX_GPIO_Init>
  MX_I2C2_Init();
 8001c6e:	f7ff fed1 	bl	8001a14 <MX_I2C2_Init>
  MX_TIM2_Init();
 8001c72:	f000 fe33 	bl	80028dc <MX_TIM2_Init>
  MX_TIM3_Init();
 8001c76:	f000 fe7d 	bl	8002974 <MX_TIM3_Init>
  MX_ADC1_Init();
 8001c7a:	f7ff fd77 	bl	800176c <MX_ADC1_Init>
  MX_TIM4_Init();
 8001c7e:	f000 fec7 	bl	8002a10 <MX_TIM4_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001c82:	48a7      	ldr	r0, [pc, #668]	@ (8001f20 <main+0x2c4>)
 8001c84:	f003 fa78 	bl	8005178 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 8001c88:	48a6      	ldr	r0, [pc, #664]	@ (8001f24 <main+0x2c8>)
 8001c8a:	f003 fa75 	bl	8005178 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim4);
 8001c8e:	48a6      	ldr	r0, [pc, #664]	@ (8001f28 <main+0x2cc>)
 8001c90:	f003 fa72 	bl	8005178 <HAL_TIM_Base_Start_IT>
  DS3231_ReadTime(&hi2c2, &time_Hour, &time_Minute, &time_Second);
 8001c94:	4ba5      	ldr	r3, [pc, #660]	@ (8001f2c <main+0x2d0>)
 8001c96:	4aa6      	ldr	r2, [pc, #664]	@ (8001f30 <main+0x2d4>)
 8001c98:	49a6      	ldr	r1, [pc, #664]	@ (8001f34 <main+0x2d8>)
 8001c9a:	48a7      	ldr	r0, [pc, #668]	@ (8001f38 <main+0x2dc>)
 8001c9c:	f7ff ff95 	bl	8001bca <DS3231_ReadTime>
  DS3231_EnableSQW1Hz(&hi2c2);
 8001ca0:	48a5      	ldr	r0, [pc, #660]	@ (8001f38 <main+0x2dc>)
 8001ca2:	f7ff ffc3 	bl	8001c2c <DS3231_EnableSQW1Hz>
  for (int i = 0; i < 10; i++)
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	607b      	str	r3, [r7, #4]
 8001caa:	e037      	b.n	8001d1c <main+0xc0>
  {
    Segment_Set(0, i);
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	b2db      	uxtb	r3, r3
 8001cb0:	4619      	mov	r1, r3
 8001cb2:	2000      	movs	r0, #0
 8001cb4:	f7ff fd46 	bl	8001744 <Segment_Set>
    Segment_Set(1, i);
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	b2db      	uxtb	r3, r3
 8001cbc:	4619      	mov	r1, r3
 8001cbe:	2001      	movs	r0, #1
 8001cc0:	f7ff fd40 	bl	8001744 <Segment_Set>
    Segment_Set(2, i);
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	b2db      	uxtb	r3, r3
 8001cc8:	4619      	mov	r1, r3
 8001cca:	2002      	movs	r0, #2
 8001ccc:	f7ff fd3a 	bl	8001744 <Segment_Set>
    Segment_Set(3, i);
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	b2db      	uxtb	r3, r3
 8001cd4:	4619      	mov	r1, r3
 8001cd6:	2003      	movs	r0, #3
 8001cd8:	f7ff fd34 	bl	8001744 <Segment_Set>
    Segment_Set(4, i);
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	b2db      	uxtb	r3, r3
 8001ce0:	4619      	mov	r1, r3
 8001ce2:	2004      	movs	r0, #4
 8001ce4:	f7ff fd2e 	bl	8001744 <Segment_Set>
    Segment_Set(5, i);
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	b2db      	uxtb	r3, r3
 8001cec:	4619      	mov	r1, r3
 8001cee:	2005      	movs	r0, #5
 8001cf0:	f7ff fd28 	bl	8001744 <Segment_Set>
    Segment_Set(6, 'N');
 8001cf4:	214e      	movs	r1, #78	@ 0x4e
 8001cf6:	2006      	movs	r0, #6
 8001cf8:	f7ff fd24 	bl	8001744 <Segment_Set>
    HAL_Delay(200);
 8001cfc:	20c8      	movs	r0, #200	@ 0xc8
 8001cfe:	f000 ffb9 	bl	8002c74 <HAL_Delay>
    HAL_GPIO_WritePin(blinky_Point, HIGH);
 8001d02:	2201      	movs	r2, #1
 8001d04:	2110      	movs	r1, #16
 8001d06:	488d      	ldr	r0, [pc, #564]	@ (8001f3c <main+0x2e0>)
 8001d08:	f001 fc93 	bl	8003632 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(date_Point, LOW);
 8001d0c:	2200      	movs	r2, #0
 8001d0e:	2101      	movs	r1, #1
 8001d10:	488b      	ldr	r0, [pc, #556]	@ (8001f40 <main+0x2e4>)
 8001d12:	f001 fc8e 	bl	8003632 <HAL_GPIO_WritePin>
  for (int i = 0; i < 10; i++)
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	3301      	adds	r3, #1
 8001d1a:	607b      	str	r3, [r7, #4]
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2b09      	cmp	r3, #9
 8001d20:	ddc4      	ble.n	8001cac <main+0x50>
  }
  Buzz(20);
 8001d22:	2014      	movs	r0, #20
 8001d24:	f7fe fe10 	bl	8000948 <Buzz>
  HAL_Delay(100);
 8001d28:	2064      	movs	r0, #100	@ 0x64
 8001d2a:	f000 ffa3 	bl	8002c74 <HAL_Delay>
  Buzz(20);
 8001d2e:	2014      	movs	r0, #20
 8001d30:	f7fe fe0a 	bl	8000948 <Buzz>
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

    if (work_Mode == MODE_NORMAL)
 8001d34:	4b83      	ldr	r3, [pc, #524]	@ (8001f44 <main+0x2e8>)
 8001d36:	781b      	ldrb	r3, [r3, #0]
 8001d38:	2b52      	cmp	r3, #82	@ 0x52
 8001d3a:	f040 80ba 	bne.w	8001eb2 <main+0x256>
    {
      HAL_GPIO_WritePin(date_Point, LOW);
 8001d3e:	2200      	movs	r2, #0
 8001d40:	2101      	movs	r1, #1
 8001d42:	487f      	ldr	r0, [pc, #508]	@ (8001f40 <main+0x2e4>)
 8001d44:	f001 fc75 	bl	8003632 <HAL_GPIO_WritePin>
      
      if (PM_Mode)
 8001d48:	4b7f      	ldr	r3, [pc, #508]	@ (8001f48 <main+0x2ec>)
 8001d4a:	781b      	ldrb	r3, [r3, #0]
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d042      	beq.n	8001dd6 <main+0x17a>
      {
        if (time_Hour > 12)
 8001d50:	4b78      	ldr	r3, [pc, #480]	@ (8001f34 <main+0x2d8>)
 8001d52:	781b      	ldrb	r3, [r3, #0]
 8001d54:	2b0c      	cmp	r3, #12
 8001d56:	d922      	bls.n	8001d9e <main+0x142>
        {
          Segment_Set(0, (time_Hour - 12) / 10);
 8001d58:	4b76      	ldr	r3, [pc, #472]	@ (8001f34 <main+0x2d8>)
 8001d5a:	781b      	ldrb	r3, [r3, #0]
 8001d5c:	3b0c      	subs	r3, #12
 8001d5e:	4a7b      	ldr	r2, [pc, #492]	@ (8001f4c <main+0x2f0>)
 8001d60:	fb82 1203 	smull	r1, r2, r2, r3
 8001d64:	1092      	asrs	r2, r2, #2
 8001d66:	17db      	asrs	r3, r3, #31
 8001d68:	1ad3      	subs	r3, r2, r3
 8001d6a:	b2db      	uxtb	r3, r3
 8001d6c:	4619      	mov	r1, r3
 8001d6e:	2000      	movs	r0, #0
 8001d70:	f7ff fce8 	bl	8001744 <Segment_Set>
          Segment_Set(1, (time_Hour - 12) % 10);
 8001d74:	4b6f      	ldr	r3, [pc, #444]	@ (8001f34 <main+0x2d8>)
 8001d76:	781b      	ldrb	r3, [r3, #0]
 8001d78:	f1a3 020c 	sub.w	r2, r3, #12
 8001d7c:	4b73      	ldr	r3, [pc, #460]	@ (8001f4c <main+0x2f0>)
 8001d7e:	fb83 1302 	smull	r1, r3, r3, r2
 8001d82:	1099      	asrs	r1, r3, #2
 8001d84:	17d3      	asrs	r3, r2, #31
 8001d86:	1ac9      	subs	r1, r1, r3
 8001d88:	460b      	mov	r3, r1
 8001d8a:	009b      	lsls	r3, r3, #2
 8001d8c:	440b      	add	r3, r1
 8001d8e:	005b      	lsls	r3, r3, #1
 8001d90:	1ad1      	subs	r1, r2, r3
 8001d92:	b2cb      	uxtb	r3, r1
 8001d94:	4619      	mov	r1, r3
 8001d96:	2001      	movs	r0, #1
 8001d98:	f7ff fcd4 	bl	8001744 <Segment_Set>
 8001d9c:	e036      	b.n	8001e0c <main+0x1b0>
        }
        else
        {
          Segment_Set(0, time_Hour / 10);
 8001d9e:	4b65      	ldr	r3, [pc, #404]	@ (8001f34 <main+0x2d8>)
 8001da0:	781b      	ldrb	r3, [r3, #0]
 8001da2:	4a6b      	ldr	r2, [pc, #428]	@ (8001f50 <main+0x2f4>)
 8001da4:	fba2 2303 	umull	r2, r3, r2, r3
 8001da8:	08db      	lsrs	r3, r3, #3
 8001daa:	b2db      	uxtb	r3, r3
 8001dac:	4619      	mov	r1, r3
 8001dae:	2000      	movs	r0, #0
 8001db0:	f7ff fcc8 	bl	8001744 <Segment_Set>
          Segment_Set(1, time_Hour % 10);
 8001db4:	4b5f      	ldr	r3, [pc, #380]	@ (8001f34 <main+0x2d8>)
 8001db6:	781a      	ldrb	r2, [r3, #0]
 8001db8:	4b65      	ldr	r3, [pc, #404]	@ (8001f50 <main+0x2f4>)
 8001dba:	fba3 1302 	umull	r1, r3, r3, r2
 8001dbe:	08d9      	lsrs	r1, r3, #3
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	009b      	lsls	r3, r3, #2
 8001dc4:	440b      	add	r3, r1
 8001dc6:	005b      	lsls	r3, r3, #1
 8001dc8:	1ad3      	subs	r3, r2, r3
 8001dca:	b2db      	uxtb	r3, r3
 8001dcc:	4619      	mov	r1, r3
 8001dce:	2001      	movs	r0, #1
 8001dd0:	f7ff fcb8 	bl	8001744 <Segment_Set>
 8001dd4:	e01a      	b.n	8001e0c <main+0x1b0>
        }
      }
      else
      {
        Segment_Set(0, time_Hour / 10);
 8001dd6:	4b57      	ldr	r3, [pc, #348]	@ (8001f34 <main+0x2d8>)
 8001dd8:	781b      	ldrb	r3, [r3, #0]
 8001dda:	4a5d      	ldr	r2, [pc, #372]	@ (8001f50 <main+0x2f4>)
 8001ddc:	fba2 2303 	umull	r2, r3, r2, r3
 8001de0:	08db      	lsrs	r3, r3, #3
 8001de2:	b2db      	uxtb	r3, r3
 8001de4:	4619      	mov	r1, r3
 8001de6:	2000      	movs	r0, #0
 8001de8:	f7ff fcac 	bl	8001744 <Segment_Set>
        Segment_Set(1, time_Hour % 10);
 8001dec:	4b51      	ldr	r3, [pc, #324]	@ (8001f34 <main+0x2d8>)
 8001dee:	781a      	ldrb	r2, [r3, #0]
 8001df0:	4b57      	ldr	r3, [pc, #348]	@ (8001f50 <main+0x2f4>)
 8001df2:	fba3 1302 	umull	r1, r3, r3, r2
 8001df6:	08d9      	lsrs	r1, r3, #3
 8001df8:	460b      	mov	r3, r1
 8001dfa:	009b      	lsls	r3, r3, #2
 8001dfc:	440b      	add	r3, r1
 8001dfe:	005b      	lsls	r3, r3, #1
 8001e00:	1ad3      	subs	r3, r2, r3
 8001e02:	b2db      	uxtb	r3, r3
 8001e04:	4619      	mov	r1, r3
 8001e06:	2001      	movs	r0, #1
 8001e08:	f7ff fc9c 	bl	8001744 <Segment_Set>
      }
      Segment_Set(2, time_Minute / 10);
 8001e0c:	4b48      	ldr	r3, [pc, #288]	@ (8001f30 <main+0x2d4>)
 8001e0e:	781b      	ldrb	r3, [r3, #0]
 8001e10:	4a4f      	ldr	r2, [pc, #316]	@ (8001f50 <main+0x2f4>)
 8001e12:	fba2 2303 	umull	r2, r3, r2, r3
 8001e16:	08db      	lsrs	r3, r3, #3
 8001e18:	b2db      	uxtb	r3, r3
 8001e1a:	4619      	mov	r1, r3
 8001e1c:	2002      	movs	r0, #2
 8001e1e:	f7ff fc91 	bl	8001744 <Segment_Set>
      Segment_Set(3, time_Minute % 10);
 8001e22:	4b43      	ldr	r3, [pc, #268]	@ (8001f30 <main+0x2d4>)
 8001e24:	781a      	ldrb	r2, [r3, #0]
 8001e26:	4b4a      	ldr	r3, [pc, #296]	@ (8001f50 <main+0x2f4>)
 8001e28:	fba3 1302 	umull	r1, r3, r3, r2
 8001e2c:	08d9      	lsrs	r1, r3, #3
 8001e2e:	460b      	mov	r3, r1
 8001e30:	009b      	lsls	r3, r3, #2
 8001e32:	440b      	add	r3, r1
 8001e34:	005b      	lsls	r3, r3, #1
 8001e36:	1ad3      	subs	r3, r2, r3
 8001e38:	b2db      	uxtb	r3, r3
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	2003      	movs	r0, #3
 8001e3e:	f7ff fc81 	bl	8001744 <Segment_Set>
      Segment_Set(4, time_Second / 10);
 8001e42:	4b3a      	ldr	r3, [pc, #232]	@ (8001f2c <main+0x2d0>)
 8001e44:	781b      	ldrb	r3, [r3, #0]
 8001e46:	4a42      	ldr	r2, [pc, #264]	@ (8001f50 <main+0x2f4>)
 8001e48:	fba2 2303 	umull	r2, r3, r2, r3
 8001e4c:	08db      	lsrs	r3, r3, #3
 8001e4e:	b2db      	uxtb	r3, r3
 8001e50:	4619      	mov	r1, r3
 8001e52:	2004      	movs	r0, #4
 8001e54:	f7ff fc76 	bl	8001744 <Segment_Set>
      Segment_Set(5, time_Second % 10);
 8001e58:	4b34      	ldr	r3, [pc, #208]	@ (8001f2c <main+0x2d0>)
 8001e5a:	781a      	ldrb	r2, [r3, #0]
 8001e5c:	4b3c      	ldr	r3, [pc, #240]	@ (8001f50 <main+0x2f4>)
 8001e5e:	fba3 1302 	umull	r1, r3, r3, r2
 8001e62:	08d9      	lsrs	r1, r3, #3
 8001e64:	460b      	mov	r3, r1
 8001e66:	009b      	lsls	r3, r3, #2
 8001e68:	440b      	add	r3, r1
 8001e6a:	005b      	lsls	r3, r3, #1
 8001e6c:	1ad3      	subs	r3, r2, r3
 8001e6e:	b2db      	uxtb	r3, r3
 8001e70:	4619      	mov	r1, r3
 8001e72:	2005      	movs	r0, #5
 8001e74:	f7ff fc66 	bl	8001744 <Segment_Set>
      HAL_GPIO_WritePin(blinky_Point, HIGH);
 8001e78:	2201      	movs	r2, #1
 8001e7a:	2110      	movs	r1, #16
 8001e7c:	482f      	ldr	r0, [pc, #188]	@ (8001f3c <main+0x2e0>)
 8001e7e:	f001 fbd8 	bl	8003632 <HAL_GPIO_WritePin>
      Segment_Set(6, 'N');
 8001e82:	214e      	movs	r1, #78	@ 0x4e
 8001e84:	2006      	movs	r0, #6
 8001e86:	f7ff fc5d 	bl	8001744 <Segment_Set>

      irRemote = Ir_GetData();
 8001e8a:	f7fe fe47 	bl	8000b1c <Ir_GetData>
 8001e8e:	4603      	mov	r3, r0
 8001e90:	461a      	mov	r2, r3
 8001e92:	4b30      	ldr	r3, [pc, #192]	@ (8001f54 <main+0x2f8>)
 8001e94:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 8001e96:	4b2f      	ldr	r3, [pc, #188]	@ (8001f54 <main+0x2f8>)
 8001e98:	881b      	ldrh	r3, [r3, #0]
 8001e9a:	2b00      	cmp	r3, #0
 8001e9c:	f43f af4a 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 8001ea0:	4b2c      	ldr	r3, [pc, #176]	@ (8001f54 <main+0x2f8>)
 8001ea2:	881b      	ldrh	r3, [r3, #0]
 8001ea4:	4a27      	ldr	r2, [pc, #156]	@ (8001f44 <main+0x2e8>)
 8001ea6:	7812      	ldrb	r2, [r2, #0]
 8001ea8:	4611      	mov	r1, r2
 8001eaa:	4618      	mov	r0, r3
 8001eac:	f7fe f94e 	bl	800014c <Haamin_Remote>
 8001eb0:	e740      	b.n	8001d34 <main+0xd8>
      }
    }
    else if (work_Mode == MODE_OFF)
 8001eb2:	4b24      	ldr	r3, [pc, #144]	@ (8001f44 <main+0x2e8>)
 8001eb4:	781b      	ldrb	r3, [r3, #0]
 8001eb6:	2b46      	cmp	r3, #70	@ 0x46
 8001eb8:	d150      	bne.n	8001f5c <main+0x300>
    {
      time_Out = 0;
 8001eba:	4b27      	ldr	r3, [pc, #156]	@ (8001f58 <main+0x2fc>)
 8001ebc:	2200      	movs	r2, #0
 8001ebe:	701a      	strb	r2, [r3, #0]
      Segment_Set(0, 'N');
 8001ec0:	214e      	movs	r1, #78	@ 0x4e
 8001ec2:	2000      	movs	r0, #0
 8001ec4:	f7ff fc3e 	bl	8001744 <Segment_Set>
      Segment_Set(1, 'N');
 8001ec8:	214e      	movs	r1, #78	@ 0x4e
 8001eca:	2001      	movs	r0, #1
 8001ecc:	f7ff fc3a 	bl	8001744 <Segment_Set>
      Segment_Set(2, 'N');
 8001ed0:	214e      	movs	r1, #78	@ 0x4e
 8001ed2:	2002      	movs	r0, #2
 8001ed4:	f7ff fc36 	bl	8001744 <Segment_Set>
      Segment_Set(3, 'N');
 8001ed8:	214e      	movs	r1, #78	@ 0x4e
 8001eda:	2003      	movs	r0, #3
 8001edc:	f7ff fc32 	bl	8001744 <Segment_Set>
      Segment_Set(4, 'N');
 8001ee0:	214e      	movs	r1, #78	@ 0x4e
 8001ee2:	2004      	movs	r0, #4
 8001ee4:	f7ff fc2e 	bl	8001744 <Segment_Set>
      Segment_Set(5, 'N');
 8001ee8:	214e      	movs	r1, #78	@ 0x4e
 8001eea:	2005      	movs	r0, #5
 8001eec:	f7ff fc2a 	bl	8001744 <Segment_Set>
      Segment_Set(6, 'N');
 8001ef0:	214e      	movs	r1, #78	@ 0x4e
 8001ef2:	2006      	movs	r0, #6
 8001ef4:	f7ff fc26 	bl	8001744 <Segment_Set>

      irRemote = Ir_GetData();
 8001ef8:	f7fe fe10 	bl	8000b1c <Ir_GetData>
 8001efc:	4603      	mov	r3, r0
 8001efe:	461a      	mov	r2, r3
 8001f00:	4b14      	ldr	r3, [pc, #80]	@ (8001f54 <main+0x2f8>)
 8001f02:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 8001f04:	4b13      	ldr	r3, [pc, #76]	@ (8001f54 <main+0x2f8>)
 8001f06:	881b      	ldrh	r3, [r3, #0]
 8001f08:	2b00      	cmp	r3, #0
 8001f0a:	f43f af13 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 8001f0e:	4b11      	ldr	r3, [pc, #68]	@ (8001f54 <main+0x2f8>)
 8001f10:	881b      	ldrh	r3, [r3, #0]
 8001f12:	4a0c      	ldr	r2, [pc, #48]	@ (8001f44 <main+0x2e8>)
 8001f14:	7812      	ldrb	r2, [r2, #0]
 8001f16:	4611      	mov	r1, r2
 8001f18:	4618      	mov	r0, r3
 8001f1a:	f7fe f917 	bl	800014c <Haamin_Remote>
 8001f1e:	e709      	b.n	8001d34 <main+0xd8>
 8001f20:	20000124 	.word	0x20000124
 8001f24:	2000016c 	.word	0x2000016c
 8001f28:	200001b4 	.word	0x200001b4
 8001f2c:	20000112 	.word	0x20000112
 8001f30:	20000111 	.word	0x20000111
 8001f34:	20000110 	.word	0x20000110
 8001f38:	200000bc 	.word	0x200000bc
 8001f3c:	40010800 	.word	0x40010800
 8001f40:	40010c00 	.word	0x40010c00
 8001f44:	20000001 	.word	0x20000001
 8001f48:	2000011a 	.word	0x2000011a
 8001f4c:	66666667 	.word	0x66666667
 8001f50:	cccccccd 	.word	0xcccccccd
 8001f54:	20000118 	.word	0x20000118
 8001f58:	20000114 	.word	0x20000114
      }
    }
    else if (work_Mode == TIME_SETTING)
 8001f5c:	4ba0      	ldr	r3, [pc, #640]	@ (80021e0 <main+0x584>)
 8001f5e:	781b      	ldrb	r3, [r3, #0]
 8001f60:	2b54      	cmp	r3, #84	@ 0x54
 8001f62:	f040 80a7 	bne.w	80020b4 <main+0x458>
    {
      Segment_Set(6, 'N');
 8001f66:	214e      	movs	r1, #78	@ 0x4e
 8001f68:	2006      	movs	r0, #6
 8001f6a:	f7ff fbeb 	bl	8001744 <Segment_Set>
      if (time_Mode == SET_HOUR)
 8001f6e:	4b9d      	ldr	r3, [pc, #628]	@ (80021e4 <main+0x588>)
 8001f70:	781b      	ldrb	r3, [r3, #0]
 8001f72:	2b48      	cmp	r3, #72	@ 0x48
 8001f74:	d143      	bne.n	8001ffe <main+0x3a2>
      {

        Segment_Set(2, time_Minute_t / 10);
 8001f76:	4b9c      	ldr	r3, [pc, #624]	@ (80021e8 <main+0x58c>)
 8001f78:	781b      	ldrb	r3, [r3, #0]
 8001f7a:	4a9c      	ldr	r2, [pc, #624]	@ (80021ec <main+0x590>)
 8001f7c:	fba2 2303 	umull	r2, r3, r2, r3
 8001f80:	08db      	lsrs	r3, r3, #3
 8001f82:	b2db      	uxtb	r3, r3
 8001f84:	4619      	mov	r1, r3
 8001f86:	2002      	movs	r0, #2
 8001f88:	f7ff fbdc 	bl	8001744 <Segment_Set>
        Segment_Set(3, time_Minute_t % 10);
 8001f8c:	4b96      	ldr	r3, [pc, #600]	@ (80021e8 <main+0x58c>)
 8001f8e:	781a      	ldrb	r2, [r3, #0]
 8001f90:	4b96      	ldr	r3, [pc, #600]	@ (80021ec <main+0x590>)
 8001f92:	fba3 1302 	umull	r1, r3, r3, r2
 8001f96:	08d9      	lsrs	r1, r3, #3
 8001f98:	460b      	mov	r3, r1
 8001f9a:	009b      	lsls	r3, r3, #2
 8001f9c:	440b      	add	r3, r1
 8001f9e:	005b      	lsls	r3, r3, #1
 8001fa0:	1ad3      	subs	r3, r2, r3
 8001fa2:	b2db      	uxtb	r3, r3
 8001fa4:	4619      	mov	r1, r3
 8001fa6:	2003      	movs	r0, #3
 8001fa8:	f7ff fbcc 	bl	8001744 <Segment_Set>

        if (time_SecBit)
 8001fac:	4b90      	ldr	r3, [pc, #576]	@ (80021f0 <main+0x594>)
 8001fae:	781b      	ldrb	r3, [r3, #0]
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	d01b      	beq.n	8001fec <main+0x390>
        {
          Segment_Set(0, timeValue / 10);
 8001fb4:	4b8f      	ldr	r3, [pc, #572]	@ (80021f4 <main+0x598>)
 8001fb6:	781b      	ldrb	r3, [r3, #0]
 8001fb8:	4a8c      	ldr	r2, [pc, #560]	@ (80021ec <main+0x590>)
 8001fba:	fba2 2303 	umull	r2, r3, r2, r3
 8001fbe:	08db      	lsrs	r3, r3, #3
 8001fc0:	b2db      	uxtb	r3, r3
 8001fc2:	4619      	mov	r1, r3
 8001fc4:	2000      	movs	r0, #0
 8001fc6:	f7ff fbbd 	bl	8001744 <Segment_Set>
          Segment_Set(1, timeValue % 10);
 8001fca:	4b8a      	ldr	r3, [pc, #552]	@ (80021f4 <main+0x598>)
 8001fcc:	781a      	ldrb	r2, [r3, #0]
 8001fce:	4b87      	ldr	r3, [pc, #540]	@ (80021ec <main+0x590>)
 8001fd0:	fba3 1302 	umull	r1, r3, r3, r2
 8001fd4:	08d9      	lsrs	r1, r3, #3
 8001fd6:	460b      	mov	r3, r1
 8001fd8:	009b      	lsls	r3, r3, #2
 8001fda:	440b      	add	r3, r1
 8001fdc:	005b      	lsls	r3, r3, #1
 8001fde:	1ad3      	subs	r3, r2, r3
 8001fe0:	b2db      	uxtb	r3, r3
 8001fe2:	4619      	mov	r1, r3
 8001fe4:	2001      	movs	r0, #1
 8001fe6:	f7ff fbad 	bl	8001744 <Segment_Set>
 8001fea:	e04f      	b.n	800208c <main+0x430>
        }
        else
        {
          Segment_Set(0, 'N');
 8001fec:	214e      	movs	r1, #78	@ 0x4e
 8001fee:	2000      	movs	r0, #0
 8001ff0:	f7ff fba8 	bl	8001744 <Segment_Set>
          Segment_Set(1, 'N');
 8001ff4:	214e      	movs	r1, #78	@ 0x4e
 8001ff6:	2001      	movs	r0, #1
 8001ff8:	f7ff fba4 	bl	8001744 <Segment_Set>
 8001ffc:	e046      	b.n	800208c <main+0x430>
        }
      }
      else if (time_Mode == SET_MIN)
 8001ffe:	4b79      	ldr	r3, [pc, #484]	@ (80021e4 <main+0x588>)
 8002000:	781b      	ldrb	r3, [r3, #0]
 8002002:	2b4d      	cmp	r3, #77	@ 0x4d
 8002004:	d142      	bne.n	800208c <main+0x430>
      {
        Segment_Set(0, time_Hour_t / 10);
 8002006:	4b7c      	ldr	r3, [pc, #496]	@ (80021f8 <main+0x59c>)
 8002008:	781b      	ldrb	r3, [r3, #0]
 800200a:	4a78      	ldr	r2, [pc, #480]	@ (80021ec <main+0x590>)
 800200c:	fba2 2303 	umull	r2, r3, r2, r3
 8002010:	08db      	lsrs	r3, r3, #3
 8002012:	b2db      	uxtb	r3, r3
 8002014:	4619      	mov	r1, r3
 8002016:	2000      	movs	r0, #0
 8002018:	f7ff fb94 	bl	8001744 <Segment_Set>
        Segment_Set(1, time_Hour_t % 10);
 800201c:	4b76      	ldr	r3, [pc, #472]	@ (80021f8 <main+0x59c>)
 800201e:	781a      	ldrb	r2, [r3, #0]
 8002020:	4b72      	ldr	r3, [pc, #456]	@ (80021ec <main+0x590>)
 8002022:	fba3 1302 	umull	r1, r3, r3, r2
 8002026:	08d9      	lsrs	r1, r3, #3
 8002028:	460b      	mov	r3, r1
 800202a:	009b      	lsls	r3, r3, #2
 800202c:	440b      	add	r3, r1
 800202e:	005b      	lsls	r3, r3, #1
 8002030:	1ad3      	subs	r3, r2, r3
 8002032:	b2db      	uxtb	r3, r3
 8002034:	4619      	mov	r1, r3
 8002036:	2001      	movs	r0, #1
 8002038:	f7ff fb84 	bl	8001744 <Segment_Set>

        if (time_SecBit)
 800203c:	4b6c      	ldr	r3, [pc, #432]	@ (80021f0 <main+0x594>)
 800203e:	781b      	ldrb	r3, [r3, #0]
 8002040:	2b00      	cmp	r3, #0
 8002042:	d01b      	beq.n	800207c <main+0x420>
        {
          Segment_Set(2, timeValue / 10);
 8002044:	4b6b      	ldr	r3, [pc, #428]	@ (80021f4 <main+0x598>)
 8002046:	781b      	ldrb	r3, [r3, #0]
 8002048:	4a68      	ldr	r2, [pc, #416]	@ (80021ec <main+0x590>)
 800204a:	fba2 2303 	umull	r2, r3, r2, r3
 800204e:	08db      	lsrs	r3, r3, #3
 8002050:	b2db      	uxtb	r3, r3
 8002052:	4619      	mov	r1, r3
 8002054:	2002      	movs	r0, #2
 8002056:	f7ff fb75 	bl	8001744 <Segment_Set>
          Segment_Set(3, timeValue % 10);
 800205a:	4b66      	ldr	r3, [pc, #408]	@ (80021f4 <main+0x598>)
 800205c:	781a      	ldrb	r2, [r3, #0]
 800205e:	4b63      	ldr	r3, [pc, #396]	@ (80021ec <main+0x590>)
 8002060:	fba3 1302 	umull	r1, r3, r3, r2
 8002064:	08d9      	lsrs	r1, r3, #3
 8002066:	460b      	mov	r3, r1
 8002068:	009b      	lsls	r3, r3, #2
 800206a:	440b      	add	r3, r1
 800206c:	005b      	lsls	r3, r3, #1
 800206e:	1ad3      	subs	r3, r2, r3
 8002070:	b2db      	uxtb	r3, r3
 8002072:	4619      	mov	r1, r3
 8002074:	2003      	movs	r0, #3
 8002076:	f7ff fb65 	bl	8001744 <Segment_Set>
 800207a:	e007      	b.n	800208c <main+0x430>
        }
        else
        {
          Segment_Set(2, 'N');
 800207c:	214e      	movs	r1, #78	@ 0x4e
 800207e:	2002      	movs	r0, #2
 8002080:	f7ff fb60 	bl	8001744 <Segment_Set>
          Segment_Set(3, 'N');
 8002084:	214e      	movs	r1, #78	@ 0x4e
 8002086:	2003      	movs	r0, #3
 8002088:	f7ff fb5c 	bl	8001744 <Segment_Set>
        }
      }

      irRemote = Ir_GetData();
 800208c:	f7fe fd46 	bl	8000b1c <Ir_GetData>
 8002090:	4603      	mov	r3, r0
 8002092:	461a      	mov	r2, r3
 8002094:	4b59      	ldr	r3, [pc, #356]	@ (80021fc <main+0x5a0>)
 8002096:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 8002098:	4b58      	ldr	r3, [pc, #352]	@ (80021fc <main+0x5a0>)
 800209a:	881b      	ldrh	r3, [r3, #0]
 800209c:	2b00      	cmp	r3, #0
 800209e:	f43f ae49 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 80020a2:	4b56      	ldr	r3, [pc, #344]	@ (80021fc <main+0x5a0>)
 80020a4:	881b      	ldrh	r3, [r3, #0]
 80020a6:	4a4e      	ldr	r2, [pc, #312]	@ (80021e0 <main+0x584>)
 80020a8:	7812      	ldrb	r2, [r2, #0]
 80020aa:	4611      	mov	r1, r2
 80020ac:	4618      	mov	r0, r3
 80020ae:	f7fe f84d 	bl	800014c <Haamin_Remote>
 80020b2:	e63f      	b.n	8001d34 <main+0xd8>
      }
    }
    else if (work_Mode == SELECT_LEVEL)
 80020b4:	4b4a      	ldr	r3, [pc, #296]	@ (80021e0 <main+0x584>)
 80020b6:	781b      	ldrb	r3, [r3, #0]
 80020b8:	2b63      	cmp	r3, #99	@ 0x63
 80020ba:	d136      	bne.n	800212a <main+0x4ce>
    {
      Segment_Set(0,'H');
 80020bc:	2148      	movs	r1, #72	@ 0x48
 80020be:	2000      	movs	r0, #0
 80020c0:	f7ff fb40 	bl	8001744 <Segment_Set>
      Segment_Set(1,'L');
 80020c4:	214c      	movs	r1, #76	@ 0x4c
 80020c6:	2001      	movs	r0, #1
 80020c8:	f7ff fb3c 	bl	8001744 <Segment_Set>
      Segment_Set(2,chaleng_Level);
 80020cc:	4b4c      	ldr	r3, [pc, #304]	@ (8002200 <main+0x5a4>)
 80020ce:	781b      	ldrb	r3, [r3, #0]
 80020d0:	4619      	mov	r1, r3
 80020d2:	2002      	movs	r0, #2
 80020d4:	f7ff fb36 	bl	8001744 <Segment_Set>
      Segment_Set(3,'N');
 80020d8:	214e      	movs	r1, #78	@ 0x4e
 80020da:	2003      	movs	r0, #3
 80020dc:	f7ff fb32 	bl	8001744 <Segment_Set>
      Segment_Set(4,'N');
 80020e0:	214e      	movs	r1, #78	@ 0x4e
 80020e2:	2004      	movs	r0, #4
 80020e4:	f7ff fb2e 	bl	8001744 <Segment_Set>
      Segment_Set(5,'N');
 80020e8:	214e      	movs	r1, #78	@ 0x4e
 80020ea:	2005      	movs	r0, #5
 80020ec:	f7ff fb2a 	bl	8001744 <Segment_Set>
      Segment_Set(6,'N');
 80020f0:	214e      	movs	r1, #78	@ 0x4e
 80020f2:	2006      	movs	r0, #6
 80020f4:	f7ff fb26 	bl	8001744 <Segment_Set>
      HAL_GPIO_WritePin(blinky_Point, LOW);
 80020f8:	2200      	movs	r2, #0
 80020fa:	2110      	movs	r1, #16
 80020fc:	4841      	ldr	r0, [pc, #260]	@ (8002204 <main+0x5a8>)
 80020fe:	f001 fa98 	bl	8003632 <HAL_GPIO_WritePin>

      irRemote = Ir_GetData();
 8002102:	f7fe fd0b 	bl	8000b1c <Ir_GetData>
 8002106:	4603      	mov	r3, r0
 8002108:	461a      	mov	r2, r3
 800210a:	4b3c      	ldr	r3, [pc, #240]	@ (80021fc <main+0x5a0>)
 800210c:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 800210e:	4b3b      	ldr	r3, [pc, #236]	@ (80021fc <main+0x5a0>)
 8002110:	881b      	ldrh	r3, [r3, #0]
 8002112:	2b00      	cmp	r3, #0
 8002114:	f43f ae0e 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 8002118:	4b38      	ldr	r3, [pc, #224]	@ (80021fc <main+0x5a0>)
 800211a:	881b      	ldrh	r3, [r3, #0]
 800211c:	4a30      	ldr	r2, [pc, #192]	@ (80021e0 <main+0x584>)
 800211e:	7812      	ldrb	r2, [r2, #0]
 8002120:	4611      	mov	r1, r2
 8002122:	4618      	mov	r0, r3
 8002124:	f7fe f812 	bl	800014c <Haamin_Remote>
 8002128:	e604      	b.n	8001d34 <main+0xd8>
      }
    }
    else if (work_Mode == SET_TARGET)
 800212a:	4b2d      	ldr	r3, [pc, #180]	@ (80021e0 <main+0x584>)
 800212c:	781b      	ldrb	r3, [r3, #0]
 800212e:	2b47      	cmp	r3, #71	@ 0x47
 8002130:	f040 80cd 	bne.w	80022ce <main+0x672>
    {
      Segment_Set(0, 't');
 8002134:	2174      	movs	r1, #116	@ 0x74
 8002136:	2000      	movs	r0, #0
 8002138:	f7ff fb04 	bl	8001744 <Segment_Set>
      Segment_Set(1, 'n');
 800213c:	216e      	movs	r1, #110	@ 0x6e
 800213e:	2001      	movs	r0, #1
 8002140:	f7ff fb00 	bl	8001744 <Segment_Set>
      HAL_GPIO_WritePin(blinky_Point, HIGH);
 8002144:	2201      	movs	r2, #1
 8002146:	2110      	movs	r1, #16
 8002148:	482e      	ldr	r0, [pc, #184]	@ (8002204 <main+0x5a8>)
 800214a:	f001 fa72 	bl	8003632 <HAL_GPIO_WritePin>
      if (time_Mode == SET_SEC)
 800214e:	4b25      	ldr	r3, [pc, #148]	@ (80021e4 <main+0x588>)
 8002150:	781b      	ldrb	r3, [r3, #0]
 8002152:	2b53      	cmp	r3, #83	@ 0x53
 8002154:	d15c      	bne.n	8002210 <main+0x5b4>
      {

        Segment_Set(4, target_mili_Second / 10);
 8002156:	4b2c      	ldr	r3, [pc, #176]	@ (8002208 <main+0x5ac>)
 8002158:	781b      	ldrb	r3, [r3, #0]
 800215a:	4a24      	ldr	r2, [pc, #144]	@ (80021ec <main+0x590>)
 800215c:	fba2 2303 	umull	r2, r3, r2, r3
 8002160:	08db      	lsrs	r3, r3, #3
 8002162:	b2db      	uxtb	r3, r3
 8002164:	4619      	mov	r1, r3
 8002166:	2004      	movs	r0, #4
 8002168:	f7ff faec 	bl	8001744 <Segment_Set>
        Segment_Set(5, target_mili_Second % 10);
 800216c:	4b26      	ldr	r3, [pc, #152]	@ (8002208 <main+0x5ac>)
 800216e:	781a      	ldrb	r2, [r3, #0]
 8002170:	4b1e      	ldr	r3, [pc, #120]	@ (80021ec <main+0x590>)
 8002172:	fba3 1302 	umull	r1, r3, r3, r2
 8002176:	08d9      	lsrs	r1, r3, #3
 8002178:	460b      	mov	r3, r1
 800217a:	009b      	lsls	r3, r3, #2
 800217c:	440b      	add	r3, r1
 800217e:	005b      	lsls	r3, r3, #1
 8002180:	1ad3      	subs	r3, r2, r3
 8002182:	b2db      	uxtb	r3, r3
 8002184:	4619      	mov	r1, r3
 8002186:	2005      	movs	r0, #5
 8002188:	f7ff fadc 	bl	8001744 <Segment_Set>

        if (time_SecBit)
 800218c:	4b18      	ldr	r3, [pc, #96]	@ (80021f0 <main+0x594>)
 800218e:	781b      	ldrb	r3, [r3, #0]
 8002190:	2b00      	cmp	r3, #0
 8002192:	d01b      	beq.n	80021cc <main+0x570>
        {
          Segment_Set(2, target_Second / 10);
 8002194:	4b1d      	ldr	r3, [pc, #116]	@ (800220c <main+0x5b0>)
 8002196:	781b      	ldrb	r3, [r3, #0]
 8002198:	4a14      	ldr	r2, [pc, #80]	@ (80021ec <main+0x590>)
 800219a:	fba2 2303 	umull	r2, r3, r2, r3
 800219e:	08db      	lsrs	r3, r3, #3
 80021a0:	b2db      	uxtb	r3, r3
 80021a2:	4619      	mov	r1, r3
 80021a4:	2002      	movs	r0, #2
 80021a6:	f7ff facd 	bl	8001744 <Segment_Set>
          Segment_Set(3, target_Second % 10);
 80021aa:	4b18      	ldr	r3, [pc, #96]	@ (800220c <main+0x5b0>)
 80021ac:	781a      	ldrb	r2, [r3, #0]
 80021ae:	4b0f      	ldr	r3, [pc, #60]	@ (80021ec <main+0x590>)
 80021b0:	fba3 1302 	umull	r1, r3, r3, r2
 80021b4:	08d9      	lsrs	r1, r3, #3
 80021b6:	460b      	mov	r3, r1
 80021b8:	009b      	lsls	r3, r3, #2
 80021ba:	440b      	add	r3, r1
 80021bc:	005b      	lsls	r3, r3, #1
 80021be:	1ad3      	subs	r3, r2, r3
 80021c0:	b2db      	uxtb	r3, r3
 80021c2:	4619      	mov	r1, r3
 80021c4:	2003      	movs	r0, #3
 80021c6:	f7ff fabd 	bl	8001744 <Segment_Set>
 80021ca:	e068      	b.n	800229e <main+0x642>
        }
        else
        {
          Segment_Set(2, 'N');
 80021cc:	214e      	movs	r1, #78	@ 0x4e
 80021ce:	2002      	movs	r0, #2
 80021d0:	f7ff fab8 	bl	8001744 <Segment_Set>
          Segment_Set(3, 'N');
 80021d4:	214e      	movs	r1, #78	@ 0x4e
 80021d6:	2003      	movs	r0, #3
 80021d8:	f7ff fab4 	bl	8001744 <Segment_Set>
 80021dc:	e05f      	b.n	800229e <main+0x642>
 80021de:	bf00      	nop
 80021e0:	20000001 	.word	0x20000001
 80021e4:	20000002 	.word	0x20000002
 80021e8:	20000116 	.word	0x20000116
 80021ec:	cccccccd 	.word	0xcccccccd
 80021f0:	20000113 	.word	0x20000113
 80021f4:	20000117 	.word	0x20000117
 80021f8:	20000115 	.word	0x20000115
 80021fc:	20000118 	.word	0x20000118
 8002200:	20000004 	.word	0x20000004
 8002204:	40010800 	.word	0x40010800
 8002208:	2000011e 	.word	0x2000011e
 800220c:	2000011d 	.word	0x2000011d
        }
      }
      else if (time_Mode == SET_MILI)
 8002210:	4b42      	ldr	r3, [pc, #264]	@ (800231c <main+0x6c0>)
 8002212:	781b      	ldrb	r3, [r3, #0]
 8002214:	2b49      	cmp	r3, #73	@ 0x49
 8002216:	d142      	bne.n	800229e <main+0x642>
      {
        Segment_Set(2, target_Second / 10);
 8002218:	4b41      	ldr	r3, [pc, #260]	@ (8002320 <main+0x6c4>)
 800221a:	781b      	ldrb	r3, [r3, #0]
 800221c:	4a41      	ldr	r2, [pc, #260]	@ (8002324 <main+0x6c8>)
 800221e:	fba2 2303 	umull	r2, r3, r2, r3
 8002222:	08db      	lsrs	r3, r3, #3
 8002224:	b2db      	uxtb	r3, r3
 8002226:	4619      	mov	r1, r3
 8002228:	2002      	movs	r0, #2
 800222a:	f7ff fa8b 	bl	8001744 <Segment_Set>
        Segment_Set(3, target_Second % 10);
 800222e:	4b3c      	ldr	r3, [pc, #240]	@ (8002320 <main+0x6c4>)
 8002230:	781a      	ldrb	r2, [r3, #0]
 8002232:	4b3c      	ldr	r3, [pc, #240]	@ (8002324 <main+0x6c8>)
 8002234:	fba3 1302 	umull	r1, r3, r3, r2
 8002238:	08d9      	lsrs	r1, r3, #3
 800223a:	460b      	mov	r3, r1
 800223c:	009b      	lsls	r3, r3, #2
 800223e:	440b      	add	r3, r1
 8002240:	005b      	lsls	r3, r3, #1
 8002242:	1ad3      	subs	r3, r2, r3
 8002244:	b2db      	uxtb	r3, r3
 8002246:	4619      	mov	r1, r3
 8002248:	2003      	movs	r0, #3
 800224a:	f7ff fa7b 	bl	8001744 <Segment_Set>

        if (time_SecBit)
 800224e:	4b36      	ldr	r3, [pc, #216]	@ (8002328 <main+0x6cc>)
 8002250:	781b      	ldrb	r3, [r3, #0]
 8002252:	2b00      	cmp	r3, #0
 8002254:	d01b      	beq.n	800228e <main+0x632>
        {
          Segment_Set(4, target_mili_Second / 10);
 8002256:	4b35      	ldr	r3, [pc, #212]	@ (800232c <main+0x6d0>)
 8002258:	781b      	ldrb	r3, [r3, #0]
 800225a:	4a32      	ldr	r2, [pc, #200]	@ (8002324 <main+0x6c8>)
 800225c:	fba2 2303 	umull	r2, r3, r2, r3
 8002260:	08db      	lsrs	r3, r3, #3
 8002262:	b2db      	uxtb	r3, r3
 8002264:	4619      	mov	r1, r3
 8002266:	2004      	movs	r0, #4
 8002268:	f7ff fa6c 	bl	8001744 <Segment_Set>
          Segment_Set(5, target_mili_Second % 10);
 800226c:	4b2f      	ldr	r3, [pc, #188]	@ (800232c <main+0x6d0>)
 800226e:	781a      	ldrb	r2, [r3, #0]
 8002270:	4b2c      	ldr	r3, [pc, #176]	@ (8002324 <main+0x6c8>)
 8002272:	fba3 1302 	umull	r1, r3, r3, r2
 8002276:	08d9      	lsrs	r1, r3, #3
 8002278:	460b      	mov	r3, r1
 800227a:	009b      	lsls	r3, r3, #2
 800227c:	440b      	add	r3, r1
 800227e:	005b      	lsls	r3, r3, #1
 8002280:	1ad3      	subs	r3, r2, r3
 8002282:	b2db      	uxtb	r3, r3
 8002284:	4619      	mov	r1, r3
 8002286:	2005      	movs	r0, #5
 8002288:	f7ff fa5c 	bl	8001744 <Segment_Set>
 800228c:	e007      	b.n	800229e <main+0x642>
        }
        else
        {
          Segment_Set(4, 'N');
 800228e:	214e      	movs	r1, #78	@ 0x4e
 8002290:	2004      	movs	r0, #4
 8002292:	f7ff fa57 	bl	8001744 <Segment_Set>
          Segment_Set(5, 'N');
 8002296:	214e      	movs	r1, #78	@ 0x4e
 8002298:	2005      	movs	r0, #5
 800229a:	f7ff fa53 	bl	8001744 <Segment_Set>
        }
      }
      
      Segment_Set(6, 'N');
 800229e:	214e      	movs	r1, #78	@ 0x4e
 80022a0:	2006      	movs	r0, #6
 80022a2:	f7ff fa4f 	bl	8001744 <Segment_Set>
      irRemote = Ir_GetData();
 80022a6:	f7fe fc39 	bl	8000b1c <Ir_GetData>
 80022aa:	4603      	mov	r3, r0
 80022ac:	461a      	mov	r2, r3
 80022ae:	4b20      	ldr	r3, [pc, #128]	@ (8002330 <main+0x6d4>)
 80022b0:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 80022b2:	4b1f      	ldr	r3, [pc, #124]	@ (8002330 <main+0x6d4>)
 80022b4:	881b      	ldrh	r3, [r3, #0]
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	f43f ad3c 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 80022bc:	4b1c      	ldr	r3, [pc, #112]	@ (8002330 <main+0x6d4>)
 80022be:	881b      	ldrh	r3, [r3, #0]
 80022c0:	4a1c      	ldr	r2, [pc, #112]	@ (8002334 <main+0x6d8>)
 80022c2:	7812      	ldrb	r2, [r2, #0]
 80022c4:	4611      	mov	r1, r2
 80022c6:	4618      	mov	r0, r3
 80022c8:	f7fd ff40 	bl	800014c <Haamin_Remote>
 80022cc:	e532      	b.n	8001d34 <main+0xd8>
      }
    }
    else if (work_Mode == CHALENG)
 80022ce:	4b19      	ldr	r3, [pc, #100]	@ (8002334 <main+0x6d8>)
 80022d0:	781b      	ldrb	r3, [r3, #0]
 80022d2:	2b4c      	cmp	r3, #76	@ 0x4c
 80022d4:	f47f ad2e 	bne.w	8001d34 <main+0xd8>
    {
      time_Out = 0;
 80022d8:	4b17      	ldr	r3, [pc, #92]	@ (8002338 <main+0x6dc>)
 80022da:	2200      	movs	r2, #0
 80022dc:	701a      	strb	r2, [r3, #0]
      if(HAL_GPIO_ReadPin(Timer_GPIO_Port,Timer_Pin)== GPIO_PIN_RESET)
 80022de:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80022e2:	4816      	ldr	r0, [pc, #88]	@ (800233c <main+0x6e0>)
 80022e4:	f001 f98e 	bl	8003604 <HAL_GPIO_ReadPin>
 80022e8:	4603      	mov	r3, r0
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d13b      	bne.n	8002366 <main+0x70a>
      {
        HAL_Delay(50);
 80022ee:	2032      	movs	r0, #50	@ 0x32
 80022f0:	f000 fcc0 	bl	8002c74 <HAL_Delay>
        if(HAL_GPIO_ReadPin(Timer_GPIO_Port,Timer_Pin)== GPIO_PIN_RESET)
 80022f4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80022f8:	4810      	ldr	r0, [pc, #64]	@ (800233c <main+0x6e0>)
 80022fa:	f001 f983 	bl	8003604 <HAL_GPIO_ReadPin>
 80022fe:	4603      	mov	r3, r0
 8002300:	2b00      	cmp	r3, #0
 8002302:	d127      	bne.n	8002354 <main+0x6f8>
        {
          if(timer_Run)
 8002304:	4b0e      	ldr	r3, [pc, #56]	@ (8002340 <main+0x6e4>)
 8002306:	781b      	ldrb	r3, [r3, #0]
 8002308:	2b00      	cmp	r3, #0
 800230a:	d01d      	beq.n	8002348 <main+0x6ec>
          {
            timer_Run = 0;
 800230c:	4b0c      	ldr	r3, [pc, #48]	@ (8002340 <main+0x6e4>)
 800230e:	2200      	movs	r2, #0
 8002310:	701a      	strb	r2, [r3, #0]
            resultCheck_Flag = 1;
 8002312:	4b0c      	ldr	r3, [pc, #48]	@ (8002344 <main+0x6e8>)
 8002314:	2201      	movs	r2, #1
 8002316:	701a      	strb	r2, [r3, #0]
 8002318:	e019      	b.n	800234e <main+0x6f2>
 800231a:	bf00      	nop
 800231c:	20000002 	.word	0x20000002
 8002320:	2000011d 	.word	0x2000011d
 8002324:	cccccccd 	.word	0xcccccccd
 8002328:	20000113 	.word	0x20000113
 800232c:	2000011e 	.word	0x2000011e
 8002330:	20000118 	.word	0x20000118
 8002334:	20000001 	.word	0x20000001
 8002338:	20000114 	.word	0x20000114
 800233c:	40010c00 	.word	0x40010c00
 8002340:	20000121 	.word	0x20000121
 8002344:	2000011f 	.word	0x2000011f
          }
          else
          {
            timer_Run = 1;
 8002348:	4b8d      	ldr	r3, [pc, #564]	@ (8002580 <main+0x924>)
 800234a:	2201      	movs	r2, #1
 800234c:	701a      	strb	r2, [r3, #0]
          }
          Buzz(50);
 800234e:	2032      	movs	r0, #50	@ 0x32
 8002350:	f7fe fafa 	bl	8000948 <Buzz>
        }while(HAL_GPIO_ReadPin(Timer_GPIO_Port,Timer_Pin)== GPIO_PIN_RESET);
 8002354:	bf00      	nop
 8002356:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800235a:	488a      	ldr	r0, [pc, #552]	@ (8002584 <main+0x928>)
 800235c:	f001 f952 	bl	8003604 <HAL_GPIO_ReadPin>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d0f7      	beq.n	8002356 <main+0x6fa>
      }

      if(HAL_GPIO_ReadPin(Reset_GPIO_Port,Reset_Pin)== GPIO_PIN_RESET)
 8002366:	2180      	movs	r1, #128	@ 0x80
 8002368:	4886      	ldr	r0, [pc, #536]	@ (8002584 <main+0x928>)
 800236a:	f001 f94b 	bl	8003604 <HAL_GPIO_ReadPin>
 800236e:	4603      	mov	r3, r0
 8002370:	2b00      	cmp	r3, #0
 8002372:	d123      	bne.n	80023bc <main+0x760>
      {
        HAL_Delay(50);
 8002374:	2032      	movs	r0, #50	@ 0x32
 8002376:	f000 fc7d 	bl	8002c74 <HAL_Delay>
        if(HAL_GPIO_ReadPin(Reset_GPIO_Port,Reset_Pin)== GPIO_PIN_RESET)
 800237a:	2180      	movs	r1, #128	@ 0x80
 800237c:	4881      	ldr	r0, [pc, #516]	@ (8002584 <main+0x928>)
 800237e:	f001 f941 	bl	8003604 <HAL_GPIO_ReadPin>
 8002382:	4603      	mov	r3, r0
 8002384:	2b00      	cmp	r3, #0
 8002386:	d111      	bne.n	80023ac <main+0x750>
        {
          timer_Second = 0;
 8002388:	4b7f      	ldr	r3, [pc, #508]	@ (8002588 <main+0x92c>)
 800238a:	2200      	movs	r2, #0
 800238c:	701a      	strb	r2, [r3, #0]
          timer_mili_Second = 0;
 800238e:	4b7f      	ldr	r3, [pc, #508]	@ (800258c <main+0x930>)
 8002390:	2200      	movs	r2, #0
 8002392:	701a      	strb	r2, [r3, #0]
          timer_Run = 0;
 8002394:	4b7a      	ldr	r3, [pc, #488]	@ (8002580 <main+0x924>)
 8002396:	2200      	movs	r2, #0
 8002398:	701a      	strb	r2, [r3, #0]
          Buzz(100);HAL_Delay(50);Buzz(100);
 800239a:	2064      	movs	r0, #100	@ 0x64
 800239c:	f7fe fad4 	bl	8000948 <Buzz>
 80023a0:	2032      	movs	r0, #50	@ 0x32
 80023a2:	f000 fc67 	bl	8002c74 <HAL_Delay>
 80023a6:	2064      	movs	r0, #100	@ 0x64
 80023a8:	f7fe face 	bl	8000948 <Buzz>
        }while(HAL_GPIO_ReadPin(Reset_GPIO_Port,Reset_Pin)== GPIO_PIN_RESET);
 80023ac:	bf00      	nop
 80023ae:	2180      	movs	r1, #128	@ 0x80
 80023b0:	4874      	ldr	r0, [pc, #464]	@ (8002584 <main+0x928>)
 80023b2:	f001 f927 	bl	8003604 <HAL_GPIO_ReadPin>
 80023b6:	4603      	mov	r3, r0
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	d0f8      	beq.n	80023ae <main+0x752>
      }

      if(resultCheck_Flag)
 80023bc:	4b74      	ldr	r3, [pc, #464]	@ (8002590 <main+0x934>)
 80023be:	781b      	ldrb	r3, [r3, #0]
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d034      	beq.n	800242e <main+0x7d2>
      {
        resultCheck_Flag = 0;
 80023c4:	4b72      	ldr	r3, [pc, #456]	@ (8002590 <main+0x934>)
 80023c6:	2200      	movs	r2, #0
 80023c8:	701a      	strb	r2, [r3, #0]
        chaleng_Number =( timer_Second * 100) + timer_mili_Second;
 80023ca:	4b6f      	ldr	r3, [pc, #444]	@ (8002588 <main+0x92c>)
 80023cc:	781b      	ldrb	r3, [r3, #0]
 80023ce:	461a      	mov	r2, r3
 80023d0:	0092      	lsls	r2, r2, #2
 80023d2:	4413      	add	r3, r2
 80023d4:	461a      	mov	r2, r3
 80023d6:	0091      	lsls	r1, r2, #2
 80023d8:	461a      	mov	r2, r3
 80023da:	460b      	mov	r3, r1
 80023dc:	4413      	add	r3, r2
 80023de:	009b      	lsls	r3, r3, #2
 80023e0:	b2da      	uxtb	r2, r3
 80023e2:	4b6a      	ldr	r3, [pc, #424]	@ (800258c <main+0x930>)
 80023e4:	781b      	ldrb	r3, [r3, #0]
 80023e6:	4413      	add	r3, r2
 80023e8:	b2da      	uxtb	r2, r3
 80023ea:	4b6a      	ldr	r3, [pc, #424]	@ (8002594 <main+0x938>)
 80023ec:	701a      	strb	r2, [r3, #0]
        if(((chaleng_Number + chaleng_Level_Val) >= target_Number) && (target_Number >= (chaleng_Number - chaleng_Level_Val)))
 80023ee:	4b69      	ldr	r3, [pc, #420]	@ (8002594 <main+0x938>)
 80023f0:	781b      	ldrb	r3, [r3, #0]
 80023f2:	461a      	mov	r2, r3
 80023f4:	4b68      	ldr	r3, [pc, #416]	@ (8002598 <main+0x93c>)
 80023f6:	781b      	ldrb	r3, [r3, #0]
 80023f8:	4413      	add	r3, r2
 80023fa:	4a68      	ldr	r2, [pc, #416]	@ (800259c <main+0x940>)
 80023fc:	7812      	ldrb	r2, [r2, #0]
 80023fe:	4293      	cmp	r3, r2
 8002400:	db15      	blt.n	800242e <main+0x7d2>
 8002402:	4b66      	ldr	r3, [pc, #408]	@ (800259c <main+0x940>)
 8002404:	781b      	ldrb	r3, [r3, #0]
 8002406:	461a      	mov	r2, r3
 8002408:	4b62      	ldr	r3, [pc, #392]	@ (8002594 <main+0x938>)
 800240a:	781b      	ldrb	r3, [r3, #0]
 800240c:	4619      	mov	r1, r3
 800240e:	4b62      	ldr	r3, [pc, #392]	@ (8002598 <main+0x93c>)
 8002410:	781b      	ldrb	r3, [r3, #0]
 8002412:	1acb      	subs	r3, r1, r3
 8002414:	429a      	cmp	r2, r3
 8002416:	db0a      	blt.n	800242e <main+0x7d2>
        {
          timer_Second = target_Second;
 8002418:	4b61      	ldr	r3, [pc, #388]	@ (80025a0 <main+0x944>)
 800241a:	781a      	ldrb	r2, [r3, #0]
 800241c:	4b5a      	ldr	r3, [pc, #360]	@ (8002588 <main+0x92c>)
 800241e:	701a      	strb	r2, [r3, #0]
          timer_mili_Second = target_mili_Second;
 8002420:	4b60      	ldr	r3, [pc, #384]	@ (80025a4 <main+0x948>)
 8002422:	781a      	ldrb	r2, [r3, #0]
 8002424:	4b59      	ldr	r3, [pc, #356]	@ (800258c <main+0x930>)
 8002426:	701a      	strb	r2, [r3, #0]
          win_Buzzer = 1;
 8002428:	4b5f      	ldr	r3, [pc, #380]	@ (80025a8 <main+0x94c>)
 800242a:	2201      	movs	r2, #1
 800242c:	701a      	strb	r2, [r3, #0]
        }
      }

      Segment_Set(0,'C');
 800242e:	2143      	movs	r1, #67	@ 0x43
 8002430:	2000      	movs	r0, #0
 8002432:	f7ff f987 	bl	8001744 <Segment_Set>
      Segment_Set(1,'L');
 8002436:	214c      	movs	r1, #76	@ 0x4c
 8002438:	2001      	movs	r0, #1
 800243a:	f7ff f983 	bl	8001744 <Segment_Set>
      Segment_Set(2,timer_Second/10);
 800243e:	4b52      	ldr	r3, [pc, #328]	@ (8002588 <main+0x92c>)
 8002440:	781b      	ldrb	r3, [r3, #0]
 8002442:	4a5a      	ldr	r2, [pc, #360]	@ (80025ac <main+0x950>)
 8002444:	fba2 2303 	umull	r2, r3, r2, r3
 8002448:	08db      	lsrs	r3, r3, #3
 800244a:	b2db      	uxtb	r3, r3
 800244c:	4619      	mov	r1, r3
 800244e:	2002      	movs	r0, #2
 8002450:	f7ff f978 	bl	8001744 <Segment_Set>
      Segment_Set(3,timer_Second%10);
 8002454:	4b4c      	ldr	r3, [pc, #304]	@ (8002588 <main+0x92c>)
 8002456:	781a      	ldrb	r2, [r3, #0]
 8002458:	4b54      	ldr	r3, [pc, #336]	@ (80025ac <main+0x950>)
 800245a:	fba3 1302 	umull	r1, r3, r3, r2
 800245e:	08d9      	lsrs	r1, r3, #3
 8002460:	460b      	mov	r3, r1
 8002462:	009b      	lsls	r3, r3, #2
 8002464:	440b      	add	r3, r1
 8002466:	005b      	lsls	r3, r3, #1
 8002468:	1ad3      	subs	r3, r2, r3
 800246a:	b2db      	uxtb	r3, r3
 800246c:	4619      	mov	r1, r3
 800246e:	2003      	movs	r0, #3
 8002470:	f7ff f968 	bl	8001744 <Segment_Set>
      Segment_Set(4,timer_mili_Second/10);
 8002474:	4b45      	ldr	r3, [pc, #276]	@ (800258c <main+0x930>)
 8002476:	781b      	ldrb	r3, [r3, #0]
 8002478:	4a4c      	ldr	r2, [pc, #304]	@ (80025ac <main+0x950>)
 800247a:	fba2 2303 	umull	r2, r3, r2, r3
 800247e:	08db      	lsrs	r3, r3, #3
 8002480:	b2db      	uxtb	r3, r3
 8002482:	4619      	mov	r1, r3
 8002484:	2004      	movs	r0, #4
 8002486:	f7ff f95d 	bl	8001744 <Segment_Set>
      Segment_Set(5,timer_mili_Second%10);
 800248a:	4b40      	ldr	r3, [pc, #256]	@ (800258c <main+0x930>)
 800248c:	781a      	ldrb	r2, [r3, #0]
 800248e:	4b47      	ldr	r3, [pc, #284]	@ (80025ac <main+0x950>)
 8002490:	fba3 1302 	umull	r1, r3, r3, r2
 8002494:	08d9      	lsrs	r1, r3, #3
 8002496:	460b      	mov	r3, r1
 8002498:	009b      	lsls	r3, r3, #2
 800249a:	440b      	add	r3, r1
 800249c:	005b      	lsls	r3, r3, #1
 800249e:	1ad3      	subs	r3, r2, r3
 80024a0:	b2db      	uxtb	r3, r3
 80024a2:	4619      	mov	r1, r3
 80024a4:	2005      	movs	r0, #5
 80024a6:	f7ff f94d 	bl	8001744 <Segment_Set>
      Segment_Set(6, 's');
 80024aa:	2173      	movs	r1, #115	@ 0x73
 80024ac:	2006      	movs	r0, #6
 80024ae:	f7ff f949 	bl	8001744 <Segment_Set>

      if(win_Buzzer)
 80024b2:	4b3d      	ldr	r3, [pc, #244]	@ (80025a8 <main+0x94c>)
 80024b4:	781b      	ldrb	r3, [r3, #0]
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d04c      	beq.n	8002554 <main+0x8f8>
      {
        win_Buzzer = 0;
 80024ba:	4b3b      	ldr	r3, [pc, #236]	@ (80025a8 <main+0x94c>)
 80024bc:	2200      	movs	r2, #0
 80024be:	701a      	strb	r2, [r3, #0]
        Segment_Set(0,'S');Segment_Set(1,'U');Segment_Set(2,'C');Segment_Set(3,'C');Segment_Set(4,'E');Segment_Set(5,'S');
 80024c0:	2153      	movs	r1, #83	@ 0x53
 80024c2:	2000      	movs	r0, #0
 80024c4:	f7ff f93e 	bl	8001744 <Segment_Set>
 80024c8:	2155      	movs	r1, #85	@ 0x55
 80024ca:	2001      	movs	r0, #1
 80024cc:	f7ff f93a 	bl	8001744 <Segment_Set>
 80024d0:	2143      	movs	r1, #67	@ 0x43
 80024d2:	2002      	movs	r0, #2
 80024d4:	f7ff f936 	bl	8001744 <Segment_Set>
 80024d8:	2143      	movs	r1, #67	@ 0x43
 80024da:	2003      	movs	r0, #3
 80024dc:	f7ff f932 	bl	8001744 <Segment_Set>
 80024e0:	2145      	movs	r1, #69	@ 0x45
 80024e2:	2004      	movs	r0, #4
 80024e4:	f7ff f92e 	bl	8001744 <Segment_Set>
 80024e8:	2153      	movs	r1, #83	@ 0x53
 80024ea:	2005      	movs	r0, #5
 80024ec:	f7ff f92a 	bl	8001744 <Segment_Set>
        HAL_GPIO_WritePin(blinky_Point, LOW);
 80024f0:	2200      	movs	r2, #0
 80024f2:	2110      	movs	r1, #16
 80024f4:	482e      	ldr	r0, [pc, #184]	@ (80025b0 <main+0x954>)
 80024f6:	f001 f89c 	bl	8003632 <HAL_GPIO_WritePin>
        Buzz(100);HAL_Delay(100);
 80024fa:	2064      	movs	r0, #100	@ 0x64
 80024fc:	f7fe fa24 	bl	8000948 <Buzz>
 8002500:	2064      	movs	r0, #100	@ 0x64
 8002502:	f000 fbb7 	bl	8002c74 <HAL_Delay>
       // Segment_Set(0,'N');Segment_Set(1,'N');Segment_Set(2,timer_Second/10);Segment_Set(3,timer_Second%10);Segment_Set(4,timer_mili_Second/10);Segment_Set(5,timer_mili_Second%10);
        Buzz(100);HAL_Delay(100);
 8002506:	2064      	movs	r0, #100	@ 0x64
 8002508:	f7fe fa1e 	bl	8000948 <Buzz>
 800250c:	2064      	movs	r0, #100	@ 0x64
 800250e:	f000 fbb1 	bl	8002c74 <HAL_Delay>
        //Segment_Set(0,'S');Segment_Set(1,'U');Segment_Set(2,'C');Segment_Set(3,'C');Segment_Set(4,'E');Segment_Set(5,'S');
        Buzz(100);HAL_Delay(100);
 8002512:	2064      	movs	r0, #100	@ 0x64
 8002514:	f7fe fa18 	bl	8000948 <Buzz>
 8002518:	2064      	movs	r0, #100	@ 0x64
 800251a:	f000 fbab 	bl	8002c74 <HAL_Delay>
        //Segment_Set(0,'N');Segment_Set(1,'N');Segment_Set(2,timer_Second/10);Segment_Set(3,timer_Second%10);Segment_Set(4,timer_mili_Second/10);Segment_Set(5,timer_mili_Second%10);
        Buzz(100);HAL_Delay(100);
 800251e:	2064      	movs	r0, #100	@ 0x64
 8002520:	f7fe fa12 	bl	8000948 <Buzz>
 8002524:	2064      	movs	r0, #100	@ 0x64
 8002526:	f000 fba5 	bl	8002c74 <HAL_Delay>
        //Segment_Set(0,'S');Segment_Set(1,'U');Segment_Set(2,'C');Segment_Set(3,'C');Segment_Set(4,'E');Segment_Set(5,'S');
        Buzz(100);HAL_Delay(100);
 800252a:	2064      	movs	r0, #100	@ 0x64
 800252c:	f7fe fa0c 	bl	8000948 <Buzz>
 8002530:	2064      	movs	r0, #100	@ 0x64
 8002532:	f000 fb9f 	bl	8002c74 <HAL_Delay>
        //Segment_Set(0,'N');Segment_Set(1,'N');Segment_Set(2,timer_Second/10);Segment_Set(3,timer_Second%10);Segment_Set(4,timer_mili_Second/10);Segment_Set(5,timer_mili_Second%10);
        Buzz(100);HAL_Delay(100);
 8002536:	2064      	movs	r0, #100	@ 0x64
 8002538:	f7fe fa06 	bl	8000948 <Buzz>
 800253c:	2064      	movs	r0, #100	@ 0x64
 800253e:	f000 fb99 	bl	8002c74 <HAL_Delay>
        //Segment_Set(0,'S');Segment_Set(1,'U');Segment_Set(2,'C');Segment_Set(3,'C');Segment_Set(4,'E');Segment_Set(5,'S');
        HAL_Delay(400);
 8002542:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 8002546:	f000 fb95 	bl	8002c74 <HAL_Delay>
        HAL_GPIO_WritePin(blinky_Point, HIGH);
 800254a:	2201      	movs	r2, #1
 800254c:	2110      	movs	r1, #16
 800254e:	4818      	ldr	r0, [pc, #96]	@ (80025b0 <main+0x954>)
 8002550:	f001 f86f 	bl	8003632 <HAL_GPIO_WritePin>
      }

      irRemote = Ir_GetData();
 8002554:	f7fe fae2 	bl	8000b1c <Ir_GetData>
 8002558:	4603      	mov	r3, r0
 800255a:	461a      	mov	r2, r3
 800255c:	4b15      	ldr	r3, [pc, #84]	@ (80025b4 <main+0x958>)
 800255e:	801a      	strh	r2, [r3, #0]
      if (irRemote != 0)
 8002560:	4b14      	ldr	r3, [pc, #80]	@ (80025b4 <main+0x958>)
 8002562:	881b      	ldrh	r3, [r3, #0]
 8002564:	2b00      	cmp	r3, #0
 8002566:	f43f abe5 	beq.w	8001d34 <main+0xd8>
      {
        Haamin_Remote(irRemote, work_Mode);
 800256a:	4b12      	ldr	r3, [pc, #72]	@ (80025b4 <main+0x958>)
 800256c:	881b      	ldrh	r3, [r3, #0]
 800256e:	4a12      	ldr	r2, [pc, #72]	@ (80025b8 <main+0x95c>)
 8002570:	7812      	ldrb	r2, [r2, #0]
 8002572:	4611      	mov	r1, r2
 8002574:	4618      	mov	r0, r3
 8002576:	f7fd fde9 	bl	800014c <Haamin_Remote>
    if (work_Mode == MODE_NORMAL)
 800257a:	f7ff bbdb 	b.w	8001d34 <main+0xd8>
 800257e:	bf00      	nop
 8002580:	20000121 	.word	0x20000121
 8002584:	40010c00 	.word	0x40010c00
 8002588:	2000011b 	.word	0x2000011b
 800258c:	2000011c 	.word	0x2000011c
 8002590:	2000011f 	.word	0x2000011f
 8002594:	20000007 	.word	0x20000007
 8002598:	20000005 	.word	0x20000005
 800259c:	20000006 	.word	0x20000006
 80025a0:	2000011d 	.word	0x2000011d
 80025a4:	2000011e 	.word	0x2000011e
 80025a8:	20000120 	.word	0x20000120
 80025ac:	cccccccd 	.word	0xcccccccd
 80025b0:	40010800 	.word	0x40010800
 80025b4:	20000118 	.word	0x20000118
 80025b8:	20000001 	.word	0x20000001

080025bc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80025bc:	b580      	push	{r7, lr}
 80025be:	b094      	sub	sp, #80	@ 0x50
 80025c0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80025c2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80025c6:	2228      	movs	r2, #40	@ 0x28
 80025c8:	2100      	movs	r1, #0
 80025ca:	4618      	mov	r0, r3
 80025cc:	f003 f97e 	bl	80058cc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025d0:	f107 0314 	add.w	r3, r7, #20
 80025d4:	2200      	movs	r2, #0
 80025d6:	601a      	str	r2, [r3, #0]
 80025d8:	605a      	str	r2, [r3, #4]
 80025da:	609a      	str	r2, [r3, #8]
 80025dc:	60da      	str	r2, [r3, #12]
 80025de:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80025e0:	1d3b      	adds	r3, r7, #4
 80025e2:	2200      	movs	r2, #0
 80025e4:	601a      	str	r2, [r3, #0]
 80025e6:	605a      	str	r2, [r3, #4]
 80025e8:	609a      	str	r2, [r3, #8]
 80025ea:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80025ec:	2301      	movs	r3, #1
 80025ee:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80025f0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80025f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80025f6:	2300      	movs	r3, #0
 80025f8:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80025fa:	2301      	movs	r3, #1
 80025fc:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025fe:	2302      	movs	r3, #2
 8002600:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002602:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002606:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8002608:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 800260c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800260e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002612:	4618      	mov	r0, r3
 8002614:	f002 f8ae 	bl	8004774 <HAL_RCC_OscConfig>
 8002618:	4603      	mov	r3, r0
 800261a:	2b00      	cmp	r3, #0
 800261c:	d001      	beq.n	8002622 <SystemClock_Config+0x66>
  {
    Error_Handler();
 800261e:	f000 f8b1 	bl	8002784 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002622:	230f      	movs	r3, #15
 8002624:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002626:	2302      	movs	r3, #2
 8002628:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800262a:	2300      	movs	r3, #0
 800262c:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800262e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002632:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002634:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002638:	627b      	str	r3, [r7, #36]	@ 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800263a:	f107 0314 	add.w	r3, r7, #20
 800263e:	2102      	movs	r1, #2
 8002640:	4618      	mov	r0, r3
 8002642:	f002 fb19 	bl	8004c78 <HAL_RCC_ClockConfig>
 8002646:	4603      	mov	r3, r0
 8002648:	2b00      	cmp	r3, #0
 800264a:	d001      	beq.n	8002650 <SystemClock_Config+0x94>
  {
    Error_Handler();
 800264c:	f000 f89a 	bl	8002784 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8002650:	2302      	movs	r3, #2
 8002652:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 8002654:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8002658:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800265a:	1d3b      	adds	r3, r7, #4
 800265c:	4618      	mov	r0, r3
 800265e:	f002 fc85 	bl	8004f6c <HAL_RCCEx_PeriphCLKConfig>
 8002662:	4603      	mov	r3, r0
 8002664:	2b00      	cmp	r3, #0
 8002666:	d001      	beq.n	800266c <SystemClock_Config+0xb0>
  {
    Error_Handler();
 8002668:	f000 f88c 	bl	8002784 <Error_Handler>
  }
}
 800266c:	bf00      	nop
 800266e:	3750      	adds	r7, #80	@ 0x50
 8002670:	46bd      	mov	sp, r7
 8002672:	bd80      	pop	{r7, pc}

08002674 <Time_Update>:

/* USER CODE BEGIN 4 */

void Time_Update(void)
{
 8002674:	b580      	push	{r7, lr}
 8002676:	af00      	add	r7, sp, #0
  if (++time_Second > 59)
 8002678:	4b26      	ldr	r3, [pc, #152]	@ (8002714 <Time_Update+0xa0>)
 800267a:	781b      	ldrb	r3, [r3, #0]
 800267c:	3301      	adds	r3, #1
 800267e:	b2da      	uxtb	r2, r3
 8002680:	4b24      	ldr	r3, [pc, #144]	@ (8002714 <Time_Update+0xa0>)
 8002682:	701a      	strb	r2, [r3, #0]
 8002684:	4b23      	ldr	r3, [pc, #140]	@ (8002714 <Time_Update+0xa0>)
 8002686:	781b      	ldrb	r3, [r3, #0]
 8002688:	2b3b      	cmp	r3, #59	@ 0x3b
 800268a:	d91c      	bls.n	80026c6 <Time_Update+0x52>
  {
    time_Second = 0;
 800268c:	4b21      	ldr	r3, [pc, #132]	@ (8002714 <Time_Update+0xa0>)
 800268e:	2200      	movs	r2, #0
 8002690:	701a      	strb	r2, [r3, #0]
    if (++time_Minute > 59)
 8002692:	4b21      	ldr	r3, [pc, #132]	@ (8002718 <Time_Update+0xa4>)
 8002694:	781b      	ldrb	r3, [r3, #0]
 8002696:	3301      	adds	r3, #1
 8002698:	b2da      	uxtb	r2, r3
 800269a:	4b1f      	ldr	r3, [pc, #124]	@ (8002718 <Time_Update+0xa4>)
 800269c:	701a      	strb	r2, [r3, #0]
 800269e:	4b1e      	ldr	r3, [pc, #120]	@ (8002718 <Time_Update+0xa4>)
 80026a0:	781b      	ldrb	r3, [r3, #0]
 80026a2:	2b3b      	cmp	r3, #59	@ 0x3b
 80026a4:	d90f      	bls.n	80026c6 <Time_Update+0x52>
    {
      time_Minute = 0;
 80026a6:	4b1c      	ldr	r3, [pc, #112]	@ (8002718 <Time_Update+0xa4>)
 80026a8:	2200      	movs	r2, #0
 80026aa:	701a      	strb	r2, [r3, #0]

      if (++time_Hour > 23)
 80026ac:	4b1b      	ldr	r3, [pc, #108]	@ (800271c <Time_Update+0xa8>)
 80026ae:	781b      	ldrb	r3, [r3, #0]
 80026b0:	3301      	adds	r3, #1
 80026b2:	b2da      	uxtb	r2, r3
 80026b4:	4b19      	ldr	r3, [pc, #100]	@ (800271c <Time_Update+0xa8>)
 80026b6:	701a      	strb	r2, [r3, #0]
 80026b8:	4b18      	ldr	r3, [pc, #96]	@ (800271c <Time_Update+0xa8>)
 80026ba:	781b      	ldrb	r3, [r3, #0]
 80026bc:	2b17      	cmp	r3, #23
 80026be:	d902      	bls.n	80026c6 <Time_Update+0x52>
        time_Hour = 0;
 80026c0:	4b16      	ldr	r3, [pc, #88]	@ (800271c <Time_Update+0xa8>)
 80026c2:	2200      	movs	r2, #0
 80026c4:	701a      	strb	r2, [r3, #0]
    }
  }
  
  if (time_SecBit)
 80026c6:	4b16      	ldr	r3, [pc, #88]	@ (8002720 <Time_Update+0xac>)
 80026c8:	781b      	ldrb	r3, [r3, #0]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	d003      	beq.n	80026d6 <Time_Update+0x62>
    time_SecBit = 0;
 80026ce:	4b14      	ldr	r3, [pc, #80]	@ (8002720 <Time_Update+0xac>)
 80026d0:	2200      	movs	r2, #0
 80026d2:	701a      	strb	r2, [r3, #0]
 80026d4:	e002      	b.n	80026dc <Time_Update+0x68>
  else
    time_SecBit = 1;
 80026d6:	4b12      	ldr	r3, [pc, #72]	@ (8002720 <Time_Update+0xac>)
 80026d8:	2201      	movs	r2, #1
 80026da:	701a      	strb	r2, [r3, #0]

  if (++time_Out > 90)
 80026dc:	4b11      	ldr	r3, [pc, #68]	@ (8002724 <Time_Update+0xb0>)
 80026de:	781b      	ldrb	r3, [r3, #0]
 80026e0:	3301      	adds	r3, #1
 80026e2:	b2da      	uxtb	r2, r3
 80026e4:	4b0f      	ldr	r3, [pc, #60]	@ (8002724 <Time_Update+0xb0>)
 80026e6:	701a      	strb	r2, [r3, #0]
 80026e8:	4b0e      	ldr	r3, [pc, #56]	@ (8002724 <Time_Update+0xb0>)
 80026ea:	781b      	ldrb	r3, [r3, #0]
 80026ec:	2b5a      	cmp	r3, #90	@ 0x5a
 80026ee:	d90f      	bls.n	8002710 <Time_Update+0x9c>
  {
    time_Out = 0;
 80026f0:	4b0c      	ldr	r3, [pc, #48]	@ (8002724 <Time_Update+0xb0>)
 80026f2:	2200      	movs	r2, #0
 80026f4:	701a      	strb	r2, [r3, #0]
    if (work_Mode != MODE_NORMAL)
 80026f6:	4b0c      	ldr	r3, [pc, #48]	@ (8002728 <Time_Update+0xb4>)
 80026f8:	781b      	ldrb	r3, [r3, #0]
 80026fa:	2b52      	cmp	r3, #82	@ 0x52
 80026fc:	d008      	beq.n	8002710 <Time_Update+0x9c>
    {
      DS3231_ReadTime(&hi2c2, &time_Hour, &time_Minute, &time_Second);
 80026fe:	4b05      	ldr	r3, [pc, #20]	@ (8002714 <Time_Update+0xa0>)
 8002700:	4a05      	ldr	r2, [pc, #20]	@ (8002718 <Time_Update+0xa4>)
 8002702:	4906      	ldr	r1, [pc, #24]	@ (800271c <Time_Update+0xa8>)
 8002704:	4809      	ldr	r0, [pc, #36]	@ (800272c <Time_Update+0xb8>)
 8002706:	f7ff fa60 	bl	8001bca <DS3231_ReadTime>
      work_Mode = MODE_NORMAL;
 800270a:	4b07      	ldr	r3, [pc, #28]	@ (8002728 <Time_Update+0xb4>)
 800270c:	2252      	movs	r2, #82	@ 0x52
 800270e:	701a      	strb	r2, [r3, #0]
      // Buzz(50);
    }
  }
}
 8002710:	bf00      	nop
 8002712:	bd80      	pop	{r7, pc}
 8002714:	20000112 	.word	0x20000112
 8002718:	20000111 	.word	0x20000111
 800271c:	20000110 	.word	0x20000110
 8002720:	20000113 	.word	0x20000113
 8002724:	20000114 	.word	0x20000114
 8002728:	20000001 	.word	0x20000001
 800272c:	200000bc 	.word	0x200000bc

08002730 <Chaleng_Timer>:

void Chaleng_Timer(void)
{
 8002730:	b480      	push	{r7}
 8002732:	af00      	add	r7, sp, #0
  if(timer_Run ==1)
 8002734:	4b10      	ldr	r3, [pc, #64]	@ (8002778 <Chaleng_Timer+0x48>)
 8002736:	781b      	ldrb	r3, [r3, #0]
 8002738:	2b01      	cmp	r3, #1
 800273a:	d119      	bne.n	8002770 <Chaleng_Timer+0x40>
  {
    if(++ timer_mili_Second > 99)
 800273c:	4b0f      	ldr	r3, [pc, #60]	@ (800277c <Chaleng_Timer+0x4c>)
 800273e:	781b      	ldrb	r3, [r3, #0]
 8002740:	3301      	adds	r3, #1
 8002742:	b2da      	uxtb	r2, r3
 8002744:	4b0d      	ldr	r3, [pc, #52]	@ (800277c <Chaleng_Timer+0x4c>)
 8002746:	701a      	strb	r2, [r3, #0]
 8002748:	4b0c      	ldr	r3, [pc, #48]	@ (800277c <Chaleng_Timer+0x4c>)
 800274a:	781b      	ldrb	r3, [r3, #0]
 800274c:	2b63      	cmp	r3, #99	@ 0x63
 800274e:	d90f      	bls.n	8002770 <Chaleng_Timer+0x40>
    {
      timer_mili_Second = 0;
 8002750:	4b0a      	ldr	r3, [pc, #40]	@ (800277c <Chaleng_Timer+0x4c>)
 8002752:	2200      	movs	r2, #0
 8002754:	701a      	strb	r2, [r3, #0]
      if(++timer_Second > 99)
 8002756:	4b0a      	ldr	r3, [pc, #40]	@ (8002780 <Chaleng_Timer+0x50>)
 8002758:	781b      	ldrb	r3, [r3, #0]
 800275a:	3301      	adds	r3, #1
 800275c:	b2da      	uxtb	r2, r3
 800275e:	4b08      	ldr	r3, [pc, #32]	@ (8002780 <Chaleng_Timer+0x50>)
 8002760:	701a      	strb	r2, [r3, #0]
 8002762:	4b07      	ldr	r3, [pc, #28]	@ (8002780 <Chaleng_Timer+0x50>)
 8002764:	781b      	ldrb	r3, [r3, #0]
 8002766:	2b63      	cmp	r3, #99	@ 0x63
 8002768:	d902      	bls.n	8002770 <Chaleng_Timer+0x40>
        timer_Second = 0;
 800276a:	4b05      	ldr	r3, [pc, #20]	@ (8002780 <Chaleng_Timer+0x50>)
 800276c:	2200      	movs	r2, #0
 800276e:	701a      	strb	r2, [r3, #0]
    }
  }
}
 8002770:	bf00      	nop
 8002772:	46bd      	mov	sp, r7
 8002774:	bc80      	pop	{r7}
 8002776:	4770      	bx	lr
 8002778:	20000121 	.word	0x20000121
 800277c:	2000011c 	.word	0x2000011c
 8002780:	2000011b 	.word	0x2000011b

08002784 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002784:	b480      	push	{r7}
 8002786:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002788:	b672      	cpsid	i
}
 800278a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800278c:	bf00      	nop
 800278e:	e7fd      	b.n	800278c <Error_Handler+0x8>

08002790 <HAL_MspInit>:
 8002790:	b480      	push	{r7}
 8002792:	b085      	sub	sp, #20
 8002794:	af00      	add	r7, sp, #0
 8002796:	4b15      	ldr	r3, [pc, #84]	@ (80027ec <HAL_MspInit+0x5c>)
 8002798:	699b      	ldr	r3, [r3, #24]
 800279a:	4a14      	ldr	r2, [pc, #80]	@ (80027ec <HAL_MspInit+0x5c>)
 800279c:	f043 0301 	orr.w	r3, r3, #1
 80027a0:	6193      	str	r3, [r2, #24]
 80027a2:	4b12      	ldr	r3, [pc, #72]	@ (80027ec <HAL_MspInit+0x5c>)
 80027a4:	699b      	ldr	r3, [r3, #24]
 80027a6:	f003 0301 	and.w	r3, r3, #1
 80027aa:	60bb      	str	r3, [r7, #8]
 80027ac:	68bb      	ldr	r3, [r7, #8]
 80027ae:	4b0f      	ldr	r3, [pc, #60]	@ (80027ec <HAL_MspInit+0x5c>)
 80027b0:	69db      	ldr	r3, [r3, #28]
 80027b2:	4a0e      	ldr	r2, [pc, #56]	@ (80027ec <HAL_MspInit+0x5c>)
 80027b4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80027b8:	61d3      	str	r3, [r2, #28]
 80027ba:	4b0c      	ldr	r3, [pc, #48]	@ (80027ec <HAL_MspInit+0x5c>)
 80027bc:	69db      	ldr	r3, [r3, #28]
 80027be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80027c2:	607b      	str	r3, [r7, #4]
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	4b0a      	ldr	r3, [pc, #40]	@ (80027f0 <HAL_MspInit+0x60>)
 80027c8:	685b      	ldr	r3, [r3, #4]
 80027ca:	60fb      	str	r3, [r7, #12]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80027d2:	60fb      	str	r3, [r7, #12]
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80027da:	60fb      	str	r3, [r7, #12]
 80027dc:	4a04      	ldr	r2, [pc, #16]	@ (80027f0 <HAL_MspInit+0x60>)
 80027de:	68fb      	ldr	r3, [r7, #12]
 80027e0:	6053      	str	r3, [r2, #4]
 80027e2:	bf00      	nop
 80027e4:	3714      	adds	r7, #20
 80027e6:	46bd      	mov	sp, r7
 80027e8:	bc80      	pop	{r7}
 80027ea:	4770      	bx	lr
 80027ec:	40021000 	.word	0x40021000
 80027f0:	40010000 	.word	0x40010000

080027f4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80027f4:	b480      	push	{r7}
 80027f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80027f8:	bf00      	nop
 80027fa:	e7fd      	b.n	80027f8 <NMI_Handler+0x4>

080027fc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80027fc:	b480      	push	{r7}
 80027fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002800:	bf00      	nop
 8002802:	e7fd      	b.n	8002800 <HardFault_Handler+0x4>

08002804 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002804:	b480      	push	{r7}
 8002806:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002808:	bf00      	nop
 800280a:	e7fd      	b.n	8002808 <MemManage_Handler+0x4>

0800280c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800280c:	b480      	push	{r7}
 800280e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002810:	bf00      	nop
 8002812:	e7fd      	b.n	8002810 <BusFault_Handler+0x4>

08002814 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002814:	b480      	push	{r7}
 8002816:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002818:	bf00      	nop
 800281a:	e7fd      	b.n	8002818 <UsageFault_Handler+0x4>

0800281c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800281c:	b480      	push	{r7}
 800281e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002820:	bf00      	nop
 8002822:	46bd      	mov	sp, r7
 8002824:	bc80      	pop	{r7}
 8002826:	4770      	bx	lr

08002828 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002828:	b480      	push	{r7}
 800282a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800282c:	bf00      	nop
 800282e:	46bd      	mov	sp, r7
 8002830:	bc80      	pop	{r7}
 8002832:	4770      	bx	lr

08002834 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002834:	b480      	push	{r7}
 8002836:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002838:	bf00      	nop
 800283a:	46bd      	mov	sp, r7
 800283c:	bc80      	pop	{r7}
 800283e:	4770      	bx	lr

08002840 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002840:	b580      	push	{r7, lr}
 8002842:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002844:	f000 f9fa 	bl	8002c3c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002848:	bf00      	nop
 800284a:	bd80      	pop	{r7, pc}

0800284c <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 800284c:	b580      	push	{r7, lr}
 800284e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */
  Time_Update();
 8002850:	f7ff ff10 	bl	8002674 <Time_Update>
  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(SQW_Pin);
 8002854:	2002      	movs	r0, #2
 8002856:	f000 ff05 	bl	8003664 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 800285a:	bf00      	nop
 800285c:	bd80      	pop	{r7, pc}
	...

08002860 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002860:	b580      	push	{r7, lr}
 8002862:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */
  IR_SetTimeArrayValues(__HAL_TIM_GET_COUNTER(&htim3));
 8002864:	4b07      	ldr	r3, [pc, #28]	@ (8002884 <EXTI3_IRQHandler+0x24>)
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800286a:	4618      	mov	r0, r3
 800286c:	f7fe f88c 	bl	8000988 <IR_SetTimeArrayValues>
  __HAL_TIM_SET_COUNTER(&htim3, 0);
 8002870:	4b04      	ldr	r3, [pc, #16]	@ (8002884 <EXTI3_IRQHandler+0x24>)
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	2200      	movs	r2, #0
 8002876:	625a      	str	r2, [r3, #36]	@ 0x24
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(IR_Pin);
 8002878:	2008      	movs	r0, #8
 800287a:	f000 fef3 	bl	8003664 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800287e:	bf00      	nop
 8002880:	bd80      	pop	{r7, pc}
 8002882:	bf00      	nop
 8002884:	2000016c 	.word	0x2000016c

08002888 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002888:	b580      	push	{r7, lr}
 800288a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */
  Segments_Scan();
 800288c:	f7fe f96c 	bl	8000b68 <Segments_Scan>
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8002890:	4802      	ldr	r0, [pc, #8]	@ (800289c <TIM2_IRQHandler+0x14>)
 8002892:	f002 fcc3 	bl	800521c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002896:	bf00      	nop
 8002898:	bd80      	pop	{r7, pc}
 800289a:	bf00      	nop
 800289c:	20000124 	.word	0x20000124

080028a0 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80028a0:	b580      	push	{r7, lr}
 80028a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */
  Ir_ResetRunning();
 80028a4:	f7fe f950 	bl	8000b48 <Ir_ResetRunning>
  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80028a8:	4802      	ldr	r0, [pc, #8]	@ (80028b4 <TIM3_IRQHandler+0x14>)
 80028aa:	f002 fcb7 	bl	800521c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80028ae:	bf00      	nop
 80028b0:	bd80      	pop	{r7, pc}
 80028b2:	bf00      	nop
 80028b4:	2000016c 	.word	0x2000016c

080028b8 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 80028b8:	b580      	push	{r7, lr}
 80028ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */
  Chaleng_Timer();
 80028bc:	f7ff ff38 	bl	8002730 <Chaleng_Timer>
  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 80028c0:	4802      	ldr	r0, [pc, #8]	@ (80028cc <TIM4_IRQHandler+0x14>)
 80028c2:	f002 fcab 	bl	800521c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 80028c6:	bf00      	nop
 80028c8:	bd80      	pop	{r7, pc}
 80028ca:	bf00      	nop
 80028cc:	200001b4 	.word	0x200001b4

080028d0 <SystemInit>:
 80028d0:	b480      	push	{r7}
 80028d2:	af00      	add	r7, sp, #0
 80028d4:	bf00      	nop
 80028d6:	46bd      	mov	sp, r7
 80028d8:	bc80      	pop	{r7}
 80028da:	4770      	bx	lr

080028dc <MX_TIM2_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 80028dc:	b580      	push	{r7, lr}
 80028de:	b086      	sub	sp, #24
 80028e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80028e2:	f107 0308 	add.w	r3, r7, #8
 80028e6:	2200      	movs	r2, #0
 80028e8:	601a      	str	r2, [r3, #0]
 80028ea:	605a      	str	r2, [r3, #4]
 80028ec:	609a      	str	r2, [r3, #8]
 80028ee:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028f0:	463b      	mov	r3, r7
 80028f2:	2200      	movs	r2, #0
 80028f4:	601a      	str	r2, [r3, #0]
 80028f6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80028f8:	4b1d      	ldr	r3, [pc, #116]	@ (8002970 <MX_TIM2_Init+0x94>)
 80028fa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80028fe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 72-1;
 8002900:	4b1b      	ldr	r3, [pc, #108]	@ (8002970 <MX_TIM2_Init+0x94>)
 8002902:	2247      	movs	r2, #71	@ 0x47
 8002904:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 8002906:	4b1a      	ldr	r3, [pc, #104]	@ (8002970 <MX_TIM2_Init+0x94>)
 8002908:	2260      	movs	r2, #96	@ 0x60
 800290a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 499;
 800290c:	4b18      	ldr	r3, [pc, #96]	@ (8002970 <MX_TIM2_Init+0x94>)
 800290e:	f240 12f3 	movw	r2, #499	@ 0x1f3
 8002912:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002914:	4b16      	ldr	r3, [pc, #88]	@ (8002970 <MX_TIM2_Init+0x94>)
 8002916:	2200      	movs	r2, #0
 8002918:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800291a:	4b15      	ldr	r3, [pc, #84]	@ (8002970 <MX_TIM2_Init+0x94>)
 800291c:	2200      	movs	r2, #0
 800291e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002920:	4813      	ldr	r0, [pc, #76]	@ (8002970 <MX_TIM2_Init+0x94>)
 8002922:	f002 fbd9 	bl	80050d8 <HAL_TIM_Base_Init>
 8002926:	4603      	mov	r3, r0
 8002928:	2b00      	cmp	r3, #0
 800292a:	d001      	beq.n	8002930 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 800292c:	f7ff ff2a 	bl	8002784 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002930:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002934:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002936:	f107 0308 	add.w	r3, r7, #8
 800293a:	4619      	mov	r1, r3
 800293c:	480c      	ldr	r0, [pc, #48]	@ (8002970 <MX_TIM2_Init+0x94>)
 800293e:	f002 fd5d 	bl	80053fc <HAL_TIM_ConfigClockSource>
 8002942:	4603      	mov	r3, r0
 8002944:	2b00      	cmp	r3, #0
 8002946:	d001      	beq.n	800294c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002948:	f7ff ff1c 	bl	8002784 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800294c:	2300      	movs	r3, #0
 800294e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002950:	2300      	movs	r3, #0
 8002952:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002954:	463b      	mov	r3, r7
 8002956:	4619      	mov	r1, r3
 8002958:	4805      	ldr	r0, [pc, #20]	@ (8002970 <MX_TIM2_Init+0x94>)
 800295a:	f002 ff47 	bl	80057ec <HAL_TIMEx_MasterConfigSynchronization>
 800295e:	4603      	mov	r3, r0
 8002960:	2b00      	cmp	r3, #0
 8002962:	d001      	beq.n	8002968 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002964:	f7ff ff0e 	bl	8002784 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002968:	bf00      	nop
 800296a:	3718      	adds	r7, #24
 800296c:	46bd      	mov	sp, r7
 800296e:	bd80      	pop	{r7, pc}
 8002970:	20000124 	.word	0x20000124

08002974 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8002974:	b580      	push	{r7, lr}
 8002976:	b086      	sub	sp, #24
 8002978:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800297a:	f107 0308 	add.w	r3, r7, #8
 800297e:	2200      	movs	r2, #0
 8002980:	601a      	str	r2, [r3, #0]
 8002982:	605a      	str	r2, [r3, #4]
 8002984:	609a      	str	r2, [r3, #8]
 8002986:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002988:	463b      	mov	r3, r7
 800298a:	2200      	movs	r2, #0
 800298c:	601a      	str	r2, [r3, #0]
 800298e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002990:	4b1d      	ldr	r3, [pc, #116]	@ (8002a08 <MX_TIM3_Init+0x94>)
 8002992:	4a1e      	ldr	r2, [pc, #120]	@ (8002a0c <MX_TIM3_Init+0x98>)
 8002994:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 72-1;
 8002996:	4b1c      	ldr	r3, [pc, #112]	@ (8002a08 <MX_TIM3_Init+0x94>)
 8002998:	2247      	movs	r2, #71	@ 0x47
 800299a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800299c:	4b1a      	ldr	r3, [pc, #104]	@ (8002a08 <MX_TIM3_Init+0x94>)
 800299e:	2200      	movs	r2, #0
 80029a0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 50000;
 80029a2:	4b19      	ldr	r3, [pc, #100]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029a4:	f24c 3250 	movw	r2, #50000	@ 0xc350
 80029a8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80029aa:	4b17      	ldr	r3, [pc, #92]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029ac:	2200      	movs	r2, #0
 80029ae:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80029b0:	4b15      	ldr	r3, [pc, #84]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029b2:	2200      	movs	r2, #0
 80029b4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80029b6:	4814      	ldr	r0, [pc, #80]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029b8:	f002 fb8e 	bl	80050d8 <HAL_TIM_Base_Init>
 80029bc:	4603      	mov	r3, r0
 80029be:	2b00      	cmp	r3, #0
 80029c0:	d001      	beq.n	80029c6 <MX_TIM3_Init+0x52>
  {
    Error_Handler();
 80029c2:	f7ff fedf 	bl	8002784 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80029c6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80029ca:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80029cc:	f107 0308 	add.w	r3, r7, #8
 80029d0:	4619      	mov	r1, r3
 80029d2:	480d      	ldr	r0, [pc, #52]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029d4:	f002 fd12 	bl	80053fc <HAL_TIM_ConfigClockSource>
 80029d8:	4603      	mov	r3, r0
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d001      	beq.n	80029e2 <MX_TIM3_Init+0x6e>
  {
    Error_Handler();
 80029de:	f7ff fed1 	bl	8002784 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80029e2:	2300      	movs	r3, #0
 80029e4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80029e6:	2300      	movs	r3, #0
 80029e8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80029ea:	463b      	mov	r3, r7
 80029ec:	4619      	mov	r1, r3
 80029ee:	4806      	ldr	r0, [pc, #24]	@ (8002a08 <MX_TIM3_Init+0x94>)
 80029f0:	f002 fefc 	bl	80057ec <HAL_TIMEx_MasterConfigSynchronization>
 80029f4:	4603      	mov	r3, r0
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d001      	beq.n	80029fe <MX_TIM3_Init+0x8a>
  {
    Error_Handler();
 80029fa:	f7ff fec3 	bl	8002784 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80029fe:	bf00      	nop
 8002a00:	3718      	adds	r7, #24
 8002a02:	46bd      	mov	sp, r7
 8002a04:	bd80      	pop	{r7, pc}
 8002a06:	bf00      	nop
 8002a08:	2000016c 	.word	0x2000016c
 8002a0c:	40000400 	.word	0x40000400

08002a10 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8002a10:	b580      	push	{r7, lr}
 8002a12:	b086      	sub	sp, #24
 8002a14:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002a16:	f107 0308 	add.w	r3, r7, #8
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	601a      	str	r2, [r3, #0]
 8002a1e:	605a      	str	r2, [r3, #4]
 8002a20:	609a      	str	r2, [r3, #8]
 8002a22:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002a24:	463b      	mov	r3, r7
 8002a26:	2200      	movs	r2, #0
 8002a28:	601a      	str	r2, [r3, #0]
 8002a2a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8002a2c:	4b1d      	ldr	r3, [pc, #116]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a2e:	4a1e      	ldr	r2, [pc, #120]	@ (8002aa8 <MX_TIM4_Init+0x98>)
 8002a30:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 71;
 8002a32:	4b1c      	ldr	r3, [pc, #112]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a34:	2247      	movs	r2, #71	@ 0x47
 8002a36:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002a38:	4b1a      	ldr	r3, [pc, #104]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 999;
 8002a3e:	4b19      	ldr	r3, [pc, #100]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a40:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002a44:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002a46:	4b17      	ldr	r3, [pc, #92]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a48:	2200      	movs	r2, #0
 8002a4a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002a4c:	4b15      	ldr	r3, [pc, #84]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a4e:	2200      	movs	r2, #0
 8002a50:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8002a52:	4814      	ldr	r0, [pc, #80]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a54:	f002 fb40 	bl	80050d8 <HAL_TIM_Base_Init>
 8002a58:	4603      	mov	r3, r0
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d001      	beq.n	8002a62 <MX_TIM4_Init+0x52>
  {
    Error_Handler();
 8002a5e:	f7ff fe91 	bl	8002784 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002a62:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002a66:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8002a68:	f107 0308 	add.w	r3, r7, #8
 8002a6c:	4619      	mov	r1, r3
 8002a6e:	480d      	ldr	r0, [pc, #52]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a70:	f002 fcc4 	bl	80053fc <HAL_TIM_ConfigClockSource>
 8002a74:	4603      	mov	r3, r0
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d001      	beq.n	8002a7e <MX_TIM4_Init+0x6e>
  {
    Error_Handler();
 8002a7a:	f7ff fe83 	bl	8002784 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002a7e:	2300      	movs	r3, #0
 8002a80:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002a82:	2300      	movs	r3, #0
 8002a84:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8002a86:	463b      	mov	r3, r7
 8002a88:	4619      	mov	r1, r3
 8002a8a:	4806      	ldr	r0, [pc, #24]	@ (8002aa4 <MX_TIM4_Init+0x94>)
 8002a8c:	f002 feae 	bl	80057ec <HAL_TIMEx_MasterConfigSynchronization>
 8002a90:	4603      	mov	r3, r0
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d001      	beq.n	8002a9a <MX_TIM4_Init+0x8a>
  {
    Error_Handler();
 8002a96:	f7ff fe75 	bl	8002784 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8002a9a:	bf00      	nop
 8002a9c:	3718      	adds	r7, #24
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	200001b4 	.word	0x200001b4
 8002aa8:	40000800 	.word	0x40000800

08002aac <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002aac:	b580      	push	{r7, lr}
 8002aae:	b086      	sub	sp, #24
 8002ab0:	af00      	add	r7, sp, #0
 8002ab2:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002abc:	d114      	bne.n	8002ae8 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002abe:	4b26      	ldr	r3, [pc, #152]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002ac0:	69db      	ldr	r3, [r3, #28]
 8002ac2:	4a25      	ldr	r2, [pc, #148]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002ac4:	f043 0301 	orr.w	r3, r3, #1
 8002ac8:	61d3      	str	r3, [r2, #28]
 8002aca:	4b23      	ldr	r3, [pc, #140]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002acc:	69db      	ldr	r3, [r3, #28]
 8002ace:	f003 0301 	and.w	r3, r3, #1
 8002ad2:	617b      	str	r3, [r7, #20]
 8002ad4:	697b      	ldr	r3, [r7, #20]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8002ad6:	2200      	movs	r2, #0
 8002ad8:	2100      	movs	r1, #0
 8002ada:	201c      	movs	r0, #28
 8002adc:	f000 fbd7 	bl	800328e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002ae0:	201c      	movs	r0, #28
 8002ae2:	f000 fbf0 	bl	80032c6 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8002ae6:	e032      	b.n	8002b4e <HAL_TIM_Base_MspInit+0xa2>
  else if(tim_baseHandle->Instance==TIM3)
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	4a1b      	ldr	r2, [pc, #108]	@ (8002b5c <HAL_TIM_Base_MspInit+0xb0>)
 8002aee:	4293      	cmp	r3, r2
 8002af0:	d114      	bne.n	8002b1c <HAL_TIM_Base_MspInit+0x70>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002af2:	4b19      	ldr	r3, [pc, #100]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002af4:	69db      	ldr	r3, [r3, #28]
 8002af6:	4a18      	ldr	r2, [pc, #96]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002af8:	f043 0302 	orr.w	r3, r3, #2
 8002afc:	61d3      	str	r3, [r2, #28]
 8002afe:	4b16      	ldr	r3, [pc, #88]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002b00:	69db      	ldr	r3, [r3, #28]
 8002b02:	f003 0302 	and.w	r3, r3, #2
 8002b06:	613b      	str	r3, [r7, #16]
 8002b08:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8002b0a:	2200      	movs	r2, #0
 8002b0c:	2100      	movs	r1, #0
 8002b0e:	201d      	movs	r0, #29
 8002b10:	f000 fbbd 	bl	800328e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002b14:	201d      	movs	r0, #29
 8002b16:	f000 fbd6 	bl	80032c6 <HAL_NVIC_EnableIRQ>
}
 8002b1a:	e018      	b.n	8002b4e <HAL_TIM_Base_MspInit+0xa2>
  else if(tim_baseHandle->Instance==TIM4)
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	4a0f      	ldr	r2, [pc, #60]	@ (8002b60 <HAL_TIM_Base_MspInit+0xb4>)
 8002b22:	4293      	cmp	r3, r2
 8002b24:	d113      	bne.n	8002b4e <HAL_TIM_Base_MspInit+0xa2>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002b26:	4b0c      	ldr	r3, [pc, #48]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002b28:	69db      	ldr	r3, [r3, #28]
 8002b2a:	4a0b      	ldr	r2, [pc, #44]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002b2c:	f043 0304 	orr.w	r3, r3, #4
 8002b30:	61d3      	str	r3, [r2, #28]
 8002b32:	4b09      	ldr	r3, [pc, #36]	@ (8002b58 <HAL_TIM_Base_MspInit+0xac>)
 8002b34:	69db      	ldr	r3, [r3, #28]
 8002b36:	f003 0304 	and.w	r3, r3, #4
 8002b3a:	60fb      	str	r3, [r7, #12]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8002b3e:	2200      	movs	r2, #0
 8002b40:	2100      	movs	r1, #0
 8002b42:	201e      	movs	r0, #30
 8002b44:	f000 fba3 	bl	800328e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8002b48:	201e      	movs	r0, #30
 8002b4a:	f000 fbbc 	bl	80032c6 <HAL_NVIC_EnableIRQ>
}
 8002b4e:	bf00      	nop
 8002b50:	3718      	adds	r7, #24
 8002b52:	46bd      	mov	sp, r7
 8002b54:	bd80      	pop	{r7, pc}
 8002b56:	bf00      	nop
 8002b58:	40021000 	.word	0x40021000
 8002b5c:	40000400 	.word	0x40000400
 8002b60:	40000800 	.word	0x40000800

08002b64 <Reset_Handler>:
 8002b64:	f7ff feb4 	bl	80028d0 <SystemInit>
 8002b68:	480b      	ldr	r0, [pc, #44]	@ (8002b98 <LoopFillZerobss+0xe>)
 8002b6a:	490c      	ldr	r1, [pc, #48]	@ (8002b9c <LoopFillZerobss+0x12>)
 8002b6c:	4a0c      	ldr	r2, [pc, #48]	@ (8002ba0 <LoopFillZerobss+0x16>)
 8002b6e:	2300      	movs	r3, #0
 8002b70:	e002      	b.n	8002b78 <LoopCopyDataInit>

08002b72 <CopyDataInit>:
 8002b72:	58d4      	ldr	r4, [r2, r3]
 8002b74:	50c4      	str	r4, [r0, r3]
 8002b76:	3304      	adds	r3, #4

08002b78 <LoopCopyDataInit>:
 8002b78:	18c4      	adds	r4, r0, r3
 8002b7a:	428c      	cmp	r4, r1
 8002b7c:	d3f9      	bcc.n	8002b72 <CopyDataInit>
 8002b7e:	4a09      	ldr	r2, [pc, #36]	@ (8002ba4 <LoopFillZerobss+0x1a>)
 8002b80:	4c09      	ldr	r4, [pc, #36]	@ (8002ba8 <LoopFillZerobss+0x1e>)
 8002b82:	2300      	movs	r3, #0
 8002b84:	e001      	b.n	8002b8a <LoopFillZerobss>

08002b86 <FillZerobss>:
 8002b86:	6013      	str	r3, [r2, #0]
 8002b88:	3204      	adds	r2, #4

08002b8a <LoopFillZerobss>:
 8002b8a:	42a2      	cmp	r2, r4
 8002b8c:	d3fb      	bcc.n	8002b86 <FillZerobss>
 8002b8e:	f002 fea5 	bl	80058dc <__libc_init_array>
 8002b92:	f7ff f863 	bl	8001c5c <main>
 8002b96:	4770      	bx	lr
 8002b98:	20000000 	.word	0x20000000
 8002b9c:	20000014 	.word	0x20000014
 8002ba0:	08005970 	.word	0x08005970
 8002ba4:	20000014 	.word	0x20000014
 8002ba8:	20000200 	.word	0x20000200

08002bac <ADC1_2_IRQHandler>:
 8002bac:	e7fe      	b.n	8002bac <ADC1_2_IRQHandler>
	...

08002bb0 <HAL_Init>:
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	4b08      	ldr	r3, [pc, #32]	@ (8002bd8 <HAL_Init+0x28>)
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	4a07      	ldr	r2, [pc, #28]	@ (8002bd8 <HAL_Init+0x28>)
 8002bba:	f043 0310 	orr.w	r3, r3, #16
 8002bbe:	6013      	str	r3, [r2, #0]
 8002bc0:	2003      	movs	r0, #3
 8002bc2:	f000 fb59 	bl	8003278 <HAL_NVIC_SetPriorityGrouping>
 8002bc6:	200f      	movs	r0, #15
 8002bc8:	f000 f808 	bl	8002bdc <HAL_InitTick>
 8002bcc:	f7ff fde0 	bl	8002790 <HAL_MspInit>
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	4618      	mov	r0, r3
 8002bd4:	bd80      	pop	{r7, pc}
 8002bd6:	bf00      	nop
 8002bd8:	40022000 	.word	0x40022000

08002bdc <HAL_InitTick>:
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	b082      	sub	sp, #8
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	6078      	str	r0, [r7, #4]
 8002be4:	4b12      	ldr	r3, [pc, #72]	@ (8002c30 <HAL_InitTick+0x54>)
 8002be6:	681a      	ldr	r2, [r3, #0]
 8002be8:	4b12      	ldr	r3, [pc, #72]	@ (8002c34 <HAL_InitTick+0x58>)
 8002bea:	781b      	ldrb	r3, [r3, #0]
 8002bec:	4619      	mov	r1, r3
 8002bee:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002bf2:	fbb3 f3f1 	udiv	r3, r3, r1
 8002bf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8002bfa:	4618      	mov	r0, r3
 8002bfc:	f000 fb71 	bl	80032e2 <HAL_SYSTICK_Config>
 8002c00:	4603      	mov	r3, r0
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d001      	beq.n	8002c0a <HAL_InitTick+0x2e>
 8002c06:	2301      	movs	r3, #1
 8002c08:	e00e      	b.n	8002c28 <HAL_InitTick+0x4c>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	2b0f      	cmp	r3, #15
 8002c0e:	d80a      	bhi.n	8002c26 <HAL_InitTick+0x4a>
 8002c10:	2200      	movs	r2, #0
 8002c12:	6879      	ldr	r1, [r7, #4]
 8002c14:	f04f 30ff 	mov.w	r0, #4294967295
 8002c18:	f000 fb39 	bl	800328e <HAL_NVIC_SetPriority>
 8002c1c:	4a06      	ldr	r2, [pc, #24]	@ (8002c38 <HAL_InitTick+0x5c>)
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	6013      	str	r3, [r2, #0]
 8002c22:	2300      	movs	r3, #0
 8002c24:	e000      	b.n	8002c28 <HAL_InitTick+0x4c>
 8002c26:	2301      	movs	r3, #1
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3708      	adds	r7, #8
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}
 8002c30:	20000008 	.word	0x20000008
 8002c34:	20000010 	.word	0x20000010
 8002c38:	2000000c 	.word	0x2000000c

08002c3c <HAL_IncTick>:
 8002c3c:	b480      	push	{r7}
 8002c3e:	af00      	add	r7, sp, #0
 8002c40:	4b05      	ldr	r3, [pc, #20]	@ (8002c58 <HAL_IncTick+0x1c>)
 8002c42:	781b      	ldrb	r3, [r3, #0]
 8002c44:	461a      	mov	r2, r3
 8002c46:	4b05      	ldr	r3, [pc, #20]	@ (8002c5c <HAL_IncTick+0x20>)
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	4413      	add	r3, r2
 8002c4c:	4a03      	ldr	r2, [pc, #12]	@ (8002c5c <HAL_IncTick+0x20>)
 8002c4e:	6013      	str	r3, [r2, #0]
 8002c50:	bf00      	nop
 8002c52:	46bd      	mov	sp, r7
 8002c54:	bc80      	pop	{r7}
 8002c56:	4770      	bx	lr
 8002c58:	20000010 	.word	0x20000010
 8002c5c:	200001fc 	.word	0x200001fc

08002c60 <HAL_GetTick>:
 8002c60:	b480      	push	{r7}
 8002c62:	af00      	add	r7, sp, #0
 8002c64:	4b02      	ldr	r3, [pc, #8]	@ (8002c70 <HAL_GetTick+0x10>)
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	4618      	mov	r0, r3
 8002c6a:	46bd      	mov	sp, r7
 8002c6c:	bc80      	pop	{r7}
 8002c6e:	4770      	bx	lr
 8002c70:	200001fc 	.word	0x200001fc

08002c74 <HAL_Delay>:
 8002c74:	b580      	push	{r7, lr}
 8002c76:	b084      	sub	sp, #16
 8002c78:	af00      	add	r7, sp, #0
 8002c7a:	6078      	str	r0, [r7, #4]
 8002c7c:	f7ff fff0 	bl	8002c60 <HAL_GetTick>
 8002c80:	60b8      	str	r0, [r7, #8]
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	60fb      	str	r3, [r7, #12]
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c8c:	d005      	beq.n	8002c9a <HAL_Delay+0x26>
 8002c8e:	4b0a      	ldr	r3, [pc, #40]	@ (8002cb8 <HAL_Delay+0x44>)
 8002c90:	781b      	ldrb	r3, [r3, #0]
 8002c92:	461a      	mov	r2, r3
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	4413      	add	r3, r2
 8002c98:	60fb      	str	r3, [r7, #12]
 8002c9a:	bf00      	nop
 8002c9c:	f7ff ffe0 	bl	8002c60 <HAL_GetTick>
 8002ca0:	4602      	mov	r2, r0
 8002ca2:	68bb      	ldr	r3, [r7, #8]
 8002ca4:	1ad3      	subs	r3, r2, r3
 8002ca6:	68fa      	ldr	r2, [r7, #12]
 8002ca8:	429a      	cmp	r2, r3
 8002caa:	d8f7      	bhi.n	8002c9c <HAL_Delay+0x28>
 8002cac:	bf00      	nop
 8002cae:	bf00      	nop
 8002cb0:	3710      	adds	r7, #16
 8002cb2:	46bd      	mov	sp, r7
 8002cb4:	bd80      	pop	{r7, pc}
 8002cb6:	bf00      	nop
 8002cb8:	20000010 	.word	0x20000010

08002cbc <HAL_ADC_Init>:
 8002cbc:	b580      	push	{r7, lr}
 8002cbe:	b086      	sub	sp, #24
 8002cc0:	af00      	add	r7, sp, #0
 8002cc2:	6078      	str	r0, [r7, #4]
 8002cc4:	2300      	movs	r3, #0
 8002cc6:	75fb      	strb	r3, [r7, #23]
 8002cc8:	2300      	movs	r3, #0
 8002cca:	613b      	str	r3, [r7, #16]
 8002ccc:	2300      	movs	r3, #0
 8002cce:	60bb      	str	r3, [r7, #8]
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	60fb      	str	r3, [r7, #12]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d101      	bne.n	8002cde <HAL_ADC_Init+0x22>
 8002cda:	2301      	movs	r3, #1
 8002cdc:	e0be      	b.n	8002e5c <HAL_ADC_Init+0x1a0>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	689b      	ldr	r3, [r3, #8]
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d109      	bne.n	8002d00 <HAL_ADC_Init+0x44>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	2200      	movs	r2, #0
 8002cf0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002cfa:	6878      	ldr	r0, [r7, #4]
 8002cfc:	f7fe fd74 	bl	80017e8 <HAL_ADC_MspInit>
 8002d00:	6878      	ldr	r0, [r7, #4]
 8002d02:	f000 f9ab 	bl	800305c <ADC_ConversionStop_Disable>
 8002d06:	4603      	mov	r3, r0
 8002d08:	75fb      	strb	r3, [r7, #23]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d0e:	f003 0310 	and.w	r3, r3, #16
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	f040 8099 	bne.w	8002e4a <HAL_ADC_Init+0x18e>
 8002d18:	7dfb      	ldrb	r3, [r7, #23]
 8002d1a:	2b00      	cmp	r3, #0
 8002d1c:	f040 8095 	bne.w	8002e4a <HAL_ADC_Init+0x18e>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d24:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002d28:	f023 0302 	bic.w	r3, r3, #2
 8002d2c:	f043 0202 	orr.w	r2, r3, #2
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	685a      	ldr	r2, [r3, #4]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	69db      	ldr	r3, [r3, #28]
 8002d3c:	431a      	orrs	r2, r3
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	7b1b      	ldrb	r3, [r3, #12]
 8002d42:	005b      	lsls	r3, r3, #1
 8002d44:	4313      	orrs	r3, r2
 8002d46:	68ba      	ldr	r2, [r7, #8]
 8002d48:	4313      	orrs	r3, r2
 8002d4a:	60bb      	str	r3, [r7, #8]
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	689b      	ldr	r3, [r3, #8]
 8002d50:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002d54:	d003      	beq.n	8002d5e <HAL_ADC_Init+0xa2>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	689b      	ldr	r3, [r3, #8]
 8002d5a:	2b01      	cmp	r3, #1
 8002d5c:	d102      	bne.n	8002d64 <HAL_ADC_Init+0xa8>
 8002d5e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002d62:	e000      	b.n	8002d66 <HAL_ADC_Init+0xaa>
 8002d64:	2300      	movs	r3, #0
 8002d66:	693a      	ldr	r2, [r7, #16]
 8002d68:	4313      	orrs	r3, r2
 8002d6a:	613b      	str	r3, [r7, #16]
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	7d1b      	ldrb	r3, [r3, #20]
 8002d70:	2b01      	cmp	r3, #1
 8002d72:	d119      	bne.n	8002da8 <HAL_ADC_Init+0xec>
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	7b1b      	ldrb	r3, [r3, #12]
 8002d78:	2b00      	cmp	r3, #0
 8002d7a:	d109      	bne.n	8002d90 <HAL_ADC_Init+0xd4>
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	699b      	ldr	r3, [r3, #24]
 8002d80:	3b01      	subs	r3, #1
 8002d82:	035a      	lsls	r2, r3, #13
 8002d84:	693b      	ldr	r3, [r7, #16]
 8002d86:	4313      	orrs	r3, r2
 8002d88:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8002d8c:	613b      	str	r3, [r7, #16]
 8002d8e:	e00b      	b.n	8002da8 <HAL_ADC_Init+0xec>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002d94:	f043 0220 	orr.w	r2, r3, #32
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002da0:	f043 0201 	orr.w	r2, r3, #1
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	685b      	ldr	r3, [r3, #4]
 8002dae:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	693a      	ldr	r2, [r7, #16]
 8002db8:	430a      	orrs	r2, r1
 8002dba:	605a      	str	r2, [r3, #4]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	689a      	ldr	r2, [r3, #8]
 8002dc2:	4b28      	ldr	r3, [pc, #160]	@ (8002e64 <HAL_ADC_Init+0x1a8>)
 8002dc4:	4013      	ands	r3, r2
 8002dc6:	687a      	ldr	r2, [r7, #4]
 8002dc8:	6812      	ldr	r2, [r2, #0]
 8002dca:	68b9      	ldr	r1, [r7, #8]
 8002dcc:	430b      	orrs	r3, r1
 8002dce:	6093      	str	r3, [r2, #8]
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	689b      	ldr	r3, [r3, #8]
 8002dd4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002dd8:	d003      	beq.n	8002de2 <HAL_ADC_Init+0x126>
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	689b      	ldr	r3, [r3, #8]
 8002dde:	2b01      	cmp	r3, #1
 8002de0:	d104      	bne.n	8002dec <HAL_ADC_Init+0x130>
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	691b      	ldr	r3, [r3, #16]
 8002de6:	3b01      	subs	r3, #1
 8002de8:	051b      	lsls	r3, r3, #20
 8002dea:	60fb      	str	r3, [r7, #12]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002df2:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	68fa      	ldr	r2, [r7, #12]
 8002dfc:	430a      	orrs	r2, r1
 8002dfe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	689a      	ldr	r2, [r3, #8]
 8002e06:	4b18      	ldr	r3, [pc, #96]	@ (8002e68 <HAL_ADC_Init+0x1ac>)
 8002e08:	4013      	ands	r3, r2
 8002e0a:	68ba      	ldr	r2, [r7, #8]
 8002e0c:	429a      	cmp	r2, r3
 8002e0e:	d10b      	bne.n	8002e28 <HAL_ADC_Init+0x16c>
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	2200      	movs	r2, #0
 8002e14:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e1a:	f023 0303 	bic.w	r3, r3, #3
 8002e1e:	f043 0201 	orr.w	r2, r3, #1
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e26:	e018      	b.n	8002e5a <HAL_ADC_Init+0x19e>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e2c:	f023 0312 	bic.w	r3, r3, #18
 8002e30:	f043 0210 	orr.w	r2, r3, #16
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e3c:	f043 0201 	orr.w	r2, r3, #1
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002e44:	2301      	movs	r3, #1
 8002e46:	75fb      	strb	r3, [r7, #23]
 8002e48:	e007      	b.n	8002e5a <HAL_ADC_Init+0x19e>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002e4e:	f043 0210 	orr.w	r2, r3, #16
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	629a      	str	r2, [r3, #40]	@ 0x28
 8002e56:	2301      	movs	r3, #1
 8002e58:	75fb      	strb	r3, [r7, #23]
 8002e5a:	7dfb      	ldrb	r3, [r7, #23]
 8002e5c:	4618      	mov	r0, r3
 8002e5e:	3718      	adds	r7, #24
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd80      	pop	{r7, pc}
 8002e64:	ffe1f7fd 	.word	0xffe1f7fd
 8002e68:	ff1f0efe 	.word	0xff1f0efe

08002e6c <HAL_ADC_ConfigChannel>:
 8002e6c:	b480      	push	{r7}
 8002e6e:	b085      	sub	sp, #20
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]
 8002e74:	6039      	str	r1, [r7, #0]
 8002e76:	2300      	movs	r3, #0
 8002e78:	73fb      	strb	r3, [r7, #15]
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	60bb      	str	r3, [r7, #8]
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002e84:	2b01      	cmp	r3, #1
 8002e86:	d101      	bne.n	8002e8c <HAL_ADC_ConfigChannel+0x20>
 8002e88:	2302      	movs	r3, #2
 8002e8a:	e0dc      	b.n	8003046 <HAL_ADC_ConfigChannel+0x1da>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2201      	movs	r2, #1
 8002e90:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002e94:	683b      	ldr	r3, [r7, #0]
 8002e96:	685b      	ldr	r3, [r3, #4]
 8002e98:	2b06      	cmp	r3, #6
 8002e9a:	d81c      	bhi.n	8002ed6 <HAL_ADC_ConfigChannel+0x6a>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002ea2:	683b      	ldr	r3, [r7, #0]
 8002ea4:	685a      	ldr	r2, [r3, #4]
 8002ea6:	4613      	mov	r3, r2
 8002ea8:	009b      	lsls	r3, r3, #2
 8002eaa:	4413      	add	r3, r2
 8002eac:	3b05      	subs	r3, #5
 8002eae:	221f      	movs	r2, #31
 8002eb0:	fa02 f303 	lsl.w	r3, r2, r3
 8002eb4:	43db      	mvns	r3, r3
 8002eb6:	4019      	ands	r1, r3
 8002eb8:	683b      	ldr	r3, [r7, #0]
 8002eba:	6818      	ldr	r0, [r3, #0]
 8002ebc:	683b      	ldr	r3, [r7, #0]
 8002ebe:	685a      	ldr	r2, [r3, #4]
 8002ec0:	4613      	mov	r3, r2
 8002ec2:	009b      	lsls	r3, r3, #2
 8002ec4:	4413      	add	r3, r2
 8002ec6:	3b05      	subs	r3, #5
 8002ec8:	fa00 f203 	lsl.w	r2, r0, r3
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	430a      	orrs	r2, r1
 8002ed2:	635a      	str	r2, [r3, #52]	@ 0x34
 8002ed4:	e03c      	b.n	8002f50 <HAL_ADC_ConfigChannel+0xe4>
 8002ed6:	683b      	ldr	r3, [r7, #0]
 8002ed8:	685b      	ldr	r3, [r3, #4]
 8002eda:	2b0c      	cmp	r3, #12
 8002edc:	d81c      	bhi.n	8002f18 <HAL_ADC_ConfigChannel+0xac>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002ee4:	683b      	ldr	r3, [r7, #0]
 8002ee6:	685a      	ldr	r2, [r3, #4]
 8002ee8:	4613      	mov	r3, r2
 8002eea:	009b      	lsls	r3, r3, #2
 8002eec:	4413      	add	r3, r2
 8002eee:	3b23      	subs	r3, #35	@ 0x23
 8002ef0:	221f      	movs	r2, #31
 8002ef2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef6:	43db      	mvns	r3, r3
 8002ef8:	4019      	ands	r1, r3
 8002efa:	683b      	ldr	r3, [r7, #0]
 8002efc:	6818      	ldr	r0, [r3, #0]
 8002efe:	683b      	ldr	r3, [r7, #0]
 8002f00:	685a      	ldr	r2, [r3, #4]
 8002f02:	4613      	mov	r3, r2
 8002f04:	009b      	lsls	r3, r3, #2
 8002f06:	4413      	add	r3, r2
 8002f08:	3b23      	subs	r3, #35	@ 0x23
 8002f0a:	fa00 f203 	lsl.w	r2, r0, r3
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	430a      	orrs	r2, r1
 8002f14:	631a      	str	r2, [r3, #48]	@ 0x30
 8002f16:	e01b      	b.n	8002f50 <HAL_ADC_ConfigChannel+0xe4>
 8002f18:	687b      	ldr	r3, [r7, #4]
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002f1e:	683b      	ldr	r3, [r7, #0]
 8002f20:	685a      	ldr	r2, [r3, #4]
 8002f22:	4613      	mov	r3, r2
 8002f24:	009b      	lsls	r3, r3, #2
 8002f26:	4413      	add	r3, r2
 8002f28:	3b41      	subs	r3, #65	@ 0x41
 8002f2a:	221f      	movs	r2, #31
 8002f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f30:	43db      	mvns	r3, r3
 8002f32:	4019      	ands	r1, r3
 8002f34:	683b      	ldr	r3, [r7, #0]
 8002f36:	6818      	ldr	r0, [r3, #0]
 8002f38:	683b      	ldr	r3, [r7, #0]
 8002f3a:	685a      	ldr	r2, [r3, #4]
 8002f3c:	4613      	mov	r3, r2
 8002f3e:	009b      	lsls	r3, r3, #2
 8002f40:	4413      	add	r3, r2
 8002f42:	3b41      	subs	r3, #65	@ 0x41
 8002f44:	fa00 f203 	lsl.w	r2, r0, r3
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	430a      	orrs	r2, r1
 8002f4e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002f50:	683b      	ldr	r3, [r7, #0]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	2b09      	cmp	r3, #9
 8002f56:	d91c      	bls.n	8002f92 <HAL_ADC_ConfigChannel+0x126>
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	68d9      	ldr	r1, [r3, #12]
 8002f5e:	683b      	ldr	r3, [r7, #0]
 8002f60:	681a      	ldr	r2, [r3, #0]
 8002f62:	4613      	mov	r3, r2
 8002f64:	005b      	lsls	r3, r3, #1
 8002f66:	4413      	add	r3, r2
 8002f68:	3b1e      	subs	r3, #30
 8002f6a:	2207      	movs	r2, #7
 8002f6c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f70:	43db      	mvns	r3, r3
 8002f72:	4019      	ands	r1, r3
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	6898      	ldr	r0, [r3, #8]
 8002f78:	683b      	ldr	r3, [r7, #0]
 8002f7a:	681a      	ldr	r2, [r3, #0]
 8002f7c:	4613      	mov	r3, r2
 8002f7e:	005b      	lsls	r3, r3, #1
 8002f80:	4413      	add	r3, r2
 8002f82:	3b1e      	subs	r3, #30
 8002f84:	fa00 f203 	lsl.w	r2, r0, r3
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	430a      	orrs	r2, r1
 8002f8e:	60da      	str	r2, [r3, #12]
 8002f90:	e019      	b.n	8002fc6 <HAL_ADC_ConfigChannel+0x15a>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	6919      	ldr	r1, [r3, #16]
 8002f98:	683b      	ldr	r3, [r7, #0]
 8002f9a:	681a      	ldr	r2, [r3, #0]
 8002f9c:	4613      	mov	r3, r2
 8002f9e:	005b      	lsls	r3, r3, #1
 8002fa0:	4413      	add	r3, r2
 8002fa2:	2207      	movs	r2, #7
 8002fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fa8:	43db      	mvns	r3, r3
 8002faa:	4019      	ands	r1, r3
 8002fac:	683b      	ldr	r3, [r7, #0]
 8002fae:	6898      	ldr	r0, [r3, #8]
 8002fb0:	683b      	ldr	r3, [r7, #0]
 8002fb2:	681a      	ldr	r2, [r3, #0]
 8002fb4:	4613      	mov	r3, r2
 8002fb6:	005b      	lsls	r3, r3, #1
 8002fb8:	4413      	add	r3, r2
 8002fba:	fa00 f203 	lsl.w	r2, r0, r3
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	430a      	orrs	r2, r1
 8002fc4:	611a      	str	r2, [r3, #16]
 8002fc6:	683b      	ldr	r3, [r7, #0]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	2b10      	cmp	r3, #16
 8002fcc:	d003      	beq.n	8002fd6 <HAL_ADC_ConfigChannel+0x16a>
 8002fce:	683b      	ldr	r3, [r7, #0]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	2b11      	cmp	r3, #17
 8002fd4:	d132      	bne.n	800303c <HAL_ADC_ConfigChannel+0x1d0>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	4a1d      	ldr	r2, [pc, #116]	@ (8003050 <HAL_ADC_ConfigChannel+0x1e4>)
 8002fdc:	4293      	cmp	r3, r2
 8002fde:	d125      	bne.n	800302c <HAL_ADC_ConfigChannel+0x1c0>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	689b      	ldr	r3, [r3, #8]
 8002fe6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d126      	bne.n	800303c <HAL_ADC_ConfigChannel+0x1d0>
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	689a      	ldr	r2, [r3, #8]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8002ffc:	609a      	str	r2, [r3, #8]
 8002ffe:	683b      	ldr	r3, [r7, #0]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	2b10      	cmp	r3, #16
 8003004:	d11a      	bne.n	800303c <HAL_ADC_ConfigChannel+0x1d0>
 8003006:	4b13      	ldr	r3, [pc, #76]	@ (8003054 <HAL_ADC_ConfigChannel+0x1e8>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	4a13      	ldr	r2, [pc, #76]	@ (8003058 <HAL_ADC_ConfigChannel+0x1ec>)
 800300c:	fba2 2303 	umull	r2, r3, r2, r3
 8003010:	0c9a      	lsrs	r2, r3, #18
 8003012:	4613      	mov	r3, r2
 8003014:	009b      	lsls	r3, r3, #2
 8003016:	4413      	add	r3, r2
 8003018:	005b      	lsls	r3, r3, #1
 800301a:	60bb      	str	r3, [r7, #8]
 800301c:	e002      	b.n	8003024 <HAL_ADC_ConfigChannel+0x1b8>
 800301e:	68bb      	ldr	r3, [r7, #8]
 8003020:	3b01      	subs	r3, #1
 8003022:	60bb      	str	r3, [r7, #8]
 8003024:	68bb      	ldr	r3, [r7, #8]
 8003026:	2b00      	cmp	r3, #0
 8003028:	d1f9      	bne.n	800301e <HAL_ADC_ConfigChannel+0x1b2>
 800302a:	e007      	b.n	800303c <HAL_ADC_ConfigChannel+0x1d0>
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003030:	f043 0220 	orr.w	r2, r3, #32
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	629a      	str	r2, [r3, #40]	@ 0x28
 8003038:	2301      	movs	r3, #1
 800303a:	73fb      	strb	r3, [r7, #15]
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	2200      	movs	r2, #0
 8003040:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003044:	7bfb      	ldrb	r3, [r7, #15]
 8003046:	4618      	mov	r0, r3
 8003048:	3714      	adds	r7, #20
 800304a:	46bd      	mov	sp, r7
 800304c:	bc80      	pop	{r7}
 800304e:	4770      	bx	lr
 8003050:	40012400 	.word	0x40012400
 8003054:	20000008 	.word	0x20000008
 8003058:	431bde83 	.word	0x431bde83

0800305c <ADC_ConversionStop_Disable>:
 800305c:	b580      	push	{r7, lr}
 800305e:	b084      	sub	sp, #16
 8003060:	af00      	add	r7, sp, #0
 8003062:	6078      	str	r0, [r7, #4]
 8003064:	2300      	movs	r3, #0
 8003066:	60fb      	str	r3, [r7, #12]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	689b      	ldr	r3, [r3, #8]
 800306e:	f003 0301 	and.w	r3, r3, #1
 8003072:	2b01      	cmp	r3, #1
 8003074:	d12e      	bne.n	80030d4 <ADC_ConversionStop_Disable+0x78>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	689a      	ldr	r2, [r3, #8]
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	f022 0201 	bic.w	r2, r2, #1
 8003084:	609a      	str	r2, [r3, #8]
 8003086:	f7ff fdeb 	bl	8002c60 <HAL_GetTick>
 800308a:	60f8      	str	r0, [r7, #12]
 800308c:	e01b      	b.n	80030c6 <ADC_ConversionStop_Disable+0x6a>
 800308e:	f7ff fde7 	bl	8002c60 <HAL_GetTick>
 8003092:	4602      	mov	r2, r0
 8003094:	68fb      	ldr	r3, [r7, #12]
 8003096:	1ad3      	subs	r3, r2, r3
 8003098:	2b02      	cmp	r3, #2
 800309a:	d914      	bls.n	80030c6 <ADC_ConversionStop_Disable+0x6a>
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	689b      	ldr	r3, [r3, #8]
 80030a2:	f003 0301 	and.w	r3, r3, #1
 80030a6:	2b01      	cmp	r3, #1
 80030a8:	d10d      	bne.n	80030c6 <ADC_ConversionStop_Disable+0x6a>
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80030ae:	f043 0210 	orr.w	r2, r3, #16
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	629a      	str	r2, [r3, #40]	@ 0x28
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030ba:	f043 0201 	orr.w	r2, r3, #1
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80030c2:	2301      	movs	r3, #1
 80030c4:	e007      	b.n	80030d6 <ADC_ConversionStop_Disable+0x7a>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	689b      	ldr	r3, [r3, #8]
 80030cc:	f003 0301 	and.w	r3, r3, #1
 80030d0:	2b01      	cmp	r3, #1
 80030d2:	d0dc      	beq.n	800308e <ADC_ConversionStop_Disable+0x32>
 80030d4:	2300      	movs	r3, #0
 80030d6:	4618      	mov	r0, r3
 80030d8:	3710      	adds	r7, #16
 80030da:	46bd      	mov	sp, r7
 80030dc:	bd80      	pop	{r7, pc}
	...

080030e0 <__NVIC_SetPriorityGrouping>:
 80030e0:	b480      	push	{r7}
 80030e2:	b085      	sub	sp, #20
 80030e4:	af00      	add	r7, sp, #0
 80030e6:	6078      	str	r0, [r7, #4]
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	f003 0307 	and.w	r3, r3, #7
 80030ee:	60fb      	str	r3, [r7, #12]
 80030f0:	4b0c      	ldr	r3, [pc, #48]	@ (8003124 <__NVIC_SetPriorityGrouping+0x44>)
 80030f2:	68db      	ldr	r3, [r3, #12]
 80030f4:	60bb      	str	r3, [r7, #8]
 80030f6:	68ba      	ldr	r2, [r7, #8]
 80030f8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80030fc:	4013      	ands	r3, r2
 80030fe:	60bb      	str	r3, [r7, #8]
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	021a      	lsls	r2, r3, #8
 8003104:	68bb      	ldr	r3, [r7, #8]
 8003106:	4313      	orrs	r3, r2
 8003108:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800310c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003110:	60bb      	str	r3, [r7, #8]
 8003112:	4a04      	ldr	r2, [pc, #16]	@ (8003124 <__NVIC_SetPriorityGrouping+0x44>)
 8003114:	68bb      	ldr	r3, [r7, #8]
 8003116:	60d3      	str	r3, [r2, #12]
 8003118:	bf00      	nop
 800311a:	3714      	adds	r7, #20
 800311c:	46bd      	mov	sp, r7
 800311e:	bc80      	pop	{r7}
 8003120:	4770      	bx	lr
 8003122:	bf00      	nop
 8003124:	e000ed00 	.word	0xe000ed00

08003128 <__NVIC_GetPriorityGrouping>:
 8003128:	b480      	push	{r7}
 800312a:	af00      	add	r7, sp, #0
 800312c:	4b04      	ldr	r3, [pc, #16]	@ (8003140 <__NVIC_GetPriorityGrouping+0x18>)
 800312e:	68db      	ldr	r3, [r3, #12]
 8003130:	0a1b      	lsrs	r3, r3, #8
 8003132:	f003 0307 	and.w	r3, r3, #7
 8003136:	4618      	mov	r0, r3
 8003138:	46bd      	mov	sp, r7
 800313a:	bc80      	pop	{r7}
 800313c:	4770      	bx	lr
 800313e:	bf00      	nop
 8003140:	e000ed00 	.word	0xe000ed00

08003144 <__NVIC_EnableIRQ>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	4603      	mov	r3, r0
 800314c:	71fb      	strb	r3, [r7, #7]
 800314e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003152:	2b00      	cmp	r3, #0
 8003154:	db0b      	blt.n	800316e <__NVIC_EnableIRQ+0x2a>
 8003156:	79fb      	ldrb	r3, [r7, #7]
 8003158:	f003 021f 	and.w	r2, r3, #31
 800315c:	4906      	ldr	r1, [pc, #24]	@ (8003178 <__NVIC_EnableIRQ+0x34>)
 800315e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003162:	095b      	lsrs	r3, r3, #5
 8003164:	2001      	movs	r0, #1
 8003166:	fa00 f202 	lsl.w	r2, r0, r2
 800316a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800316e:	bf00      	nop
 8003170:	370c      	adds	r7, #12
 8003172:	46bd      	mov	sp, r7
 8003174:	bc80      	pop	{r7}
 8003176:	4770      	bx	lr
 8003178:	e000e100 	.word	0xe000e100

0800317c <__NVIC_SetPriority>:
 800317c:	b480      	push	{r7}
 800317e:	b083      	sub	sp, #12
 8003180:	af00      	add	r7, sp, #0
 8003182:	4603      	mov	r3, r0
 8003184:	6039      	str	r1, [r7, #0]
 8003186:	71fb      	strb	r3, [r7, #7]
 8003188:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800318c:	2b00      	cmp	r3, #0
 800318e:	db0a      	blt.n	80031a6 <__NVIC_SetPriority+0x2a>
 8003190:	683b      	ldr	r3, [r7, #0]
 8003192:	b2da      	uxtb	r2, r3
 8003194:	490c      	ldr	r1, [pc, #48]	@ (80031c8 <__NVIC_SetPriority+0x4c>)
 8003196:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800319a:	0112      	lsls	r2, r2, #4
 800319c:	b2d2      	uxtb	r2, r2
 800319e:	440b      	add	r3, r1
 80031a0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80031a4:	e00a      	b.n	80031bc <__NVIC_SetPriority+0x40>
 80031a6:	683b      	ldr	r3, [r7, #0]
 80031a8:	b2da      	uxtb	r2, r3
 80031aa:	4908      	ldr	r1, [pc, #32]	@ (80031cc <__NVIC_SetPriority+0x50>)
 80031ac:	79fb      	ldrb	r3, [r7, #7]
 80031ae:	f003 030f 	and.w	r3, r3, #15
 80031b2:	3b04      	subs	r3, #4
 80031b4:	0112      	lsls	r2, r2, #4
 80031b6:	b2d2      	uxtb	r2, r2
 80031b8:	440b      	add	r3, r1
 80031ba:	761a      	strb	r2, [r3, #24]
 80031bc:	bf00      	nop
 80031be:	370c      	adds	r7, #12
 80031c0:	46bd      	mov	sp, r7
 80031c2:	bc80      	pop	{r7}
 80031c4:	4770      	bx	lr
 80031c6:	bf00      	nop
 80031c8:	e000e100 	.word	0xe000e100
 80031cc:	e000ed00 	.word	0xe000ed00

080031d0 <NVIC_EncodePriority>:
 80031d0:	b480      	push	{r7}
 80031d2:	b089      	sub	sp, #36	@ 0x24
 80031d4:	af00      	add	r7, sp, #0
 80031d6:	60f8      	str	r0, [r7, #12]
 80031d8:	60b9      	str	r1, [r7, #8]
 80031da:	607a      	str	r2, [r7, #4]
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	f003 0307 	and.w	r3, r3, #7
 80031e2:	61fb      	str	r3, [r7, #28]
 80031e4:	69fb      	ldr	r3, [r7, #28]
 80031e6:	f1c3 0307 	rsb	r3, r3, #7
 80031ea:	2b04      	cmp	r3, #4
 80031ec:	bf28      	it	cs
 80031ee:	2304      	movcs	r3, #4
 80031f0:	61bb      	str	r3, [r7, #24]
 80031f2:	69fb      	ldr	r3, [r7, #28]
 80031f4:	3304      	adds	r3, #4
 80031f6:	2b06      	cmp	r3, #6
 80031f8:	d902      	bls.n	8003200 <NVIC_EncodePriority+0x30>
 80031fa:	69fb      	ldr	r3, [r7, #28]
 80031fc:	3b03      	subs	r3, #3
 80031fe:	e000      	b.n	8003202 <NVIC_EncodePriority+0x32>
 8003200:	2300      	movs	r3, #0
 8003202:	617b      	str	r3, [r7, #20]
 8003204:	f04f 32ff 	mov.w	r2, #4294967295
 8003208:	69bb      	ldr	r3, [r7, #24]
 800320a:	fa02 f303 	lsl.w	r3, r2, r3
 800320e:	43da      	mvns	r2, r3
 8003210:	68bb      	ldr	r3, [r7, #8]
 8003212:	401a      	ands	r2, r3
 8003214:	697b      	ldr	r3, [r7, #20]
 8003216:	409a      	lsls	r2, r3
 8003218:	f04f 31ff 	mov.w	r1, #4294967295
 800321c:	697b      	ldr	r3, [r7, #20]
 800321e:	fa01 f303 	lsl.w	r3, r1, r3
 8003222:	43d9      	mvns	r1, r3
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	400b      	ands	r3, r1
 8003228:	4313      	orrs	r3, r2
 800322a:	4618      	mov	r0, r3
 800322c:	3724      	adds	r7, #36	@ 0x24
 800322e:	46bd      	mov	sp, r7
 8003230:	bc80      	pop	{r7}
 8003232:	4770      	bx	lr

08003234 <SysTick_Config>:
 8003234:	b580      	push	{r7, lr}
 8003236:	b082      	sub	sp, #8
 8003238:	af00      	add	r7, sp, #0
 800323a:	6078      	str	r0, [r7, #4]
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	3b01      	subs	r3, #1
 8003240:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003244:	d301      	bcc.n	800324a <SysTick_Config+0x16>
 8003246:	2301      	movs	r3, #1
 8003248:	e00f      	b.n	800326a <SysTick_Config+0x36>
 800324a:	4a0a      	ldr	r2, [pc, #40]	@ (8003274 <SysTick_Config+0x40>)
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	3b01      	subs	r3, #1
 8003250:	6053      	str	r3, [r2, #4]
 8003252:	210f      	movs	r1, #15
 8003254:	f04f 30ff 	mov.w	r0, #4294967295
 8003258:	f7ff ff90 	bl	800317c <__NVIC_SetPriority>
 800325c:	4b05      	ldr	r3, [pc, #20]	@ (8003274 <SysTick_Config+0x40>)
 800325e:	2200      	movs	r2, #0
 8003260:	609a      	str	r2, [r3, #8]
 8003262:	4b04      	ldr	r3, [pc, #16]	@ (8003274 <SysTick_Config+0x40>)
 8003264:	2207      	movs	r2, #7
 8003266:	601a      	str	r2, [r3, #0]
 8003268:	2300      	movs	r3, #0
 800326a:	4618      	mov	r0, r3
 800326c:	3708      	adds	r7, #8
 800326e:	46bd      	mov	sp, r7
 8003270:	bd80      	pop	{r7, pc}
 8003272:	bf00      	nop
 8003274:	e000e010 	.word	0xe000e010

08003278 <HAL_NVIC_SetPriorityGrouping>:
 8003278:	b580      	push	{r7, lr}
 800327a:	b082      	sub	sp, #8
 800327c:	af00      	add	r7, sp, #0
 800327e:	6078      	str	r0, [r7, #4]
 8003280:	6878      	ldr	r0, [r7, #4]
 8003282:	f7ff ff2d 	bl	80030e0 <__NVIC_SetPriorityGrouping>
 8003286:	bf00      	nop
 8003288:	3708      	adds	r7, #8
 800328a:	46bd      	mov	sp, r7
 800328c:	bd80      	pop	{r7, pc}

0800328e <HAL_NVIC_SetPriority>:
 800328e:	b580      	push	{r7, lr}
 8003290:	b086      	sub	sp, #24
 8003292:	af00      	add	r7, sp, #0
 8003294:	4603      	mov	r3, r0
 8003296:	60b9      	str	r1, [r7, #8]
 8003298:	607a      	str	r2, [r7, #4]
 800329a:	73fb      	strb	r3, [r7, #15]
 800329c:	2300      	movs	r3, #0
 800329e:	617b      	str	r3, [r7, #20]
 80032a0:	f7ff ff42 	bl	8003128 <__NVIC_GetPriorityGrouping>
 80032a4:	6178      	str	r0, [r7, #20]
 80032a6:	687a      	ldr	r2, [r7, #4]
 80032a8:	68b9      	ldr	r1, [r7, #8]
 80032aa:	6978      	ldr	r0, [r7, #20]
 80032ac:	f7ff ff90 	bl	80031d0 <NVIC_EncodePriority>
 80032b0:	4602      	mov	r2, r0
 80032b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80032b6:	4611      	mov	r1, r2
 80032b8:	4618      	mov	r0, r3
 80032ba:	f7ff ff5f 	bl	800317c <__NVIC_SetPriority>
 80032be:	bf00      	nop
 80032c0:	3718      	adds	r7, #24
 80032c2:	46bd      	mov	sp, r7
 80032c4:	bd80      	pop	{r7, pc}

080032c6 <HAL_NVIC_EnableIRQ>:
 80032c6:	b580      	push	{r7, lr}
 80032c8:	b082      	sub	sp, #8
 80032ca:	af00      	add	r7, sp, #0
 80032cc:	4603      	mov	r3, r0
 80032ce:	71fb      	strb	r3, [r7, #7]
 80032d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032d4:	4618      	mov	r0, r3
 80032d6:	f7ff ff35 	bl	8003144 <__NVIC_EnableIRQ>
 80032da:	bf00      	nop
 80032dc:	3708      	adds	r7, #8
 80032de:	46bd      	mov	sp, r7
 80032e0:	bd80      	pop	{r7, pc}

080032e2 <HAL_SYSTICK_Config>:
 80032e2:	b580      	push	{r7, lr}
 80032e4:	b082      	sub	sp, #8
 80032e6:	af00      	add	r7, sp, #0
 80032e8:	6078      	str	r0, [r7, #4]
 80032ea:	6878      	ldr	r0, [r7, #4]
 80032ec:	f7ff ffa2 	bl	8003234 <SysTick_Config>
 80032f0:	4603      	mov	r3, r0
 80032f2:	4618      	mov	r0, r3
 80032f4:	3708      	adds	r7, #8
 80032f6:	46bd      	mov	sp, r7
 80032f8:	bd80      	pop	{r7, pc}
	...

080032fc <HAL_GPIO_Init>:
 80032fc:	b480      	push	{r7}
 80032fe:	b08b      	sub	sp, #44	@ 0x2c
 8003300:	af00      	add	r7, sp, #0
 8003302:	6078      	str	r0, [r7, #4]
 8003304:	6039      	str	r1, [r7, #0]
 8003306:	2300      	movs	r3, #0
 8003308:	627b      	str	r3, [r7, #36]	@ 0x24
 800330a:	2300      	movs	r3, #0
 800330c:	623b      	str	r3, [r7, #32]
 800330e:	e169      	b.n	80035e4 <HAL_GPIO_Init+0x2e8>
 8003310:	2201      	movs	r2, #1
 8003312:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003314:	fa02 f303 	lsl.w	r3, r2, r3
 8003318:	61fb      	str	r3, [r7, #28]
 800331a:	683b      	ldr	r3, [r7, #0]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	69fa      	ldr	r2, [r7, #28]
 8003320:	4013      	ands	r3, r2
 8003322:	61bb      	str	r3, [r7, #24]
 8003324:	69ba      	ldr	r2, [r7, #24]
 8003326:	69fb      	ldr	r3, [r7, #28]
 8003328:	429a      	cmp	r2, r3
 800332a:	f040 8158 	bne.w	80035de <HAL_GPIO_Init+0x2e2>
 800332e:	683b      	ldr	r3, [r7, #0]
 8003330:	685b      	ldr	r3, [r3, #4]
 8003332:	4a9a      	ldr	r2, [pc, #616]	@ (800359c <HAL_GPIO_Init+0x2a0>)
 8003334:	4293      	cmp	r3, r2
 8003336:	d05e      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 8003338:	4a98      	ldr	r2, [pc, #608]	@ (800359c <HAL_GPIO_Init+0x2a0>)
 800333a:	4293      	cmp	r3, r2
 800333c:	d875      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 800333e:	4a98      	ldr	r2, [pc, #608]	@ (80035a0 <HAL_GPIO_Init+0x2a4>)
 8003340:	4293      	cmp	r3, r2
 8003342:	d058      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 8003344:	4a96      	ldr	r2, [pc, #600]	@ (80035a0 <HAL_GPIO_Init+0x2a4>)
 8003346:	4293      	cmp	r3, r2
 8003348:	d86f      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 800334a:	4a96      	ldr	r2, [pc, #600]	@ (80035a4 <HAL_GPIO_Init+0x2a8>)
 800334c:	4293      	cmp	r3, r2
 800334e:	d052      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 8003350:	4a94      	ldr	r2, [pc, #592]	@ (80035a4 <HAL_GPIO_Init+0x2a8>)
 8003352:	4293      	cmp	r3, r2
 8003354:	d869      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 8003356:	4a94      	ldr	r2, [pc, #592]	@ (80035a8 <HAL_GPIO_Init+0x2ac>)
 8003358:	4293      	cmp	r3, r2
 800335a:	d04c      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 800335c:	4a92      	ldr	r2, [pc, #584]	@ (80035a8 <HAL_GPIO_Init+0x2ac>)
 800335e:	4293      	cmp	r3, r2
 8003360:	d863      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 8003362:	4a92      	ldr	r2, [pc, #584]	@ (80035ac <HAL_GPIO_Init+0x2b0>)
 8003364:	4293      	cmp	r3, r2
 8003366:	d046      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 8003368:	4a90      	ldr	r2, [pc, #576]	@ (80035ac <HAL_GPIO_Init+0x2b0>)
 800336a:	4293      	cmp	r3, r2
 800336c:	d85d      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 800336e:	2b12      	cmp	r3, #18
 8003370:	d82a      	bhi.n	80033c8 <HAL_GPIO_Init+0xcc>
 8003372:	2b12      	cmp	r3, #18
 8003374:	d859      	bhi.n	800342a <HAL_GPIO_Init+0x12e>
 8003376:	a201      	add	r2, pc, #4	@ (adr r2, 800337c <HAL_GPIO_Init+0x80>)
 8003378:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800337c:	080033f7 	.word	0x080033f7
 8003380:	080033d1 	.word	0x080033d1
 8003384:	080033e3 	.word	0x080033e3
 8003388:	08003425 	.word	0x08003425
 800338c:	0800342b 	.word	0x0800342b
 8003390:	0800342b 	.word	0x0800342b
 8003394:	0800342b 	.word	0x0800342b
 8003398:	0800342b 	.word	0x0800342b
 800339c:	0800342b 	.word	0x0800342b
 80033a0:	0800342b 	.word	0x0800342b
 80033a4:	0800342b 	.word	0x0800342b
 80033a8:	0800342b 	.word	0x0800342b
 80033ac:	0800342b 	.word	0x0800342b
 80033b0:	0800342b 	.word	0x0800342b
 80033b4:	0800342b 	.word	0x0800342b
 80033b8:	0800342b 	.word	0x0800342b
 80033bc:	0800342b 	.word	0x0800342b
 80033c0:	080033d9 	.word	0x080033d9
 80033c4:	080033ed 	.word	0x080033ed
 80033c8:	4a79      	ldr	r2, [pc, #484]	@ (80035b0 <HAL_GPIO_Init+0x2b4>)
 80033ca:	4293      	cmp	r3, r2
 80033cc:	d013      	beq.n	80033f6 <HAL_GPIO_Init+0xfa>
 80033ce:	e02c      	b.n	800342a <HAL_GPIO_Init+0x12e>
 80033d0:	683b      	ldr	r3, [r7, #0]
 80033d2:	68db      	ldr	r3, [r3, #12]
 80033d4:	623b      	str	r3, [r7, #32]
 80033d6:	e029      	b.n	800342c <HAL_GPIO_Init+0x130>
 80033d8:	683b      	ldr	r3, [r7, #0]
 80033da:	68db      	ldr	r3, [r3, #12]
 80033dc:	3304      	adds	r3, #4
 80033de:	623b      	str	r3, [r7, #32]
 80033e0:	e024      	b.n	800342c <HAL_GPIO_Init+0x130>
 80033e2:	683b      	ldr	r3, [r7, #0]
 80033e4:	68db      	ldr	r3, [r3, #12]
 80033e6:	3308      	adds	r3, #8
 80033e8:	623b      	str	r3, [r7, #32]
 80033ea:	e01f      	b.n	800342c <HAL_GPIO_Init+0x130>
 80033ec:	683b      	ldr	r3, [r7, #0]
 80033ee:	68db      	ldr	r3, [r3, #12]
 80033f0:	330c      	adds	r3, #12
 80033f2:	623b      	str	r3, [r7, #32]
 80033f4:	e01a      	b.n	800342c <HAL_GPIO_Init+0x130>
 80033f6:	683b      	ldr	r3, [r7, #0]
 80033f8:	689b      	ldr	r3, [r3, #8]
 80033fa:	2b00      	cmp	r3, #0
 80033fc:	d102      	bne.n	8003404 <HAL_GPIO_Init+0x108>
 80033fe:	2304      	movs	r3, #4
 8003400:	623b      	str	r3, [r7, #32]
 8003402:	e013      	b.n	800342c <HAL_GPIO_Init+0x130>
 8003404:	683b      	ldr	r3, [r7, #0]
 8003406:	689b      	ldr	r3, [r3, #8]
 8003408:	2b01      	cmp	r3, #1
 800340a:	d105      	bne.n	8003418 <HAL_GPIO_Init+0x11c>
 800340c:	2308      	movs	r3, #8
 800340e:	623b      	str	r3, [r7, #32]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	69fa      	ldr	r2, [r7, #28]
 8003414:	611a      	str	r2, [r3, #16]
 8003416:	e009      	b.n	800342c <HAL_GPIO_Init+0x130>
 8003418:	2308      	movs	r3, #8
 800341a:	623b      	str	r3, [r7, #32]
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	69fa      	ldr	r2, [r7, #28]
 8003420:	615a      	str	r2, [r3, #20]
 8003422:	e003      	b.n	800342c <HAL_GPIO_Init+0x130>
 8003424:	2300      	movs	r3, #0
 8003426:	623b      	str	r3, [r7, #32]
 8003428:	e000      	b.n	800342c <HAL_GPIO_Init+0x130>
 800342a:	bf00      	nop
 800342c:	69bb      	ldr	r3, [r7, #24]
 800342e:	2bff      	cmp	r3, #255	@ 0xff
 8003430:	d801      	bhi.n	8003436 <HAL_GPIO_Init+0x13a>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	e001      	b.n	800343a <HAL_GPIO_Init+0x13e>
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	3304      	adds	r3, #4
 800343a:	617b      	str	r3, [r7, #20]
 800343c:	69bb      	ldr	r3, [r7, #24]
 800343e:	2bff      	cmp	r3, #255	@ 0xff
 8003440:	d802      	bhi.n	8003448 <HAL_GPIO_Init+0x14c>
 8003442:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003444:	009b      	lsls	r3, r3, #2
 8003446:	e002      	b.n	800344e <HAL_GPIO_Init+0x152>
 8003448:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800344a:	3b08      	subs	r3, #8
 800344c:	009b      	lsls	r3, r3, #2
 800344e:	613b      	str	r3, [r7, #16]
 8003450:	697b      	ldr	r3, [r7, #20]
 8003452:	681a      	ldr	r2, [r3, #0]
 8003454:	210f      	movs	r1, #15
 8003456:	693b      	ldr	r3, [r7, #16]
 8003458:	fa01 f303 	lsl.w	r3, r1, r3
 800345c:	43db      	mvns	r3, r3
 800345e:	401a      	ands	r2, r3
 8003460:	6a39      	ldr	r1, [r7, #32]
 8003462:	693b      	ldr	r3, [r7, #16]
 8003464:	fa01 f303 	lsl.w	r3, r1, r3
 8003468:	431a      	orrs	r2, r3
 800346a:	697b      	ldr	r3, [r7, #20]
 800346c:	601a      	str	r2, [r3, #0]
 800346e:	683b      	ldr	r3, [r7, #0]
 8003470:	685b      	ldr	r3, [r3, #4]
 8003472:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003476:	2b00      	cmp	r3, #0
 8003478:	f000 80b1 	beq.w	80035de <HAL_GPIO_Init+0x2e2>
 800347c:	4b4d      	ldr	r3, [pc, #308]	@ (80035b4 <HAL_GPIO_Init+0x2b8>)
 800347e:	699b      	ldr	r3, [r3, #24]
 8003480:	4a4c      	ldr	r2, [pc, #304]	@ (80035b4 <HAL_GPIO_Init+0x2b8>)
 8003482:	f043 0301 	orr.w	r3, r3, #1
 8003486:	6193      	str	r3, [r2, #24]
 8003488:	4b4a      	ldr	r3, [pc, #296]	@ (80035b4 <HAL_GPIO_Init+0x2b8>)
 800348a:	699b      	ldr	r3, [r3, #24]
 800348c:	f003 0301 	and.w	r3, r3, #1
 8003490:	60bb      	str	r3, [r7, #8]
 8003492:	68bb      	ldr	r3, [r7, #8]
 8003494:	4a48      	ldr	r2, [pc, #288]	@ (80035b8 <HAL_GPIO_Init+0x2bc>)
 8003496:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003498:	089b      	lsrs	r3, r3, #2
 800349a:	3302      	adds	r3, #2
 800349c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80034a0:	60fb      	str	r3, [r7, #12]
 80034a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034a4:	f003 0303 	and.w	r3, r3, #3
 80034a8:	009b      	lsls	r3, r3, #2
 80034aa:	220f      	movs	r2, #15
 80034ac:	fa02 f303 	lsl.w	r3, r2, r3
 80034b0:	43db      	mvns	r3, r3
 80034b2:	68fa      	ldr	r2, [r7, #12]
 80034b4:	4013      	ands	r3, r2
 80034b6:	60fb      	str	r3, [r7, #12]
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	4a40      	ldr	r2, [pc, #256]	@ (80035bc <HAL_GPIO_Init+0x2c0>)
 80034bc:	4293      	cmp	r3, r2
 80034be:	d013      	beq.n	80034e8 <HAL_GPIO_Init+0x1ec>
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	4a3f      	ldr	r2, [pc, #252]	@ (80035c0 <HAL_GPIO_Init+0x2c4>)
 80034c4:	4293      	cmp	r3, r2
 80034c6:	d00d      	beq.n	80034e4 <HAL_GPIO_Init+0x1e8>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	4a3e      	ldr	r2, [pc, #248]	@ (80035c4 <HAL_GPIO_Init+0x2c8>)
 80034cc:	4293      	cmp	r3, r2
 80034ce:	d007      	beq.n	80034e0 <HAL_GPIO_Init+0x1e4>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	4a3d      	ldr	r2, [pc, #244]	@ (80035c8 <HAL_GPIO_Init+0x2cc>)
 80034d4:	4293      	cmp	r3, r2
 80034d6:	d101      	bne.n	80034dc <HAL_GPIO_Init+0x1e0>
 80034d8:	2303      	movs	r3, #3
 80034da:	e006      	b.n	80034ea <HAL_GPIO_Init+0x1ee>
 80034dc:	2304      	movs	r3, #4
 80034de:	e004      	b.n	80034ea <HAL_GPIO_Init+0x1ee>
 80034e0:	2302      	movs	r3, #2
 80034e2:	e002      	b.n	80034ea <HAL_GPIO_Init+0x1ee>
 80034e4:	2301      	movs	r3, #1
 80034e6:	e000      	b.n	80034ea <HAL_GPIO_Init+0x1ee>
 80034e8:	2300      	movs	r3, #0
 80034ea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80034ec:	f002 0203 	and.w	r2, r2, #3
 80034f0:	0092      	lsls	r2, r2, #2
 80034f2:	4093      	lsls	r3, r2
 80034f4:	68fa      	ldr	r2, [r7, #12]
 80034f6:	4313      	orrs	r3, r2
 80034f8:	60fb      	str	r3, [r7, #12]
 80034fa:	492f      	ldr	r1, [pc, #188]	@ (80035b8 <HAL_GPIO_Init+0x2bc>)
 80034fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80034fe:	089b      	lsrs	r3, r3, #2
 8003500:	3302      	adds	r3, #2
 8003502:	68fa      	ldr	r2, [r7, #12]
 8003504:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003508:	683b      	ldr	r3, [r7, #0]
 800350a:	685b      	ldr	r3, [r3, #4]
 800350c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003510:	2b00      	cmp	r3, #0
 8003512:	d006      	beq.n	8003522 <HAL_GPIO_Init+0x226>
 8003514:	4b2d      	ldr	r3, [pc, #180]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003516:	689a      	ldr	r2, [r3, #8]
 8003518:	492c      	ldr	r1, [pc, #176]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800351a:	69bb      	ldr	r3, [r7, #24]
 800351c:	4313      	orrs	r3, r2
 800351e:	608b      	str	r3, [r1, #8]
 8003520:	e006      	b.n	8003530 <HAL_GPIO_Init+0x234>
 8003522:	4b2a      	ldr	r3, [pc, #168]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003524:	689a      	ldr	r2, [r3, #8]
 8003526:	69bb      	ldr	r3, [r7, #24]
 8003528:	43db      	mvns	r3, r3
 800352a:	4928      	ldr	r1, [pc, #160]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800352c:	4013      	ands	r3, r2
 800352e:	608b      	str	r3, [r1, #8]
 8003530:	683b      	ldr	r3, [r7, #0]
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003538:	2b00      	cmp	r3, #0
 800353a:	d006      	beq.n	800354a <HAL_GPIO_Init+0x24e>
 800353c:	4b23      	ldr	r3, [pc, #140]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800353e:	68da      	ldr	r2, [r3, #12]
 8003540:	4922      	ldr	r1, [pc, #136]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003542:	69bb      	ldr	r3, [r7, #24]
 8003544:	4313      	orrs	r3, r2
 8003546:	60cb      	str	r3, [r1, #12]
 8003548:	e006      	b.n	8003558 <HAL_GPIO_Init+0x25c>
 800354a:	4b20      	ldr	r3, [pc, #128]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800354c:	68da      	ldr	r2, [r3, #12]
 800354e:	69bb      	ldr	r3, [r7, #24]
 8003550:	43db      	mvns	r3, r3
 8003552:	491e      	ldr	r1, [pc, #120]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003554:	4013      	ands	r3, r2
 8003556:	60cb      	str	r3, [r1, #12]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	685b      	ldr	r3, [r3, #4]
 800355c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003560:	2b00      	cmp	r3, #0
 8003562:	d006      	beq.n	8003572 <HAL_GPIO_Init+0x276>
 8003564:	4b19      	ldr	r3, [pc, #100]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003566:	685a      	ldr	r2, [r3, #4]
 8003568:	4918      	ldr	r1, [pc, #96]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800356a:	69bb      	ldr	r3, [r7, #24]
 800356c:	4313      	orrs	r3, r2
 800356e:	604b      	str	r3, [r1, #4]
 8003570:	e006      	b.n	8003580 <HAL_GPIO_Init+0x284>
 8003572:	4b16      	ldr	r3, [pc, #88]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003574:	685a      	ldr	r2, [r3, #4]
 8003576:	69bb      	ldr	r3, [r7, #24]
 8003578:	43db      	mvns	r3, r3
 800357a:	4914      	ldr	r1, [pc, #80]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800357c:	4013      	ands	r3, r2
 800357e:	604b      	str	r3, [r1, #4]
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	685b      	ldr	r3, [r3, #4]
 8003584:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003588:	2b00      	cmp	r3, #0
 800358a:	d021      	beq.n	80035d0 <HAL_GPIO_Init+0x2d4>
 800358c:	4b0f      	ldr	r3, [pc, #60]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 800358e:	681a      	ldr	r2, [r3, #0]
 8003590:	490e      	ldr	r1, [pc, #56]	@ (80035cc <HAL_GPIO_Init+0x2d0>)
 8003592:	69bb      	ldr	r3, [r7, #24]
 8003594:	4313      	orrs	r3, r2
 8003596:	600b      	str	r3, [r1, #0]
 8003598:	e021      	b.n	80035de <HAL_GPIO_Init+0x2e2>
 800359a:	bf00      	nop
 800359c:	10320000 	.word	0x10320000
 80035a0:	10310000 	.word	0x10310000
 80035a4:	10220000 	.word	0x10220000
 80035a8:	10210000 	.word	0x10210000
 80035ac:	10120000 	.word	0x10120000
 80035b0:	10110000 	.word	0x10110000
 80035b4:	40021000 	.word	0x40021000
 80035b8:	40010000 	.word	0x40010000
 80035bc:	40010800 	.word	0x40010800
 80035c0:	40010c00 	.word	0x40010c00
 80035c4:	40011000 	.word	0x40011000
 80035c8:	40011400 	.word	0x40011400
 80035cc:	40010400 	.word	0x40010400
 80035d0:	4b0b      	ldr	r3, [pc, #44]	@ (8003600 <HAL_GPIO_Init+0x304>)
 80035d2:	681a      	ldr	r2, [r3, #0]
 80035d4:	69bb      	ldr	r3, [r7, #24]
 80035d6:	43db      	mvns	r3, r3
 80035d8:	4909      	ldr	r1, [pc, #36]	@ (8003600 <HAL_GPIO_Init+0x304>)
 80035da:	4013      	ands	r3, r2
 80035dc:	600b      	str	r3, [r1, #0]
 80035de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035e0:	3301      	adds	r3, #1
 80035e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80035e4:	683b      	ldr	r3, [r7, #0]
 80035e6:	681a      	ldr	r2, [r3, #0]
 80035e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035ea:	fa22 f303 	lsr.w	r3, r2, r3
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	f47f ae8e 	bne.w	8003310 <HAL_GPIO_Init+0x14>
 80035f4:	bf00      	nop
 80035f6:	bf00      	nop
 80035f8:	372c      	adds	r7, #44	@ 0x2c
 80035fa:	46bd      	mov	sp, r7
 80035fc:	bc80      	pop	{r7}
 80035fe:	4770      	bx	lr
 8003600:	40010400 	.word	0x40010400

08003604 <HAL_GPIO_ReadPin>:
 8003604:	b480      	push	{r7}
 8003606:	b085      	sub	sp, #20
 8003608:	af00      	add	r7, sp, #0
 800360a:	6078      	str	r0, [r7, #4]
 800360c:	460b      	mov	r3, r1
 800360e:	807b      	strh	r3, [r7, #2]
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	689a      	ldr	r2, [r3, #8]
 8003614:	887b      	ldrh	r3, [r7, #2]
 8003616:	4013      	ands	r3, r2
 8003618:	2b00      	cmp	r3, #0
 800361a:	d002      	beq.n	8003622 <HAL_GPIO_ReadPin+0x1e>
 800361c:	2301      	movs	r3, #1
 800361e:	73fb      	strb	r3, [r7, #15]
 8003620:	e001      	b.n	8003626 <HAL_GPIO_ReadPin+0x22>
 8003622:	2300      	movs	r3, #0
 8003624:	73fb      	strb	r3, [r7, #15]
 8003626:	7bfb      	ldrb	r3, [r7, #15]
 8003628:	4618      	mov	r0, r3
 800362a:	3714      	adds	r7, #20
 800362c:	46bd      	mov	sp, r7
 800362e:	bc80      	pop	{r7}
 8003630:	4770      	bx	lr

08003632 <HAL_GPIO_WritePin>:
 8003632:	b480      	push	{r7}
 8003634:	b083      	sub	sp, #12
 8003636:	af00      	add	r7, sp, #0
 8003638:	6078      	str	r0, [r7, #4]
 800363a:	460b      	mov	r3, r1
 800363c:	807b      	strh	r3, [r7, #2]
 800363e:	4613      	mov	r3, r2
 8003640:	707b      	strb	r3, [r7, #1]
 8003642:	787b      	ldrb	r3, [r7, #1]
 8003644:	2b00      	cmp	r3, #0
 8003646:	d003      	beq.n	8003650 <HAL_GPIO_WritePin+0x1e>
 8003648:	887a      	ldrh	r2, [r7, #2]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	611a      	str	r2, [r3, #16]
 800364e:	e003      	b.n	8003658 <HAL_GPIO_WritePin+0x26>
 8003650:	887b      	ldrh	r3, [r7, #2]
 8003652:	041a      	lsls	r2, r3, #16
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	611a      	str	r2, [r3, #16]
 8003658:	bf00      	nop
 800365a:	370c      	adds	r7, #12
 800365c:	46bd      	mov	sp, r7
 800365e:	bc80      	pop	{r7}
 8003660:	4770      	bx	lr
	...

08003664 <HAL_GPIO_EXTI_IRQHandler>:
 8003664:	b580      	push	{r7, lr}
 8003666:	b082      	sub	sp, #8
 8003668:	af00      	add	r7, sp, #0
 800366a:	4603      	mov	r3, r0
 800366c:	80fb      	strh	r3, [r7, #6]
 800366e:	4b08      	ldr	r3, [pc, #32]	@ (8003690 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003670:	695a      	ldr	r2, [r3, #20]
 8003672:	88fb      	ldrh	r3, [r7, #6]
 8003674:	4013      	ands	r3, r2
 8003676:	2b00      	cmp	r3, #0
 8003678:	d006      	beq.n	8003688 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800367a:	4a05      	ldr	r2, [pc, #20]	@ (8003690 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800367c:	88fb      	ldrh	r3, [r7, #6]
 800367e:	6153      	str	r3, [r2, #20]
 8003680:	88fb      	ldrh	r3, [r7, #6]
 8003682:	4618      	mov	r0, r3
 8003684:	f000 f806 	bl	8003694 <HAL_GPIO_EXTI_Callback>
 8003688:	bf00      	nop
 800368a:	3708      	adds	r7, #8
 800368c:	46bd      	mov	sp, r7
 800368e:	bd80      	pop	{r7, pc}
 8003690:	40010400 	.word	0x40010400

08003694 <HAL_GPIO_EXTI_Callback>:
 8003694:	b480      	push	{r7}
 8003696:	b083      	sub	sp, #12
 8003698:	af00      	add	r7, sp, #0
 800369a:	4603      	mov	r3, r0
 800369c:	80fb      	strh	r3, [r7, #6]
 800369e:	bf00      	nop
 80036a0:	370c      	adds	r7, #12
 80036a2:	46bd      	mov	sp, r7
 80036a4:	bc80      	pop	{r7}
 80036a6:	4770      	bx	lr

080036a8 <HAL_I2C_Init>:
 80036a8:	b580      	push	{r7, lr}
 80036aa:	b084      	sub	sp, #16
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	6078      	str	r0, [r7, #4]
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	2b00      	cmp	r3, #0
 80036b4:	d101      	bne.n	80036ba <HAL_I2C_Init+0x12>
 80036b6:	2301      	movs	r3, #1
 80036b8:	e12b      	b.n	8003912 <HAL_I2C_Init+0x26a>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80036c0:	b2db      	uxtb	r3, r3
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	d106      	bne.n	80036d4 <HAL_I2C_Init+0x2c>
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	2200      	movs	r2, #0
 80036ca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80036ce:	6878      	ldr	r0, [r7, #4]
 80036d0:	f7fe f9ce 	bl	8001a70 <HAL_I2C_MspInit>
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	2224      	movs	r2, #36	@ 0x24
 80036d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	681a      	ldr	r2, [r3, #0]
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	f022 0201 	bic.w	r2, r2, #1
 80036ea:	601a      	str	r2, [r3, #0]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	681a      	ldr	r2, [r3, #0]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80036fa:	601a      	str	r2, [r3, #0]
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	681a      	ldr	r2, [r3, #0]
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800370a:	601a      	str	r2, [r3, #0]
 800370c:	f001 fbfc 	bl	8004f08 <HAL_RCC_GetPCLK1Freq>
 8003710:	60f8      	str	r0, [r7, #12]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	685b      	ldr	r3, [r3, #4]
 8003716:	4a81      	ldr	r2, [pc, #516]	@ (800391c <HAL_I2C_Init+0x274>)
 8003718:	4293      	cmp	r3, r2
 800371a:	d807      	bhi.n	800372c <HAL_I2C_Init+0x84>
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	4a80      	ldr	r2, [pc, #512]	@ (8003920 <HAL_I2C_Init+0x278>)
 8003720:	4293      	cmp	r3, r2
 8003722:	bf94      	ite	ls
 8003724:	2301      	movls	r3, #1
 8003726:	2300      	movhi	r3, #0
 8003728:	b2db      	uxtb	r3, r3
 800372a:	e006      	b.n	800373a <HAL_I2C_Init+0x92>
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	4a7d      	ldr	r2, [pc, #500]	@ (8003924 <HAL_I2C_Init+0x27c>)
 8003730:	4293      	cmp	r3, r2
 8003732:	bf94      	ite	ls
 8003734:	2301      	movls	r3, #1
 8003736:	2300      	movhi	r3, #0
 8003738:	b2db      	uxtb	r3, r3
 800373a:	2b00      	cmp	r3, #0
 800373c:	d001      	beq.n	8003742 <HAL_I2C_Init+0x9a>
 800373e:	2301      	movs	r3, #1
 8003740:	e0e7      	b.n	8003912 <HAL_I2C_Init+0x26a>
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	4a78      	ldr	r2, [pc, #480]	@ (8003928 <HAL_I2C_Init+0x280>)
 8003746:	fba2 2303 	umull	r2, r3, r2, r3
 800374a:	0c9b      	lsrs	r3, r3, #18
 800374c:	60bb      	str	r3, [r7, #8]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	685b      	ldr	r3, [r3, #4]
 8003754:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	68ba      	ldr	r2, [r7, #8]
 800375e:	430a      	orrs	r2, r1
 8003760:	605a      	str	r2, [r3, #4]
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	6a1b      	ldr	r3, [r3, #32]
 8003768:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	685b      	ldr	r3, [r3, #4]
 8003770:	4a6a      	ldr	r2, [pc, #424]	@ (800391c <HAL_I2C_Init+0x274>)
 8003772:	4293      	cmp	r3, r2
 8003774:	d802      	bhi.n	800377c <HAL_I2C_Init+0xd4>
 8003776:	68bb      	ldr	r3, [r7, #8]
 8003778:	3301      	adds	r3, #1
 800377a:	e009      	b.n	8003790 <HAL_I2C_Init+0xe8>
 800377c:	68bb      	ldr	r3, [r7, #8]
 800377e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8003782:	fb02 f303 	mul.w	r3, r2, r3
 8003786:	4a69      	ldr	r2, [pc, #420]	@ (800392c <HAL_I2C_Init+0x284>)
 8003788:	fba2 2303 	umull	r2, r3, r2, r3
 800378c:	099b      	lsrs	r3, r3, #6
 800378e:	3301      	adds	r3, #1
 8003790:	687a      	ldr	r2, [r7, #4]
 8003792:	6812      	ldr	r2, [r2, #0]
 8003794:	430b      	orrs	r3, r1
 8003796:	6213      	str	r3, [r2, #32]
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	69db      	ldr	r3, [r3, #28]
 800379e:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80037a2:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	685b      	ldr	r3, [r3, #4]
 80037aa:	495c      	ldr	r1, [pc, #368]	@ (800391c <HAL_I2C_Init+0x274>)
 80037ac:	428b      	cmp	r3, r1
 80037ae:	d819      	bhi.n	80037e4 <HAL_I2C_Init+0x13c>
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	1e59      	subs	r1, r3, #1
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	685b      	ldr	r3, [r3, #4]
 80037b8:	005b      	lsls	r3, r3, #1
 80037ba:	fbb1 f3f3 	udiv	r3, r1, r3
 80037be:	1c59      	adds	r1, r3, #1
 80037c0:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80037c4:	400b      	ands	r3, r1
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d00a      	beq.n	80037e0 <HAL_I2C_Init+0x138>
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	1e59      	subs	r1, r3, #1
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	685b      	ldr	r3, [r3, #4]
 80037d2:	005b      	lsls	r3, r3, #1
 80037d4:	fbb1 f3f3 	udiv	r3, r1, r3
 80037d8:	3301      	adds	r3, #1
 80037da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80037de:	e051      	b.n	8003884 <HAL_I2C_Init+0x1dc>
 80037e0:	2304      	movs	r3, #4
 80037e2:	e04f      	b.n	8003884 <HAL_I2C_Init+0x1dc>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	689b      	ldr	r3, [r3, #8]
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d111      	bne.n	8003810 <HAL_I2C_Init+0x168>
 80037ec:	68fb      	ldr	r3, [r7, #12]
 80037ee:	1e58      	subs	r0, r3, #1
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	6859      	ldr	r1, [r3, #4]
 80037f4:	460b      	mov	r3, r1
 80037f6:	005b      	lsls	r3, r3, #1
 80037f8:	440b      	add	r3, r1
 80037fa:	fbb0 f3f3 	udiv	r3, r0, r3
 80037fe:	3301      	adds	r3, #1
 8003800:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003804:	2b00      	cmp	r3, #0
 8003806:	bf0c      	ite	eq
 8003808:	2301      	moveq	r3, #1
 800380a:	2300      	movne	r3, #0
 800380c:	b2db      	uxtb	r3, r3
 800380e:	e012      	b.n	8003836 <HAL_I2C_Init+0x18e>
 8003810:	68fb      	ldr	r3, [r7, #12]
 8003812:	1e58      	subs	r0, r3, #1
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6859      	ldr	r1, [r3, #4]
 8003818:	460b      	mov	r3, r1
 800381a:	009b      	lsls	r3, r3, #2
 800381c:	440b      	add	r3, r1
 800381e:	0099      	lsls	r1, r3, #2
 8003820:	440b      	add	r3, r1
 8003822:	fbb0 f3f3 	udiv	r3, r0, r3
 8003826:	3301      	adds	r3, #1
 8003828:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800382c:	2b00      	cmp	r3, #0
 800382e:	bf0c      	ite	eq
 8003830:	2301      	moveq	r3, #1
 8003832:	2300      	movne	r3, #0
 8003834:	b2db      	uxtb	r3, r3
 8003836:	2b00      	cmp	r3, #0
 8003838:	d001      	beq.n	800383e <HAL_I2C_Init+0x196>
 800383a:	2301      	movs	r3, #1
 800383c:	e022      	b.n	8003884 <HAL_I2C_Init+0x1dc>
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	689b      	ldr	r3, [r3, #8]
 8003842:	2b00      	cmp	r3, #0
 8003844:	d10e      	bne.n	8003864 <HAL_I2C_Init+0x1bc>
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	1e58      	subs	r0, r3, #1
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	6859      	ldr	r1, [r3, #4]
 800384e:	460b      	mov	r3, r1
 8003850:	005b      	lsls	r3, r3, #1
 8003852:	440b      	add	r3, r1
 8003854:	fbb0 f3f3 	udiv	r3, r0, r3
 8003858:	3301      	adds	r3, #1
 800385a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800385e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003862:	e00f      	b.n	8003884 <HAL_I2C_Init+0x1dc>
 8003864:	68fb      	ldr	r3, [r7, #12]
 8003866:	1e58      	subs	r0, r3, #1
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	6859      	ldr	r1, [r3, #4]
 800386c:	460b      	mov	r3, r1
 800386e:	009b      	lsls	r3, r3, #2
 8003870:	440b      	add	r3, r1
 8003872:	0099      	lsls	r1, r3, #2
 8003874:	440b      	add	r3, r1
 8003876:	fbb0 f3f3 	udiv	r3, r0, r3
 800387a:	3301      	adds	r3, #1
 800387c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003880:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8003884:	6879      	ldr	r1, [r7, #4]
 8003886:	6809      	ldr	r1, [r1, #0]
 8003888:	4313      	orrs	r3, r2
 800388a:	61cb      	str	r3, [r1, #28]
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	681b      	ldr	r3, [r3, #0]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	69da      	ldr	r2, [r3, #28]
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	6a1b      	ldr	r3, [r3, #32]
 800389e:	431a      	orrs	r2, r3
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	430a      	orrs	r2, r1
 80038a6:	601a      	str	r2, [r3, #0]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	689b      	ldr	r3, [r3, #8]
 80038ae:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80038b2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80038b6:	687a      	ldr	r2, [r7, #4]
 80038b8:	6911      	ldr	r1, [r2, #16]
 80038ba:	687a      	ldr	r2, [r7, #4]
 80038bc:	68d2      	ldr	r2, [r2, #12]
 80038be:	4311      	orrs	r1, r2
 80038c0:	687a      	ldr	r2, [r7, #4]
 80038c2:	6812      	ldr	r2, [r2, #0]
 80038c4:	430b      	orrs	r3, r1
 80038c6:	6093      	str	r3, [r2, #8]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	68db      	ldr	r3, [r3, #12]
 80038ce:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	695a      	ldr	r2, [r3, #20]
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	699b      	ldr	r3, [r3, #24]
 80038da:	431a      	orrs	r2, r3
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	430a      	orrs	r2, r1
 80038e2:	60da      	str	r2, [r3, #12]
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	681a      	ldr	r2, [r3, #0]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	f042 0201 	orr.w	r2, r2, #1
 80038f2:	601a      	str	r2, [r3, #0]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	2200      	movs	r2, #0
 80038f8:	641a      	str	r2, [r3, #64]	@ 0x40
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	2220      	movs	r2, #32
 80038fe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	2200      	movs	r2, #0
 8003906:	631a      	str	r2, [r3, #48]	@ 0x30
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	2200      	movs	r2, #0
 800390c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003910:	2300      	movs	r3, #0
 8003912:	4618      	mov	r0, r3
 8003914:	3710      	adds	r7, #16
 8003916:	46bd      	mov	sp, r7
 8003918:	bd80      	pop	{r7, pc}
 800391a:	bf00      	nop
 800391c:	000186a0 	.word	0x000186a0
 8003920:	001e847f 	.word	0x001e847f
 8003924:	003d08ff 	.word	0x003d08ff
 8003928:	431bde83 	.word	0x431bde83
 800392c:	10624dd3 	.word	0x10624dd3

08003930 <HAL_I2C_Mem_Write>:
 8003930:	b580      	push	{r7, lr}
 8003932:	b088      	sub	sp, #32
 8003934:	af02      	add	r7, sp, #8
 8003936:	60f8      	str	r0, [r7, #12]
 8003938:	4608      	mov	r0, r1
 800393a:	4611      	mov	r1, r2
 800393c:	461a      	mov	r2, r3
 800393e:	4603      	mov	r3, r0
 8003940:	817b      	strh	r3, [r7, #10]
 8003942:	460b      	mov	r3, r1
 8003944:	813b      	strh	r3, [r7, #8]
 8003946:	4613      	mov	r3, r2
 8003948:	80fb      	strh	r3, [r7, #6]
 800394a:	f7ff f989 	bl	8002c60 <HAL_GetTick>
 800394e:	6178      	str	r0, [r7, #20]
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003956:	b2db      	uxtb	r3, r3
 8003958:	2b20      	cmp	r3, #32
 800395a:	f040 80d9 	bne.w	8003b10 <HAL_I2C_Mem_Write+0x1e0>
 800395e:	697b      	ldr	r3, [r7, #20]
 8003960:	9300      	str	r3, [sp, #0]
 8003962:	2319      	movs	r3, #25
 8003964:	2201      	movs	r2, #1
 8003966:	496d      	ldr	r1, [pc, #436]	@ (8003b1c <HAL_I2C_Mem_Write+0x1ec>)
 8003968:	68f8      	ldr	r0, [r7, #12]
 800396a:	f000 fccd 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 800396e:	4603      	mov	r3, r0
 8003970:	2b00      	cmp	r3, #0
 8003972:	d001      	beq.n	8003978 <HAL_I2C_Mem_Write+0x48>
 8003974:	2302      	movs	r3, #2
 8003976:	e0cc      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003978:	68fb      	ldr	r3, [r7, #12]
 800397a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800397e:	2b01      	cmp	r3, #1
 8003980:	d101      	bne.n	8003986 <HAL_I2C_Mem_Write+0x56>
 8003982:	2302      	movs	r3, #2
 8003984:	e0c5      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	2201      	movs	r2, #1
 800398a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f003 0301 	and.w	r3, r3, #1
 8003998:	2b01      	cmp	r3, #1
 800399a:	d007      	beq.n	80039ac <HAL_I2C_Mem_Write+0x7c>
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	f042 0201 	orr.w	r2, r2, #1
 80039aa:	601a      	str	r2, [r3, #0]
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	681a      	ldr	r2, [r3, #0]
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80039ba:	601a      	str	r2, [r3, #0]
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	2221      	movs	r2, #33	@ 0x21
 80039c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	2240      	movs	r2, #64	@ 0x40
 80039c8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	2200      	movs	r2, #0
 80039d0:	641a      	str	r2, [r3, #64]	@ 0x40
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	6a3a      	ldr	r2, [r7, #32]
 80039d6:	625a      	str	r2, [r3, #36]	@ 0x24
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80039dc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80039de:	68fb      	ldr	r3, [r7, #12]
 80039e0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80039e2:	b29a      	uxth	r2, r3
 80039e4:	68fb      	ldr	r3, [r7, #12]
 80039e6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	4a4d      	ldr	r2, [pc, #308]	@ (8003b20 <HAL_I2C_Mem_Write+0x1f0>)
 80039ec:	62da      	str	r2, [r3, #44]	@ 0x2c
 80039ee:	88f8      	ldrh	r0, [r7, #6]
 80039f0:	893a      	ldrh	r2, [r7, #8]
 80039f2:	8979      	ldrh	r1, [r7, #10]
 80039f4:	697b      	ldr	r3, [r7, #20]
 80039f6:	9301      	str	r3, [sp, #4]
 80039f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80039fa:	9300      	str	r3, [sp, #0]
 80039fc:	4603      	mov	r3, r0
 80039fe:	68f8      	ldr	r0, [r7, #12]
 8003a00:	f000 fb04 	bl	800400c <I2C_RequestMemoryWrite>
 8003a04:	4603      	mov	r3, r0
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d052      	beq.n	8003ab0 <HAL_I2C_Mem_Write+0x180>
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	e081      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003a0e:	697a      	ldr	r2, [r7, #20]
 8003a10:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003a12:	68f8      	ldr	r0, [r7, #12]
 8003a14:	f000 fd92 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 8003a18:	4603      	mov	r3, r0
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d00d      	beq.n	8003a3a <HAL_I2C_Mem_Write+0x10a>
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a22:	2b04      	cmp	r3, #4
 8003a24:	d107      	bne.n	8003a36 <HAL_I2C_Mem_Write+0x106>
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	681a      	ldr	r2, [r3, #0]
 8003a2c:	68fb      	ldr	r3, [r7, #12]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a34:	601a      	str	r2, [r3, #0]
 8003a36:	2301      	movs	r3, #1
 8003a38:	e06b      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003a3a:	68fb      	ldr	r3, [r7, #12]
 8003a3c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a3e:	781a      	ldrb	r2, [r3, #0]
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	611a      	str	r2, [r3, #16]
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a4a:	1c5a      	adds	r2, r3, #1
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a54:	3b01      	subs	r3, #1
 8003a56:	b29a      	uxth	r2, r3
 8003a58:	68fb      	ldr	r3, [r7, #12]
 8003a5a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003a60:	b29b      	uxth	r3, r3
 8003a62:	3b01      	subs	r3, #1
 8003a64:	b29a      	uxth	r2, r3
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003a6a:	68fb      	ldr	r3, [r7, #12]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	695b      	ldr	r3, [r3, #20]
 8003a70:	f003 0304 	and.w	r3, r3, #4
 8003a74:	2b04      	cmp	r3, #4
 8003a76:	d11b      	bne.n	8003ab0 <HAL_I2C_Mem_Write+0x180>
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d017      	beq.n	8003ab0 <HAL_I2C_Mem_Write+0x180>
 8003a80:	68fb      	ldr	r3, [r7, #12]
 8003a82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a84:	781a      	ldrb	r2, [r3, #0]
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	611a      	str	r2, [r3, #16]
 8003a8c:	68fb      	ldr	r3, [r7, #12]
 8003a8e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a90:	1c5a      	adds	r2, r3, #1
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a96:	68fb      	ldr	r3, [r7, #12]
 8003a98:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a9a:	3b01      	subs	r3, #1
 8003a9c:	b29a      	uxth	r2, r3
 8003a9e:	68fb      	ldr	r3, [r7, #12]
 8003aa0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003aa6:	b29b      	uxth	r3, r3
 8003aa8:	3b01      	subs	r3, #1
 8003aaa:	b29a      	uxth	r2, r3
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d1aa      	bne.n	8003a0e <HAL_I2C_Mem_Write+0xde>
 8003ab8:	697a      	ldr	r2, [r7, #20]
 8003aba:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003abc:	68f8      	ldr	r0, [r7, #12]
 8003abe:	f000 fd85 	bl	80045cc <I2C_WaitOnBTFFlagUntilTimeout>
 8003ac2:	4603      	mov	r3, r0
 8003ac4:	2b00      	cmp	r3, #0
 8003ac6:	d00d      	beq.n	8003ae4 <HAL_I2C_Mem_Write+0x1b4>
 8003ac8:	68fb      	ldr	r3, [r7, #12]
 8003aca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003acc:	2b04      	cmp	r3, #4
 8003ace:	d107      	bne.n	8003ae0 <HAL_I2C_Mem_Write+0x1b0>
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	681a      	ldr	r2, [r3, #0]
 8003ad6:	68fb      	ldr	r3, [r7, #12]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003ade:	601a      	str	r2, [r3, #0]
 8003ae0:	2301      	movs	r3, #1
 8003ae2:	e016      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	681a      	ldr	r2, [r3, #0]
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003af2:	601a      	str	r2, [r3, #0]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	2220      	movs	r2, #32
 8003af8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	2200      	movs	r2, #0
 8003b00:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	2200      	movs	r2, #0
 8003b08:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b0c:	2300      	movs	r3, #0
 8003b0e:	e000      	b.n	8003b12 <HAL_I2C_Mem_Write+0x1e2>
 8003b10:	2302      	movs	r3, #2
 8003b12:	4618      	mov	r0, r3
 8003b14:	3718      	adds	r7, #24
 8003b16:	46bd      	mov	sp, r7
 8003b18:	bd80      	pop	{r7, pc}
 8003b1a:	bf00      	nop
 8003b1c:	00100002 	.word	0x00100002
 8003b20:	ffff0000 	.word	0xffff0000

08003b24 <HAL_I2C_Mem_Read>:
 8003b24:	b580      	push	{r7, lr}
 8003b26:	b08c      	sub	sp, #48	@ 0x30
 8003b28:	af02      	add	r7, sp, #8
 8003b2a:	60f8      	str	r0, [r7, #12]
 8003b2c:	4608      	mov	r0, r1
 8003b2e:	4611      	mov	r1, r2
 8003b30:	461a      	mov	r2, r3
 8003b32:	4603      	mov	r3, r0
 8003b34:	817b      	strh	r3, [r7, #10]
 8003b36:	460b      	mov	r3, r1
 8003b38:	813b      	strh	r3, [r7, #8]
 8003b3a:	4613      	mov	r3, r2
 8003b3c:	80fb      	strh	r3, [r7, #6]
 8003b3e:	2300      	movs	r3, #0
 8003b40:	623b      	str	r3, [r7, #32]
 8003b42:	f7ff f88d 	bl	8002c60 <HAL_GetTick>
 8003b46:	6278      	str	r0, [r7, #36]	@ 0x24
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003b4e:	b2db      	uxtb	r3, r3
 8003b50:	2b20      	cmp	r3, #32
 8003b52:	f040 8250 	bne.w	8003ff6 <HAL_I2C_Mem_Read+0x4d2>
 8003b56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b58:	9300      	str	r3, [sp, #0]
 8003b5a:	2319      	movs	r3, #25
 8003b5c:	2201      	movs	r2, #1
 8003b5e:	4982      	ldr	r1, [pc, #520]	@ (8003d68 <HAL_I2C_Mem_Read+0x244>)
 8003b60:	68f8      	ldr	r0, [r7, #12]
 8003b62:	f000 fbd1 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 8003b66:	4603      	mov	r3, r0
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d001      	beq.n	8003b70 <HAL_I2C_Mem_Read+0x4c>
 8003b6c:	2302      	movs	r3, #2
 8003b6e:	e243      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003b76:	2b01      	cmp	r3, #1
 8003b78:	d101      	bne.n	8003b7e <HAL_I2C_Mem_Read+0x5a>
 8003b7a:	2302      	movs	r3, #2
 8003b7c:	e23c      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	2201      	movs	r2, #1
 8003b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003b86:	68fb      	ldr	r3, [r7, #12]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	f003 0301 	and.w	r3, r3, #1
 8003b90:	2b01      	cmp	r3, #1
 8003b92:	d007      	beq.n	8003ba4 <HAL_I2C_Mem_Read+0x80>
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	681a      	ldr	r2, [r3, #0]
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f042 0201 	orr.w	r2, r2, #1
 8003ba2:	601a      	str	r2, [r3, #0]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	681a      	ldr	r2, [r3, #0]
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003bb2:	601a      	str	r2, [r3, #0]
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	2222      	movs	r2, #34	@ 0x22
 8003bb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	2240      	movs	r2, #64	@ 0x40
 8003bc0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	641a      	str	r2, [r3, #64]	@ 0x40
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003bce:	625a      	str	r2, [r3, #36]	@ 0x24
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 8003bd4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003bd6:	68fb      	ldr	r3, [r7, #12]
 8003bd8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bda:	b29a      	uxth	r2, r3
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003be0:	68fb      	ldr	r3, [r7, #12]
 8003be2:	4a62      	ldr	r2, [pc, #392]	@ (8003d6c <HAL_I2C_Mem_Read+0x248>)
 8003be4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003be6:	88f8      	ldrh	r0, [r7, #6]
 8003be8:	893a      	ldrh	r2, [r7, #8]
 8003bea:	8979      	ldrh	r1, [r7, #10]
 8003bec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003bee:	9301      	str	r3, [sp, #4]
 8003bf0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003bf2:	9300      	str	r3, [sp, #0]
 8003bf4:	4603      	mov	r3, r0
 8003bf6:	68f8      	ldr	r0, [r7, #12]
 8003bf8:	f000 fa9e 	bl	8004138 <I2C_RequestMemoryRead>
 8003bfc:	4603      	mov	r3, r0
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d001      	beq.n	8003c06 <HAL_I2C_Mem_Read+0xe2>
 8003c02:	2301      	movs	r3, #1
 8003c04:	e1f8      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003c06:	68fb      	ldr	r3, [r7, #12]
 8003c08:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d113      	bne.n	8003c36 <HAL_I2C_Mem_Read+0x112>
 8003c0e:	2300      	movs	r3, #0
 8003c10:	61fb      	str	r3, [r7, #28]
 8003c12:	68fb      	ldr	r3, [r7, #12]
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	695b      	ldr	r3, [r3, #20]
 8003c18:	61fb      	str	r3, [r7, #28]
 8003c1a:	68fb      	ldr	r3, [r7, #12]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	699b      	ldr	r3, [r3, #24]
 8003c20:	61fb      	str	r3, [r7, #28]
 8003c22:	69fb      	ldr	r3, [r7, #28]
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	681a      	ldr	r2, [r3, #0]
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c32:	601a      	str	r2, [r3, #0]
 8003c34:	e1cc      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c3a:	2b01      	cmp	r3, #1
 8003c3c:	d11e      	bne.n	8003c7c <HAL_I2C_Mem_Read+0x158>
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	681a      	ldr	r2, [r3, #0]
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	b672      	cpsid	i
 8003c50:	bf00      	nop
 8003c52:	2300      	movs	r3, #0
 8003c54:	61bb      	str	r3, [r7, #24]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	695b      	ldr	r3, [r3, #20]
 8003c5c:	61bb      	str	r3, [r7, #24]
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	699b      	ldr	r3, [r3, #24]
 8003c64:	61bb      	str	r3, [r7, #24]
 8003c66:	69bb      	ldr	r3, [r7, #24]
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	681a      	ldr	r2, [r3, #0]
 8003c6e:	68fb      	ldr	r3, [r7, #12]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003c76:	601a      	str	r2, [r3, #0]
 8003c78:	b662      	cpsie	i
 8003c7a:	e035      	b.n	8003ce8 <HAL_I2C_Mem_Read+0x1c4>
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c80:	2b02      	cmp	r3, #2
 8003c82:	d11e      	bne.n	8003cc2 <HAL_I2C_Mem_Read+0x19e>
 8003c84:	68fb      	ldr	r3, [r7, #12]
 8003c86:	681b      	ldr	r3, [r3, #0]
 8003c88:	681a      	ldr	r2, [r3, #0]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003c92:	601a      	str	r2, [r3, #0]
 8003c94:	b672      	cpsid	i
 8003c96:	bf00      	nop
 8003c98:	2300      	movs	r3, #0
 8003c9a:	617b      	str	r3, [r7, #20]
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	695b      	ldr	r3, [r3, #20]
 8003ca2:	617b      	str	r3, [r7, #20]
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	699b      	ldr	r3, [r3, #24]
 8003caa:	617b      	str	r3, [r7, #20]
 8003cac:	697b      	ldr	r3, [r7, #20]
 8003cae:	68fb      	ldr	r3, [r7, #12]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	681a      	ldr	r2, [r3, #0]
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003cbc:	601a      	str	r2, [r3, #0]
 8003cbe:	b662      	cpsie	i
 8003cc0:	e012      	b.n	8003ce8 <HAL_I2C_Mem_Read+0x1c4>
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	681a      	ldr	r2, [r3, #0]
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003cd0:	601a      	str	r2, [r3, #0]
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	613b      	str	r3, [r7, #16]
 8003cd6:	68fb      	ldr	r3, [r7, #12]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	695b      	ldr	r3, [r3, #20]
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	699b      	ldr	r3, [r3, #24]
 8003ce4:	613b      	str	r3, [r7, #16]
 8003ce6:	693b      	ldr	r3, [r7, #16]
 8003ce8:	e172      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003cee:	2b03      	cmp	r3, #3
 8003cf0:	f200 811f 	bhi.w	8003f32 <HAL_I2C_Mem_Read+0x40e>
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003cf8:	2b01      	cmp	r3, #1
 8003cfa:	d123      	bne.n	8003d44 <HAL_I2C_Mem_Read+0x220>
 8003cfc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003cfe:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003d00:	68f8      	ldr	r0, [r7, #12]
 8003d02:	f000 fcab 	bl	800465c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003d06:	4603      	mov	r3, r0
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d001      	beq.n	8003d10 <HAL_I2C_Mem_Read+0x1ec>
 8003d0c:	2301      	movs	r3, #1
 8003d0e:	e173      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003d10:	68fb      	ldr	r3, [r7, #12]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	691a      	ldr	r2, [r3, #16]
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d1a:	b2d2      	uxtb	r2, r2
 8003d1c:	701a      	strb	r2, [r3, #0]
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d22:	1c5a      	adds	r2, r3, #1
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	625a      	str	r2, [r3, #36]	@ 0x24
 8003d28:	68fb      	ldr	r3, [r7, #12]
 8003d2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d2c:	3b01      	subs	r3, #1
 8003d2e:	b29a      	uxth	r2, r3
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003d38:	b29b      	uxth	r3, r3
 8003d3a:	3b01      	subs	r3, #1
 8003d3c:	b29a      	uxth	r2, r3
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003d42:	e145      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d48:	2b02      	cmp	r3, #2
 8003d4a:	d152      	bne.n	8003df2 <HAL_I2C_Mem_Read+0x2ce>
 8003d4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003d4e:	9300      	str	r3, [sp, #0]
 8003d50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003d52:	2200      	movs	r2, #0
 8003d54:	4906      	ldr	r1, [pc, #24]	@ (8003d70 <HAL_I2C_Mem_Read+0x24c>)
 8003d56:	68f8      	ldr	r0, [r7, #12]
 8003d58:	f000 fad6 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 8003d5c:	4603      	mov	r3, r0
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d008      	beq.n	8003d74 <HAL_I2C_Mem_Read+0x250>
 8003d62:	2301      	movs	r3, #1
 8003d64:	e148      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003d66:	bf00      	nop
 8003d68:	00100002 	.word	0x00100002
 8003d6c:	ffff0000 	.word	0xffff0000
 8003d70:	00010004 	.word	0x00010004
 8003d74:	b672      	cpsid	i
 8003d76:	bf00      	nop
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	681a      	ldr	r2, [r3, #0]
 8003d7e:	68fb      	ldr	r3, [r7, #12]
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003d86:	601a      	str	r2, [r3, #0]
 8003d88:	68fb      	ldr	r3, [r7, #12]
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	691a      	ldr	r2, [r3, #16]
 8003d8e:	68fb      	ldr	r3, [r7, #12]
 8003d90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d92:	b2d2      	uxtb	r2, r2
 8003d94:	701a      	strb	r2, [r3, #0]
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d9a:	1c5a      	adds	r2, r3, #1
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003da4:	3b01      	subs	r3, #1
 8003da6:	b29a      	uxth	r2, r3
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003db0:	b29b      	uxth	r3, r3
 8003db2:	3b01      	subs	r3, #1
 8003db4:	b29a      	uxth	r2, r3
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003dba:	b662      	cpsie	i
 8003dbc:	bf00      	nop
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	691a      	ldr	r2, [r3, #16]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dc8:	b2d2      	uxtb	r2, r2
 8003dca:	701a      	strb	r2, [r3, #0]
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dd0:	1c5a      	adds	r2, r3, #1
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	625a      	str	r2, [r3, #36]	@ 0x24
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003dda:	3b01      	subs	r3, #1
 8003ddc:	b29a      	uxth	r2, r3
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003de6:	b29b      	uxth	r3, r3
 8003de8:	3b01      	subs	r3, #1
 8003dea:	b29a      	uxth	r2, r3
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003df0:	e0ee      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003df2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003df4:	9300      	str	r3, [sp, #0]
 8003df6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003df8:	2200      	movs	r2, #0
 8003dfa:	4981      	ldr	r1, [pc, #516]	@ (8004000 <HAL_I2C_Mem_Read+0x4dc>)
 8003dfc:	68f8      	ldr	r0, [r7, #12]
 8003dfe:	f000 fa83 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 8003e02:	4603      	mov	r3, r0
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d001      	beq.n	8003e0c <HAL_I2C_Mem_Read+0x2e8>
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e0f5      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	681a      	ldr	r2, [r3, #0]
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003e1a:	601a      	str	r2, [r3, #0]
 8003e1c:	b672      	cpsid	i
 8003e1e:	bf00      	nop
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	691a      	ldr	r2, [r3, #16]
 8003e26:	68fb      	ldr	r3, [r7, #12]
 8003e28:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e2a:	b2d2      	uxtb	r2, r2
 8003e2c:	701a      	strb	r2, [r3, #0]
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e32:	1c5a      	adds	r2, r3, #1
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	625a      	str	r2, [r3, #36]	@ 0x24
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003e3c:	3b01      	subs	r3, #1
 8003e3e:	b29a      	uxth	r2, r3
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003e48:	b29b      	uxth	r3, r3
 8003e4a:	3b01      	subs	r3, #1
 8003e4c:	b29a      	uxth	r2, r3
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003e52:	4b6c      	ldr	r3, [pc, #432]	@ (8004004 <HAL_I2C_Mem_Read+0x4e0>)
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	08db      	lsrs	r3, r3, #3
 8003e58:	4a6b      	ldr	r2, [pc, #428]	@ (8004008 <HAL_I2C_Mem_Read+0x4e4>)
 8003e5a:	fba2 2303 	umull	r2, r3, r2, r3
 8003e5e:	0a1a      	lsrs	r2, r3, #8
 8003e60:	4613      	mov	r3, r2
 8003e62:	009b      	lsls	r3, r3, #2
 8003e64:	4413      	add	r3, r2
 8003e66:	00da      	lsls	r2, r3, #3
 8003e68:	1ad3      	subs	r3, r2, r3
 8003e6a:	623b      	str	r3, [r7, #32]
 8003e6c:	6a3b      	ldr	r3, [r7, #32]
 8003e6e:	3b01      	subs	r3, #1
 8003e70:	623b      	str	r3, [r7, #32]
 8003e72:	6a3b      	ldr	r3, [r7, #32]
 8003e74:	2b00      	cmp	r3, #0
 8003e76:	d118      	bne.n	8003eaa <HAL_I2C_Mem_Read+0x386>
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	2200      	movs	r2, #0
 8003e7c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	2220      	movs	r2, #32
 8003e82:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003e86:	68fb      	ldr	r3, [r7, #12]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003e92:	f043 0220 	orr.w	r2, r3, #32
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	641a      	str	r2, [r3, #64]	@ 0x40
 8003e9a:	b662      	cpsie	i
 8003e9c:	bf00      	nop
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	2200      	movs	r2, #0
 8003ea2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ea6:	2301      	movs	r3, #1
 8003ea8:	e0a6      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	695b      	ldr	r3, [r3, #20]
 8003eb0:	f003 0304 	and.w	r3, r3, #4
 8003eb4:	2b04      	cmp	r3, #4
 8003eb6:	d1d9      	bne.n	8003e6c <HAL_I2C_Mem_Read+0x348>
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	681a      	ldr	r2, [r3, #0]
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003ec6:	601a      	str	r2, [r3, #0]
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	691a      	ldr	r2, [r3, #16]
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ed2:	b2d2      	uxtb	r2, r2
 8003ed4:	701a      	strb	r2, [r3, #0]
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003eda:	1c5a      	adds	r2, r3, #1
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	625a      	str	r2, [r3, #36]	@ 0x24
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ee4:	3b01      	subs	r3, #1
 8003ee6:	b29a      	uxth	r2, r3
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003ef0:	b29b      	uxth	r3, r3
 8003ef2:	3b01      	subs	r3, #1
 8003ef4:	b29a      	uxth	r2, r3
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003efa:	b662      	cpsie	i
 8003efc:	bf00      	nop
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	691a      	ldr	r2, [r3, #16]
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f08:	b2d2      	uxtb	r2, r2
 8003f0a:	701a      	strb	r2, [r3, #0]
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f10:	1c5a      	adds	r2, r3, #1
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	625a      	str	r2, [r3, #36]	@ 0x24
 8003f16:	68fb      	ldr	r3, [r7, #12]
 8003f18:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003f1a:	3b01      	subs	r3, #1
 8003f1c:	b29a      	uxth	r2, r3
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003f22:	68fb      	ldr	r3, [r7, #12]
 8003f24:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003f26:	b29b      	uxth	r3, r3
 8003f28:	3b01      	subs	r3, #1
 8003f2a:	b29a      	uxth	r2, r3
 8003f2c:	68fb      	ldr	r3, [r7, #12]
 8003f2e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003f30:	e04e      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003f32:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003f34:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8003f36:	68f8      	ldr	r0, [r7, #12]
 8003f38:	f000 fb90 	bl	800465c <I2C_WaitOnRXNEFlagUntilTimeout>
 8003f3c:	4603      	mov	r3, r0
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d001      	beq.n	8003f46 <HAL_I2C_Mem_Read+0x422>
 8003f42:	2301      	movs	r3, #1
 8003f44:	e058      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	691a      	ldr	r2, [r3, #16]
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f50:	b2d2      	uxtb	r2, r2
 8003f52:	701a      	strb	r2, [r3, #0]
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f58:	1c5a      	adds	r2, r3, #1
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	625a      	str	r2, [r3, #36]	@ 0x24
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003f62:	3b01      	subs	r3, #1
 8003f64:	b29a      	uxth	r2, r3
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003f6a:	68fb      	ldr	r3, [r7, #12]
 8003f6c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003f6e:	b29b      	uxth	r3, r3
 8003f70:	3b01      	subs	r3, #1
 8003f72:	b29a      	uxth	r2, r3
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	695b      	ldr	r3, [r3, #20]
 8003f7e:	f003 0304 	and.w	r3, r3, #4
 8003f82:	2b04      	cmp	r3, #4
 8003f84:	d124      	bne.n	8003fd0 <HAL_I2C_Mem_Read+0x4ac>
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003f8a:	2b03      	cmp	r3, #3
 8003f8c:	d107      	bne.n	8003f9e <HAL_I2C_Mem_Read+0x47a>
 8003f8e:	68fb      	ldr	r3, [r7, #12]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	681a      	ldr	r2, [r3, #0]
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003f9c:	601a      	str	r2, [r3, #0]
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	691a      	ldr	r2, [r3, #16]
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fa8:	b2d2      	uxtb	r2, r2
 8003faa:	701a      	strb	r2, [r3, #0]
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fb0:	1c5a      	adds	r2, r3, #1
 8003fb2:	68fb      	ldr	r3, [r7, #12]
 8003fb4:	625a      	str	r2, [r3, #36]	@ 0x24
 8003fb6:	68fb      	ldr	r3, [r7, #12]
 8003fb8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003fba:	3b01      	subs	r3, #1
 8003fbc:	b29a      	uxth	r2, r3
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003fc6:	b29b      	uxth	r3, r3
 8003fc8:	3b01      	subs	r3, #1
 8003fca:	b29a      	uxth	r2, r3
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	f47f ae88 	bne.w	8003cea <HAL_I2C_Mem_Read+0x1c6>
 8003fda:	68fb      	ldr	r3, [r7, #12]
 8003fdc:	2220      	movs	r2, #32
 8003fde:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003fe2:	68fb      	ldr	r3, [r7, #12]
 8003fe4:	2200      	movs	r2, #0
 8003fe6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	2200      	movs	r2, #0
 8003fee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003ff2:	2300      	movs	r3, #0
 8003ff4:	e000      	b.n	8003ff8 <HAL_I2C_Mem_Read+0x4d4>
 8003ff6:	2302      	movs	r3, #2
 8003ff8:	4618      	mov	r0, r3
 8003ffa:	3728      	adds	r7, #40	@ 0x28
 8003ffc:	46bd      	mov	sp, r7
 8003ffe:	bd80      	pop	{r7, pc}
 8004000:	00010004 	.word	0x00010004
 8004004:	20000008 	.word	0x20000008
 8004008:	14f8b589 	.word	0x14f8b589

0800400c <I2C_RequestMemoryWrite>:
 800400c:	b580      	push	{r7, lr}
 800400e:	b088      	sub	sp, #32
 8004010:	af02      	add	r7, sp, #8
 8004012:	60f8      	str	r0, [r7, #12]
 8004014:	4608      	mov	r0, r1
 8004016:	4611      	mov	r1, r2
 8004018:	461a      	mov	r2, r3
 800401a:	4603      	mov	r3, r0
 800401c:	817b      	strh	r3, [r7, #10]
 800401e:	460b      	mov	r3, r1
 8004020:	813b      	strh	r3, [r7, #8]
 8004022:	4613      	mov	r3, r2
 8004024:	80fb      	strh	r3, [r7, #6]
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	681a      	ldr	r2, [r3, #0]
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004034:	601a      	str	r2, [r3, #0]
 8004036:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004038:	9300      	str	r3, [sp, #0]
 800403a:	6a3b      	ldr	r3, [r7, #32]
 800403c:	2200      	movs	r2, #0
 800403e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004042:	68f8      	ldr	r0, [r7, #12]
 8004044:	f000 f960 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 8004048:	4603      	mov	r3, r0
 800404a:	2b00      	cmp	r3, #0
 800404c:	d00d      	beq.n	800406a <I2C_RequestMemoryWrite+0x5e>
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004058:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800405c:	d103      	bne.n	8004066 <I2C_RequestMemoryWrite+0x5a>
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004064:	641a      	str	r2, [r3, #64]	@ 0x40
 8004066:	2303      	movs	r3, #3
 8004068:	e05f      	b.n	800412a <I2C_RequestMemoryWrite+0x11e>
 800406a:	897b      	ldrh	r3, [r7, #10]
 800406c:	b2db      	uxtb	r3, r3
 800406e:	461a      	mov	r2, r3
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004078:	611a      	str	r2, [r3, #16]
 800407a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800407c:	6a3a      	ldr	r2, [r7, #32]
 800407e:	492d      	ldr	r1, [pc, #180]	@ (8004134 <I2C_RequestMemoryWrite+0x128>)
 8004080:	68f8      	ldr	r0, [r7, #12]
 8004082:	f000 f9bb 	bl	80043fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004086:	4603      	mov	r3, r0
 8004088:	2b00      	cmp	r3, #0
 800408a:	d001      	beq.n	8004090 <I2C_RequestMemoryWrite+0x84>
 800408c:	2301      	movs	r3, #1
 800408e:	e04c      	b.n	800412a <I2C_RequestMemoryWrite+0x11e>
 8004090:	2300      	movs	r3, #0
 8004092:	617b      	str	r3, [r7, #20]
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	695b      	ldr	r3, [r3, #20]
 800409a:	617b      	str	r3, [r7, #20]
 800409c:	68fb      	ldr	r3, [r7, #12]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	699b      	ldr	r3, [r3, #24]
 80040a2:	617b      	str	r3, [r7, #20]
 80040a4:	697b      	ldr	r3, [r7, #20]
 80040a6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040a8:	6a39      	ldr	r1, [r7, #32]
 80040aa:	68f8      	ldr	r0, [r7, #12]
 80040ac:	f000 fa46 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 80040b0:	4603      	mov	r3, r0
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d00d      	beq.n	80040d2 <I2C_RequestMemoryWrite+0xc6>
 80040b6:	68fb      	ldr	r3, [r7, #12]
 80040b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040ba:	2b04      	cmp	r3, #4
 80040bc:	d107      	bne.n	80040ce <I2C_RequestMemoryWrite+0xc2>
 80040be:	68fb      	ldr	r3, [r7, #12]
 80040c0:	681b      	ldr	r3, [r3, #0]
 80040c2:	681a      	ldr	r2, [r3, #0]
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80040cc:	601a      	str	r2, [r3, #0]
 80040ce:	2301      	movs	r3, #1
 80040d0:	e02b      	b.n	800412a <I2C_RequestMemoryWrite+0x11e>
 80040d2:	88fb      	ldrh	r3, [r7, #6]
 80040d4:	2b01      	cmp	r3, #1
 80040d6:	d105      	bne.n	80040e4 <I2C_RequestMemoryWrite+0xd8>
 80040d8:	893b      	ldrh	r3, [r7, #8]
 80040da:	b2da      	uxtb	r2, r3
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	611a      	str	r2, [r3, #16]
 80040e2:	e021      	b.n	8004128 <I2C_RequestMemoryWrite+0x11c>
 80040e4:	893b      	ldrh	r3, [r7, #8]
 80040e6:	0a1b      	lsrs	r3, r3, #8
 80040e8:	b29b      	uxth	r3, r3
 80040ea:	b2da      	uxtb	r2, r3
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	611a      	str	r2, [r3, #16]
 80040f2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80040f4:	6a39      	ldr	r1, [r7, #32]
 80040f6:	68f8      	ldr	r0, [r7, #12]
 80040f8:	f000 fa20 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 80040fc:	4603      	mov	r3, r0
 80040fe:	2b00      	cmp	r3, #0
 8004100:	d00d      	beq.n	800411e <I2C_RequestMemoryWrite+0x112>
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004106:	2b04      	cmp	r3, #4
 8004108:	d107      	bne.n	800411a <I2C_RequestMemoryWrite+0x10e>
 800410a:	68fb      	ldr	r3, [r7, #12]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	681a      	ldr	r2, [r3, #0]
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	681b      	ldr	r3, [r3, #0]
 8004114:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004118:	601a      	str	r2, [r3, #0]
 800411a:	2301      	movs	r3, #1
 800411c:	e005      	b.n	800412a <I2C_RequestMemoryWrite+0x11e>
 800411e:	893b      	ldrh	r3, [r7, #8]
 8004120:	b2da      	uxtb	r2, r3
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	611a      	str	r2, [r3, #16]
 8004128:	2300      	movs	r3, #0
 800412a:	4618      	mov	r0, r3
 800412c:	3718      	adds	r7, #24
 800412e:	46bd      	mov	sp, r7
 8004130:	bd80      	pop	{r7, pc}
 8004132:	bf00      	nop
 8004134:	00010002 	.word	0x00010002

08004138 <I2C_RequestMemoryRead>:
 8004138:	b580      	push	{r7, lr}
 800413a:	b088      	sub	sp, #32
 800413c:	af02      	add	r7, sp, #8
 800413e:	60f8      	str	r0, [r7, #12]
 8004140:	4608      	mov	r0, r1
 8004142:	4611      	mov	r1, r2
 8004144:	461a      	mov	r2, r3
 8004146:	4603      	mov	r3, r0
 8004148:	817b      	strh	r3, [r7, #10]
 800414a:	460b      	mov	r3, r1
 800414c:	813b      	strh	r3, [r7, #8]
 800414e:	4613      	mov	r3, r2
 8004150:	80fb      	strh	r3, [r7, #6]
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	681a      	ldr	r2, [r3, #0]
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004160:	601a      	str	r2, [r3, #0]
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	681a      	ldr	r2, [r3, #0]
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004170:	601a      	str	r2, [r3, #0]
 8004172:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004174:	9300      	str	r3, [sp, #0]
 8004176:	6a3b      	ldr	r3, [r7, #32]
 8004178:	2200      	movs	r2, #0
 800417a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800417e:	68f8      	ldr	r0, [r7, #12]
 8004180:	f000 f8c2 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 8004184:	4603      	mov	r3, r0
 8004186:	2b00      	cmp	r3, #0
 8004188:	d00d      	beq.n	80041a6 <I2C_RequestMemoryRead+0x6e>
 800418a:	68fb      	ldr	r3, [r7, #12]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004194:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004198:	d103      	bne.n	80041a2 <I2C_RequestMemoryRead+0x6a>
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80041a0:	641a      	str	r2, [r3, #64]	@ 0x40
 80041a2:	2303      	movs	r3, #3
 80041a4:	e0aa      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 80041a6:	897b      	ldrh	r3, [r7, #10]
 80041a8:	b2db      	uxtb	r3, r3
 80041aa:	461a      	mov	r2, r3
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80041b4:	611a      	str	r2, [r3, #16]
 80041b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041b8:	6a3a      	ldr	r2, [r7, #32]
 80041ba:	4952      	ldr	r1, [pc, #328]	@ (8004304 <I2C_RequestMemoryRead+0x1cc>)
 80041bc:	68f8      	ldr	r0, [r7, #12]
 80041be:	f000 f91d 	bl	80043fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80041c2:	4603      	mov	r3, r0
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d001      	beq.n	80041cc <I2C_RequestMemoryRead+0x94>
 80041c8:	2301      	movs	r3, #1
 80041ca:	e097      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 80041cc:	2300      	movs	r3, #0
 80041ce:	617b      	str	r3, [r7, #20]
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	695b      	ldr	r3, [r3, #20]
 80041d6:	617b      	str	r3, [r7, #20]
 80041d8:	68fb      	ldr	r3, [r7, #12]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	699b      	ldr	r3, [r3, #24]
 80041de:	617b      	str	r3, [r7, #20]
 80041e0:	697b      	ldr	r3, [r7, #20]
 80041e2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80041e4:	6a39      	ldr	r1, [r7, #32]
 80041e6:	68f8      	ldr	r0, [r7, #12]
 80041e8:	f000 f9a8 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 80041ec:	4603      	mov	r3, r0
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d00d      	beq.n	800420e <I2C_RequestMemoryRead+0xd6>
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80041f6:	2b04      	cmp	r3, #4
 80041f8:	d107      	bne.n	800420a <I2C_RequestMemoryRead+0xd2>
 80041fa:	68fb      	ldr	r3, [r7, #12]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	681a      	ldr	r2, [r3, #0]
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004208:	601a      	str	r2, [r3, #0]
 800420a:	2301      	movs	r3, #1
 800420c:	e076      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 800420e:	88fb      	ldrh	r3, [r7, #6]
 8004210:	2b01      	cmp	r3, #1
 8004212:	d105      	bne.n	8004220 <I2C_RequestMemoryRead+0xe8>
 8004214:	893b      	ldrh	r3, [r7, #8]
 8004216:	b2da      	uxtb	r2, r3
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	611a      	str	r2, [r3, #16]
 800421e:	e021      	b.n	8004264 <I2C_RequestMemoryRead+0x12c>
 8004220:	893b      	ldrh	r3, [r7, #8]
 8004222:	0a1b      	lsrs	r3, r3, #8
 8004224:	b29b      	uxth	r3, r3
 8004226:	b2da      	uxtb	r2, r3
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	611a      	str	r2, [r3, #16]
 800422e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004230:	6a39      	ldr	r1, [r7, #32]
 8004232:	68f8      	ldr	r0, [r7, #12]
 8004234:	f000 f982 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 8004238:	4603      	mov	r3, r0
 800423a:	2b00      	cmp	r3, #0
 800423c:	d00d      	beq.n	800425a <I2C_RequestMemoryRead+0x122>
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004242:	2b04      	cmp	r3, #4
 8004244:	d107      	bne.n	8004256 <I2C_RequestMemoryRead+0x11e>
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	681a      	ldr	r2, [r3, #0]
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004254:	601a      	str	r2, [r3, #0]
 8004256:	2301      	movs	r3, #1
 8004258:	e050      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 800425a:	893b      	ldrh	r3, [r7, #8]
 800425c:	b2da      	uxtb	r2, r3
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	611a      	str	r2, [r3, #16]
 8004264:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004266:	6a39      	ldr	r1, [r7, #32]
 8004268:	68f8      	ldr	r0, [r7, #12]
 800426a:	f000 f967 	bl	800453c <I2C_WaitOnTXEFlagUntilTimeout>
 800426e:	4603      	mov	r3, r0
 8004270:	2b00      	cmp	r3, #0
 8004272:	d00d      	beq.n	8004290 <I2C_RequestMemoryRead+0x158>
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004278:	2b04      	cmp	r3, #4
 800427a:	d107      	bne.n	800428c <I2C_RequestMemoryRead+0x154>
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	681a      	ldr	r2, [r3, #0]
 8004282:	68fb      	ldr	r3, [r7, #12]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800428a:	601a      	str	r2, [r3, #0]
 800428c:	2301      	movs	r3, #1
 800428e:	e035      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	681a      	ldr	r2, [r3, #0]
 8004296:	68fb      	ldr	r3, [r7, #12]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800429e:	601a      	str	r2, [r3, #0]
 80042a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042a2:	9300      	str	r3, [sp, #0]
 80042a4:	6a3b      	ldr	r3, [r7, #32]
 80042a6:	2200      	movs	r2, #0
 80042a8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80042ac:	68f8      	ldr	r0, [r7, #12]
 80042ae:	f000 f82b 	bl	8004308 <I2C_WaitOnFlagUntilTimeout>
 80042b2:	4603      	mov	r3, r0
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d00d      	beq.n	80042d4 <I2C_RequestMemoryRead+0x19c>
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80042c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80042c6:	d103      	bne.n	80042d0 <I2C_RequestMemoryRead+0x198>
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80042ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80042d0:	2303      	movs	r3, #3
 80042d2:	e013      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 80042d4:	897b      	ldrh	r3, [r7, #10]
 80042d6:	b2db      	uxtb	r3, r3
 80042d8:	f043 0301 	orr.w	r3, r3, #1
 80042dc:	b2da      	uxtb	r2, r3
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	611a      	str	r2, [r3, #16]
 80042e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80042e6:	6a3a      	ldr	r2, [r7, #32]
 80042e8:	4906      	ldr	r1, [pc, #24]	@ (8004304 <I2C_RequestMemoryRead+0x1cc>)
 80042ea:	68f8      	ldr	r0, [r7, #12]
 80042ec:	f000 f886 	bl	80043fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80042f0:	4603      	mov	r3, r0
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d001      	beq.n	80042fa <I2C_RequestMemoryRead+0x1c2>
 80042f6:	2301      	movs	r3, #1
 80042f8:	e000      	b.n	80042fc <I2C_RequestMemoryRead+0x1c4>
 80042fa:	2300      	movs	r3, #0
 80042fc:	4618      	mov	r0, r3
 80042fe:	3718      	adds	r7, #24
 8004300:	46bd      	mov	sp, r7
 8004302:	bd80      	pop	{r7, pc}
 8004304:	00010002 	.word	0x00010002

08004308 <I2C_WaitOnFlagUntilTimeout>:
 8004308:	b580      	push	{r7, lr}
 800430a:	b084      	sub	sp, #16
 800430c:	af00      	add	r7, sp, #0
 800430e:	60f8      	str	r0, [r7, #12]
 8004310:	60b9      	str	r1, [r7, #8]
 8004312:	603b      	str	r3, [r7, #0]
 8004314:	4613      	mov	r3, r2
 8004316:	71fb      	strb	r3, [r7, #7]
 8004318:	e048      	b.n	80043ac <I2C_WaitOnFlagUntilTimeout+0xa4>
 800431a:	683b      	ldr	r3, [r7, #0]
 800431c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004320:	d044      	beq.n	80043ac <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004322:	f7fe fc9d 	bl	8002c60 <HAL_GetTick>
 8004326:	4602      	mov	r2, r0
 8004328:	69bb      	ldr	r3, [r7, #24]
 800432a:	1ad3      	subs	r3, r2, r3
 800432c:	683a      	ldr	r2, [r7, #0]
 800432e:	429a      	cmp	r2, r3
 8004330:	d302      	bcc.n	8004338 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004332:	683b      	ldr	r3, [r7, #0]
 8004334:	2b00      	cmp	r3, #0
 8004336:	d139      	bne.n	80043ac <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004338:	68bb      	ldr	r3, [r7, #8]
 800433a:	0c1b      	lsrs	r3, r3, #16
 800433c:	b2db      	uxtb	r3, r3
 800433e:	2b01      	cmp	r3, #1
 8004340:	d10d      	bne.n	800435e <I2C_WaitOnFlagUntilTimeout+0x56>
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	695b      	ldr	r3, [r3, #20]
 8004348:	43da      	mvns	r2, r3
 800434a:	68bb      	ldr	r3, [r7, #8]
 800434c:	4013      	ands	r3, r2
 800434e:	b29b      	uxth	r3, r3
 8004350:	2b00      	cmp	r3, #0
 8004352:	bf0c      	ite	eq
 8004354:	2301      	moveq	r3, #1
 8004356:	2300      	movne	r3, #0
 8004358:	b2db      	uxtb	r3, r3
 800435a:	461a      	mov	r2, r3
 800435c:	e00c      	b.n	8004378 <I2C_WaitOnFlagUntilTimeout+0x70>
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	699b      	ldr	r3, [r3, #24]
 8004364:	43da      	mvns	r2, r3
 8004366:	68bb      	ldr	r3, [r7, #8]
 8004368:	4013      	ands	r3, r2
 800436a:	b29b      	uxth	r3, r3
 800436c:	2b00      	cmp	r3, #0
 800436e:	bf0c      	ite	eq
 8004370:	2301      	moveq	r3, #1
 8004372:	2300      	movne	r3, #0
 8004374:	b2db      	uxtb	r3, r3
 8004376:	461a      	mov	r2, r3
 8004378:	79fb      	ldrb	r3, [r7, #7]
 800437a:	429a      	cmp	r2, r3
 800437c:	d116      	bne.n	80043ac <I2C_WaitOnFlagUntilTimeout+0xa4>
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	2200      	movs	r2, #0
 8004382:	631a      	str	r2, [r3, #48]	@ 0x30
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	2220      	movs	r2, #32
 8004388:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	2200      	movs	r2, #0
 8004390:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004398:	f043 0220 	orr.w	r2, r3, #32
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	641a      	str	r2, [r3, #64]	@ 0x40
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	2200      	movs	r2, #0
 80043a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80043a8:	2301      	movs	r3, #1
 80043aa:	e023      	b.n	80043f4 <I2C_WaitOnFlagUntilTimeout+0xec>
 80043ac:	68bb      	ldr	r3, [r7, #8]
 80043ae:	0c1b      	lsrs	r3, r3, #16
 80043b0:	b2db      	uxtb	r3, r3
 80043b2:	2b01      	cmp	r3, #1
 80043b4:	d10d      	bne.n	80043d2 <I2C_WaitOnFlagUntilTimeout+0xca>
 80043b6:	68fb      	ldr	r3, [r7, #12]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	695b      	ldr	r3, [r3, #20]
 80043bc:	43da      	mvns	r2, r3
 80043be:	68bb      	ldr	r3, [r7, #8]
 80043c0:	4013      	ands	r3, r2
 80043c2:	b29b      	uxth	r3, r3
 80043c4:	2b00      	cmp	r3, #0
 80043c6:	bf0c      	ite	eq
 80043c8:	2301      	moveq	r3, #1
 80043ca:	2300      	movne	r3, #0
 80043cc:	b2db      	uxtb	r3, r3
 80043ce:	461a      	mov	r2, r3
 80043d0:	e00c      	b.n	80043ec <I2C_WaitOnFlagUntilTimeout+0xe4>
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	699b      	ldr	r3, [r3, #24]
 80043d8:	43da      	mvns	r2, r3
 80043da:	68bb      	ldr	r3, [r7, #8]
 80043dc:	4013      	ands	r3, r2
 80043de:	b29b      	uxth	r3, r3
 80043e0:	2b00      	cmp	r3, #0
 80043e2:	bf0c      	ite	eq
 80043e4:	2301      	moveq	r3, #1
 80043e6:	2300      	movne	r3, #0
 80043e8:	b2db      	uxtb	r3, r3
 80043ea:	461a      	mov	r2, r3
 80043ec:	79fb      	ldrb	r3, [r7, #7]
 80043ee:	429a      	cmp	r2, r3
 80043f0:	d093      	beq.n	800431a <I2C_WaitOnFlagUntilTimeout+0x12>
 80043f2:	2300      	movs	r3, #0
 80043f4:	4618      	mov	r0, r3
 80043f6:	3710      	adds	r7, #16
 80043f8:	46bd      	mov	sp, r7
 80043fa:	bd80      	pop	{r7, pc}

080043fc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80043fc:	b580      	push	{r7, lr}
 80043fe:	b084      	sub	sp, #16
 8004400:	af00      	add	r7, sp, #0
 8004402:	60f8      	str	r0, [r7, #12]
 8004404:	60b9      	str	r1, [r7, #8]
 8004406:	607a      	str	r2, [r7, #4]
 8004408:	603b      	str	r3, [r7, #0]
 800440a:	e071      	b.n	80044f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	695b      	ldr	r3, [r3, #20]
 8004412:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004416:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800441a:	d123      	bne.n	8004464 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	681a      	ldr	r2, [r3, #0]
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800442a:	601a      	str	r2, [r3, #0]
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	681b      	ldr	r3, [r3, #0]
 8004430:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004434:	615a      	str	r2, [r3, #20]
 8004436:	68fb      	ldr	r3, [r7, #12]
 8004438:	2200      	movs	r2, #0
 800443a:	631a      	str	r2, [r3, #48]	@ 0x30
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	2220      	movs	r2, #32
 8004440:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	2200      	movs	r2, #0
 8004448:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800444c:	68fb      	ldr	r3, [r7, #12]
 800444e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004450:	f043 0204 	orr.w	r2, r3, #4
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	641a      	str	r2, [r3, #64]	@ 0x40
 8004458:	68fb      	ldr	r3, [r7, #12]
 800445a:	2200      	movs	r2, #0
 800445c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004460:	2301      	movs	r3, #1
 8004462:	e067      	b.n	8004534 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	f1b3 3fff 	cmp.w	r3, #4294967295
 800446a:	d041      	beq.n	80044f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800446c:	f7fe fbf8 	bl	8002c60 <HAL_GetTick>
 8004470:	4602      	mov	r2, r0
 8004472:	683b      	ldr	r3, [r7, #0]
 8004474:	1ad3      	subs	r3, r2, r3
 8004476:	687a      	ldr	r2, [r7, #4]
 8004478:	429a      	cmp	r2, r3
 800447a:	d302      	bcc.n	8004482 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	2b00      	cmp	r3, #0
 8004480:	d136      	bne.n	80044f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004482:	68bb      	ldr	r3, [r7, #8]
 8004484:	0c1b      	lsrs	r3, r3, #16
 8004486:	b2db      	uxtb	r3, r3
 8004488:	2b01      	cmp	r3, #1
 800448a:	d10c      	bne.n	80044a6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	695b      	ldr	r3, [r3, #20]
 8004492:	43da      	mvns	r2, r3
 8004494:	68bb      	ldr	r3, [r7, #8]
 8004496:	4013      	ands	r3, r2
 8004498:	b29b      	uxth	r3, r3
 800449a:	2b00      	cmp	r3, #0
 800449c:	bf14      	ite	ne
 800449e:	2301      	movne	r3, #1
 80044a0:	2300      	moveq	r3, #0
 80044a2:	b2db      	uxtb	r3, r3
 80044a4:	e00b      	b.n	80044be <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80044a6:	68fb      	ldr	r3, [r7, #12]
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	699b      	ldr	r3, [r3, #24]
 80044ac:	43da      	mvns	r2, r3
 80044ae:	68bb      	ldr	r3, [r7, #8]
 80044b0:	4013      	ands	r3, r2
 80044b2:	b29b      	uxth	r3, r3
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	bf14      	ite	ne
 80044b8:	2301      	movne	r3, #1
 80044ba:	2300      	moveq	r3, #0
 80044bc:	b2db      	uxtb	r3, r3
 80044be:	2b00      	cmp	r3, #0
 80044c0:	d016      	beq.n	80044f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80044c2:	68fb      	ldr	r3, [r7, #12]
 80044c4:	2200      	movs	r2, #0
 80044c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	2220      	movs	r2, #32
 80044cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	2200      	movs	r2, #0
 80044d4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044dc:	f043 0220 	orr.w	r2, r3, #32
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80044e4:	68fb      	ldr	r3, [r7, #12]
 80044e6:	2200      	movs	r2, #0
 80044e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80044ec:	2301      	movs	r3, #1
 80044ee:	e021      	b.n	8004534 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80044f0:	68bb      	ldr	r3, [r7, #8]
 80044f2:	0c1b      	lsrs	r3, r3, #16
 80044f4:	b2db      	uxtb	r3, r3
 80044f6:	2b01      	cmp	r3, #1
 80044f8:	d10c      	bne.n	8004514 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	695b      	ldr	r3, [r3, #20]
 8004500:	43da      	mvns	r2, r3
 8004502:	68bb      	ldr	r3, [r7, #8]
 8004504:	4013      	ands	r3, r2
 8004506:	b29b      	uxth	r3, r3
 8004508:	2b00      	cmp	r3, #0
 800450a:	bf14      	ite	ne
 800450c:	2301      	movne	r3, #1
 800450e:	2300      	moveq	r3, #0
 8004510:	b2db      	uxtb	r3, r3
 8004512:	e00b      	b.n	800452c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	699b      	ldr	r3, [r3, #24]
 800451a:	43da      	mvns	r2, r3
 800451c:	68bb      	ldr	r3, [r7, #8]
 800451e:	4013      	ands	r3, r2
 8004520:	b29b      	uxth	r3, r3
 8004522:	2b00      	cmp	r3, #0
 8004524:	bf14      	ite	ne
 8004526:	2301      	movne	r3, #1
 8004528:	2300      	moveq	r3, #0
 800452a:	b2db      	uxtb	r3, r3
 800452c:	2b00      	cmp	r3, #0
 800452e:	f47f af6d 	bne.w	800440c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8004532:	2300      	movs	r3, #0
 8004534:	4618      	mov	r0, r3
 8004536:	3710      	adds	r7, #16
 8004538:	46bd      	mov	sp, r7
 800453a:	bd80      	pop	{r7, pc}

0800453c <I2C_WaitOnTXEFlagUntilTimeout>:
 800453c:	b580      	push	{r7, lr}
 800453e:	b084      	sub	sp, #16
 8004540:	af00      	add	r7, sp, #0
 8004542:	60f8      	str	r0, [r7, #12]
 8004544:	60b9      	str	r1, [r7, #8]
 8004546:	607a      	str	r2, [r7, #4]
 8004548:	e034      	b.n	80045b4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800454a:	68f8      	ldr	r0, [r7, #12]
 800454c:	f000 f8e3 	bl	8004716 <I2C_IsAcknowledgeFailed>
 8004550:	4603      	mov	r3, r0
 8004552:	2b00      	cmp	r3, #0
 8004554:	d001      	beq.n	800455a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8004556:	2301      	movs	r3, #1
 8004558:	e034      	b.n	80045c4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800455a:	68bb      	ldr	r3, [r7, #8]
 800455c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004560:	d028      	beq.n	80045b4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004562:	f7fe fb7d 	bl	8002c60 <HAL_GetTick>
 8004566:	4602      	mov	r2, r0
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	1ad3      	subs	r3, r2, r3
 800456c:	68ba      	ldr	r2, [r7, #8]
 800456e:	429a      	cmp	r2, r3
 8004570:	d302      	bcc.n	8004578 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004572:	68bb      	ldr	r3, [r7, #8]
 8004574:	2b00      	cmp	r3, #0
 8004576:	d11d      	bne.n	80045b4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004578:	68fb      	ldr	r3, [r7, #12]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	695b      	ldr	r3, [r3, #20]
 800457e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004582:	2b80      	cmp	r3, #128	@ 0x80
 8004584:	d016      	beq.n	80045b4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	2200      	movs	r2, #0
 800458a:	631a      	str	r2, [r3, #48]	@ 0x30
 800458c:	68fb      	ldr	r3, [r7, #12]
 800458e:	2220      	movs	r2, #32
 8004590:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	2200      	movs	r2, #0
 8004598:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80045a0:	f043 0220 	orr.w	r2, r3, #32
 80045a4:	68fb      	ldr	r3, [r7, #12]
 80045a6:	641a      	str	r2, [r3, #64]	@ 0x40
 80045a8:	68fb      	ldr	r3, [r7, #12]
 80045aa:	2200      	movs	r2, #0
 80045ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80045b0:	2301      	movs	r3, #1
 80045b2:	e007      	b.n	80045c4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80045b4:	68fb      	ldr	r3, [r7, #12]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	695b      	ldr	r3, [r3, #20]
 80045ba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80045be:	2b80      	cmp	r3, #128	@ 0x80
 80045c0:	d1c3      	bne.n	800454a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80045c2:	2300      	movs	r3, #0
 80045c4:	4618      	mov	r0, r3
 80045c6:	3710      	adds	r7, #16
 80045c8:	46bd      	mov	sp, r7
 80045ca:	bd80      	pop	{r7, pc}

080045cc <I2C_WaitOnBTFFlagUntilTimeout>:
 80045cc:	b580      	push	{r7, lr}
 80045ce:	b084      	sub	sp, #16
 80045d0:	af00      	add	r7, sp, #0
 80045d2:	60f8      	str	r0, [r7, #12]
 80045d4:	60b9      	str	r1, [r7, #8]
 80045d6:	607a      	str	r2, [r7, #4]
 80045d8:	e034      	b.n	8004644 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80045da:	68f8      	ldr	r0, [r7, #12]
 80045dc:	f000 f89b 	bl	8004716 <I2C_IsAcknowledgeFailed>
 80045e0:	4603      	mov	r3, r0
 80045e2:	2b00      	cmp	r3, #0
 80045e4:	d001      	beq.n	80045ea <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 80045e6:	2301      	movs	r3, #1
 80045e8:	e034      	b.n	8004654 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80045ea:	68bb      	ldr	r3, [r7, #8]
 80045ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80045f0:	d028      	beq.n	8004644 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80045f2:	f7fe fb35 	bl	8002c60 <HAL_GetTick>
 80045f6:	4602      	mov	r2, r0
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	1ad3      	subs	r3, r2, r3
 80045fc:	68ba      	ldr	r2, [r7, #8]
 80045fe:	429a      	cmp	r2, r3
 8004600:	d302      	bcc.n	8004608 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004602:	68bb      	ldr	r3, [r7, #8]
 8004604:	2b00      	cmp	r3, #0
 8004606:	d11d      	bne.n	8004644 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004608:	68fb      	ldr	r3, [r7, #12]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	695b      	ldr	r3, [r3, #20]
 800460e:	f003 0304 	and.w	r3, r3, #4
 8004612:	2b04      	cmp	r3, #4
 8004614:	d016      	beq.n	8004644 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	2200      	movs	r2, #0
 800461a:	631a      	str	r2, [r3, #48]	@ 0x30
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	2220      	movs	r2, #32
 8004620:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	2200      	movs	r2, #0
 8004628:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004630:	f043 0220 	orr.w	r2, r3, #32
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	641a      	str	r2, [r3, #64]	@ 0x40
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	2200      	movs	r2, #0
 800463c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004640:	2301      	movs	r3, #1
 8004642:	e007      	b.n	8004654 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8004644:	68fb      	ldr	r3, [r7, #12]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	695b      	ldr	r3, [r3, #20]
 800464a:	f003 0304 	and.w	r3, r3, #4
 800464e:	2b04      	cmp	r3, #4
 8004650:	d1c3      	bne.n	80045da <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8004652:	2300      	movs	r3, #0
 8004654:	4618      	mov	r0, r3
 8004656:	3710      	adds	r7, #16
 8004658:	46bd      	mov	sp, r7
 800465a:	bd80      	pop	{r7, pc}

0800465c <I2C_WaitOnRXNEFlagUntilTimeout>:
 800465c:	b580      	push	{r7, lr}
 800465e:	b084      	sub	sp, #16
 8004660:	af00      	add	r7, sp, #0
 8004662:	60f8      	str	r0, [r7, #12]
 8004664:	60b9      	str	r1, [r7, #8]
 8004666:	607a      	str	r2, [r7, #4]
 8004668:	e049      	b.n	80046fe <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	695b      	ldr	r3, [r3, #20]
 8004670:	f003 0310 	and.w	r3, r3, #16
 8004674:	2b10      	cmp	r3, #16
 8004676:	d119      	bne.n	80046ac <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8004678:	68fb      	ldr	r3, [r7, #12]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	f06f 0210 	mvn.w	r2, #16
 8004680:	615a      	str	r2, [r3, #20]
 8004682:	68fb      	ldr	r3, [r7, #12]
 8004684:	2200      	movs	r2, #0
 8004686:	631a      	str	r2, [r3, #48]	@ 0x30
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	2220      	movs	r2, #32
 800468c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	2200      	movs	r2, #0
 8004694:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	641a      	str	r2, [r3, #64]	@ 0x40
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	2200      	movs	r2, #0
 80046a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046a8:	2301      	movs	r3, #1
 80046aa:	e030      	b.n	800470e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80046ac:	f7fe fad8 	bl	8002c60 <HAL_GetTick>
 80046b0:	4602      	mov	r2, r0
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	1ad3      	subs	r3, r2, r3
 80046b6:	68ba      	ldr	r2, [r7, #8]
 80046b8:	429a      	cmp	r2, r3
 80046ba:	d302      	bcc.n	80046c2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80046bc:	68bb      	ldr	r3, [r7, #8]
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d11d      	bne.n	80046fe <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	695b      	ldr	r3, [r3, #20]
 80046c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80046cc:	2b40      	cmp	r3, #64	@ 0x40
 80046ce:	d016      	beq.n	80046fe <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	2200      	movs	r2, #0
 80046d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	2220      	movs	r2, #32
 80046da:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	2200      	movs	r2, #0
 80046e2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046ea:	f043 0220 	orr.w	r2, r3, #32
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	641a      	str	r2, [r3, #64]	@ 0x40
 80046f2:	68fb      	ldr	r3, [r7, #12]
 80046f4:	2200      	movs	r2, #0
 80046f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80046fa:	2301      	movs	r3, #1
 80046fc:	e007      	b.n	800470e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	695b      	ldr	r3, [r3, #20]
 8004704:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004708:	2b40      	cmp	r3, #64	@ 0x40
 800470a:	d1ae      	bne.n	800466a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800470c:	2300      	movs	r3, #0
 800470e:	4618      	mov	r0, r3
 8004710:	3710      	adds	r7, #16
 8004712:	46bd      	mov	sp, r7
 8004714:	bd80      	pop	{r7, pc}

08004716 <I2C_IsAcknowledgeFailed>:
 8004716:	b480      	push	{r7}
 8004718:	b083      	sub	sp, #12
 800471a:	af00      	add	r7, sp, #0
 800471c:	6078      	str	r0, [r7, #4]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	695b      	ldr	r3, [r3, #20]
 8004724:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004728:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800472c:	d11b      	bne.n	8004766 <I2C_IsAcknowledgeFailed+0x50>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	681b      	ldr	r3, [r3, #0]
 8004732:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004736:	615a      	str	r2, [r3, #20]
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	2200      	movs	r2, #0
 800473c:	631a      	str	r2, [r3, #48]	@ 0x30
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	2220      	movs	r2, #32
 8004742:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	2200      	movs	r2, #0
 800474a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004752:	f043 0204 	orr.w	r2, r3, #4
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	641a      	str	r2, [r3, #64]	@ 0x40
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	2200      	movs	r2, #0
 800475e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004762:	2301      	movs	r3, #1
 8004764:	e000      	b.n	8004768 <I2C_IsAcknowledgeFailed+0x52>
 8004766:	2300      	movs	r3, #0
 8004768:	4618      	mov	r0, r3
 800476a:	370c      	adds	r7, #12
 800476c:	46bd      	mov	sp, r7
 800476e:	bc80      	pop	{r7}
 8004770:	4770      	bx	lr
	...

08004774 <HAL_RCC_OscConfig>:
 8004774:	b580      	push	{r7, lr}
 8004776:	b086      	sub	sp, #24
 8004778:	af00      	add	r7, sp, #0
 800477a:	6078      	str	r0, [r7, #4]
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	2b00      	cmp	r3, #0
 8004780:	d101      	bne.n	8004786 <HAL_RCC_OscConfig+0x12>
 8004782:	2301      	movs	r3, #1
 8004784:	e272      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004786:	687b      	ldr	r3, [r7, #4]
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	f003 0301 	and.w	r3, r3, #1
 800478e:	2b00      	cmp	r3, #0
 8004790:	f000 8087 	beq.w	80048a2 <HAL_RCC_OscConfig+0x12e>
 8004794:	4b92      	ldr	r3, [pc, #584]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004796:	685b      	ldr	r3, [r3, #4]
 8004798:	f003 030c 	and.w	r3, r3, #12
 800479c:	2b04      	cmp	r3, #4
 800479e:	d00c      	beq.n	80047ba <HAL_RCC_OscConfig+0x46>
 80047a0:	4b8f      	ldr	r3, [pc, #572]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047a2:	685b      	ldr	r3, [r3, #4]
 80047a4:	f003 030c 	and.w	r3, r3, #12
 80047a8:	2b08      	cmp	r3, #8
 80047aa:	d112      	bne.n	80047d2 <HAL_RCC_OscConfig+0x5e>
 80047ac:	4b8c      	ldr	r3, [pc, #560]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047ae:	685b      	ldr	r3, [r3, #4]
 80047b0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80047b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80047b8:	d10b      	bne.n	80047d2 <HAL_RCC_OscConfig+0x5e>
 80047ba:	4b89      	ldr	r3, [pc, #548]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d06c      	beq.n	80048a0 <HAL_RCC_OscConfig+0x12c>
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	685b      	ldr	r3, [r3, #4]
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d168      	bne.n	80048a0 <HAL_RCC_OscConfig+0x12c>
 80047ce:	2301      	movs	r3, #1
 80047d0:	e24c      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	685b      	ldr	r3, [r3, #4]
 80047d6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80047da:	d106      	bne.n	80047ea <HAL_RCC_OscConfig+0x76>
 80047dc:	4b80      	ldr	r3, [pc, #512]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	4a7f      	ldr	r2, [pc, #508]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047e2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80047e6:	6013      	str	r3, [r2, #0]
 80047e8:	e02e      	b.n	8004848 <HAL_RCC_OscConfig+0xd4>
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	2b00      	cmp	r3, #0
 80047f0:	d10c      	bne.n	800480c <HAL_RCC_OscConfig+0x98>
 80047f2:	4b7b      	ldr	r3, [pc, #492]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	4a7a      	ldr	r2, [pc, #488]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80047f8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80047fc:	6013      	str	r3, [r2, #0]
 80047fe:	4b78      	ldr	r3, [pc, #480]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	4a77      	ldr	r2, [pc, #476]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004804:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004808:	6013      	str	r3, [r2, #0]
 800480a:	e01d      	b.n	8004848 <HAL_RCC_OscConfig+0xd4>
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	685b      	ldr	r3, [r3, #4]
 8004810:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004814:	d10c      	bne.n	8004830 <HAL_RCC_OscConfig+0xbc>
 8004816:	4b72      	ldr	r3, [pc, #456]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	4a71      	ldr	r2, [pc, #452]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 800481c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004820:	6013      	str	r3, [r2, #0]
 8004822:	4b6f      	ldr	r3, [pc, #444]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	4a6e      	ldr	r2, [pc, #440]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004828:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800482c:	6013      	str	r3, [r2, #0]
 800482e:	e00b      	b.n	8004848 <HAL_RCC_OscConfig+0xd4>
 8004830:	4b6b      	ldr	r3, [pc, #428]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	4a6a      	ldr	r2, [pc, #424]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004836:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800483a:	6013      	str	r3, [r2, #0]
 800483c:	4b68      	ldr	r3, [pc, #416]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	4a67      	ldr	r2, [pc, #412]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004842:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004846:	6013      	str	r3, [r2, #0]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	685b      	ldr	r3, [r3, #4]
 800484c:	2b00      	cmp	r3, #0
 800484e:	d013      	beq.n	8004878 <HAL_RCC_OscConfig+0x104>
 8004850:	f7fe fa06 	bl	8002c60 <HAL_GetTick>
 8004854:	6138      	str	r0, [r7, #16]
 8004856:	e008      	b.n	800486a <HAL_RCC_OscConfig+0xf6>
 8004858:	f7fe fa02 	bl	8002c60 <HAL_GetTick>
 800485c:	4602      	mov	r2, r0
 800485e:	693b      	ldr	r3, [r7, #16]
 8004860:	1ad3      	subs	r3, r2, r3
 8004862:	2b64      	cmp	r3, #100	@ 0x64
 8004864:	d901      	bls.n	800486a <HAL_RCC_OscConfig+0xf6>
 8004866:	2303      	movs	r3, #3
 8004868:	e200      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 800486a:	4b5d      	ldr	r3, [pc, #372]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004872:	2b00      	cmp	r3, #0
 8004874:	d0f0      	beq.n	8004858 <HAL_RCC_OscConfig+0xe4>
 8004876:	e014      	b.n	80048a2 <HAL_RCC_OscConfig+0x12e>
 8004878:	f7fe f9f2 	bl	8002c60 <HAL_GetTick>
 800487c:	6138      	str	r0, [r7, #16]
 800487e:	e008      	b.n	8004892 <HAL_RCC_OscConfig+0x11e>
 8004880:	f7fe f9ee 	bl	8002c60 <HAL_GetTick>
 8004884:	4602      	mov	r2, r0
 8004886:	693b      	ldr	r3, [r7, #16]
 8004888:	1ad3      	subs	r3, r2, r3
 800488a:	2b64      	cmp	r3, #100	@ 0x64
 800488c:	d901      	bls.n	8004892 <HAL_RCC_OscConfig+0x11e>
 800488e:	2303      	movs	r3, #3
 8004890:	e1ec      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004892:	4b53      	ldr	r3, [pc, #332]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800489a:	2b00      	cmp	r3, #0
 800489c:	d1f0      	bne.n	8004880 <HAL_RCC_OscConfig+0x10c>
 800489e:	e000      	b.n	80048a2 <HAL_RCC_OscConfig+0x12e>
 80048a0:	bf00      	nop
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	f003 0302 	and.w	r3, r3, #2
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d063      	beq.n	8004976 <HAL_RCC_OscConfig+0x202>
 80048ae:	4b4c      	ldr	r3, [pc, #304]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048b0:	685b      	ldr	r3, [r3, #4]
 80048b2:	f003 030c 	and.w	r3, r3, #12
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d00b      	beq.n	80048d2 <HAL_RCC_OscConfig+0x15e>
 80048ba:	4b49      	ldr	r3, [pc, #292]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048bc:	685b      	ldr	r3, [r3, #4]
 80048be:	f003 030c 	and.w	r3, r3, #12
 80048c2:	2b08      	cmp	r3, #8
 80048c4:	d11c      	bne.n	8004900 <HAL_RCC_OscConfig+0x18c>
 80048c6:	4b46      	ldr	r3, [pc, #280]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048c8:	685b      	ldr	r3, [r3, #4]
 80048ca:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d116      	bne.n	8004900 <HAL_RCC_OscConfig+0x18c>
 80048d2:	4b43      	ldr	r3, [pc, #268]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	f003 0302 	and.w	r3, r3, #2
 80048da:	2b00      	cmp	r3, #0
 80048dc:	d005      	beq.n	80048ea <HAL_RCC_OscConfig+0x176>
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	691b      	ldr	r3, [r3, #16]
 80048e2:	2b01      	cmp	r3, #1
 80048e4:	d001      	beq.n	80048ea <HAL_RCC_OscConfig+0x176>
 80048e6:	2301      	movs	r3, #1
 80048e8:	e1c0      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 80048ea:	4b3d      	ldr	r3, [pc, #244]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	695b      	ldr	r3, [r3, #20]
 80048f6:	00db      	lsls	r3, r3, #3
 80048f8:	4939      	ldr	r1, [pc, #228]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80048fa:	4313      	orrs	r3, r2
 80048fc:	600b      	str	r3, [r1, #0]
 80048fe:	e03a      	b.n	8004976 <HAL_RCC_OscConfig+0x202>
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	691b      	ldr	r3, [r3, #16]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d020      	beq.n	800494a <HAL_RCC_OscConfig+0x1d6>
 8004908:	4b36      	ldr	r3, [pc, #216]	@ (80049e4 <HAL_RCC_OscConfig+0x270>)
 800490a:	2201      	movs	r2, #1
 800490c:	601a      	str	r2, [r3, #0]
 800490e:	f7fe f9a7 	bl	8002c60 <HAL_GetTick>
 8004912:	6138      	str	r0, [r7, #16]
 8004914:	e008      	b.n	8004928 <HAL_RCC_OscConfig+0x1b4>
 8004916:	f7fe f9a3 	bl	8002c60 <HAL_GetTick>
 800491a:	4602      	mov	r2, r0
 800491c:	693b      	ldr	r3, [r7, #16]
 800491e:	1ad3      	subs	r3, r2, r3
 8004920:	2b02      	cmp	r3, #2
 8004922:	d901      	bls.n	8004928 <HAL_RCC_OscConfig+0x1b4>
 8004924:	2303      	movs	r3, #3
 8004926:	e1a1      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004928:	4b2d      	ldr	r3, [pc, #180]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	f003 0302 	and.w	r3, r3, #2
 8004930:	2b00      	cmp	r3, #0
 8004932:	d0f0      	beq.n	8004916 <HAL_RCC_OscConfig+0x1a2>
 8004934:	4b2a      	ldr	r3, [pc, #168]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	695b      	ldr	r3, [r3, #20]
 8004940:	00db      	lsls	r3, r3, #3
 8004942:	4927      	ldr	r1, [pc, #156]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 8004944:	4313      	orrs	r3, r2
 8004946:	600b      	str	r3, [r1, #0]
 8004948:	e015      	b.n	8004976 <HAL_RCC_OscConfig+0x202>
 800494a:	4b26      	ldr	r3, [pc, #152]	@ (80049e4 <HAL_RCC_OscConfig+0x270>)
 800494c:	2200      	movs	r2, #0
 800494e:	601a      	str	r2, [r3, #0]
 8004950:	f7fe f986 	bl	8002c60 <HAL_GetTick>
 8004954:	6138      	str	r0, [r7, #16]
 8004956:	e008      	b.n	800496a <HAL_RCC_OscConfig+0x1f6>
 8004958:	f7fe f982 	bl	8002c60 <HAL_GetTick>
 800495c:	4602      	mov	r2, r0
 800495e:	693b      	ldr	r3, [r7, #16]
 8004960:	1ad3      	subs	r3, r2, r3
 8004962:	2b02      	cmp	r3, #2
 8004964:	d901      	bls.n	800496a <HAL_RCC_OscConfig+0x1f6>
 8004966:	2303      	movs	r3, #3
 8004968:	e180      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 800496a:	4b1d      	ldr	r3, [pc, #116]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	f003 0302 	and.w	r3, r3, #2
 8004972:	2b00      	cmp	r3, #0
 8004974:	d1f0      	bne.n	8004958 <HAL_RCC_OscConfig+0x1e4>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	f003 0308 	and.w	r3, r3, #8
 800497e:	2b00      	cmp	r3, #0
 8004980:	d03a      	beq.n	80049f8 <HAL_RCC_OscConfig+0x284>
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	699b      	ldr	r3, [r3, #24]
 8004986:	2b00      	cmp	r3, #0
 8004988:	d019      	beq.n	80049be <HAL_RCC_OscConfig+0x24a>
 800498a:	4b17      	ldr	r3, [pc, #92]	@ (80049e8 <HAL_RCC_OscConfig+0x274>)
 800498c:	2201      	movs	r2, #1
 800498e:	601a      	str	r2, [r3, #0]
 8004990:	f7fe f966 	bl	8002c60 <HAL_GetTick>
 8004994:	6138      	str	r0, [r7, #16]
 8004996:	e008      	b.n	80049aa <HAL_RCC_OscConfig+0x236>
 8004998:	f7fe f962 	bl	8002c60 <HAL_GetTick>
 800499c:	4602      	mov	r2, r0
 800499e:	693b      	ldr	r3, [r7, #16]
 80049a0:	1ad3      	subs	r3, r2, r3
 80049a2:	2b02      	cmp	r3, #2
 80049a4:	d901      	bls.n	80049aa <HAL_RCC_OscConfig+0x236>
 80049a6:	2303      	movs	r3, #3
 80049a8:	e160      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 80049aa:	4b0d      	ldr	r3, [pc, #52]	@ (80049e0 <HAL_RCC_OscConfig+0x26c>)
 80049ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049ae:	f003 0302 	and.w	r3, r3, #2
 80049b2:	2b00      	cmp	r3, #0
 80049b4:	d0f0      	beq.n	8004998 <HAL_RCC_OscConfig+0x224>
 80049b6:	2001      	movs	r0, #1
 80049b8:	f000 faba 	bl	8004f30 <RCC_Delay>
 80049bc:	e01c      	b.n	80049f8 <HAL_RCC_OscConfig+0x284>
 80049be:	4b0a      	ldr	r3, [pc, #40]	@ (80049e8 <HAL_RCC_OscConfig+0x274>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	601a      	str	r2, [r3, #0]
 80049c4:	f7fe f94c 	bl	8002c60 <HAL_GetTick>
 80049c8:	6138      	str	r0, [r7, #16]
 80049ca:	e00f      	b.n	80049ec <HAL_RCC_OscConfig+0x278>
 80049cc:	f7fe f948 	bl	8002c60 <HAL_GetTick>
 80049d0:	4602      	mov	r2, r0
 80049d2:	693b      	ldr	r3, [r7, #16]
 80049d4:	1ad3      	subs	r3, r2, r3
 80049d6:	2b02      	cmp	r3, #2
 80049d8:	d908      	bls.n	80049ec <HAL_RCC_OscConfig+0x278>
 80049da:	2303      	movs	r3, #3
 80049dc:	e146      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 80049de:	bf00      	nop
 80049e0:	40021000 	.word	0x40021000
 80049e4:	42420000 	.word	0x42420000
 80049e8:	42420480 	.word	0x42420480
 80049ec:	4b92      	ldr	r3, [pc, #584]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 80049ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049f0:	f003 0302 	and.w	r3, r3, #2
 80049f4:	2b00      	cmp	r3, #0
 80049f6:	d1e9      	bne.n	80049cc <HAL_RCC_OscConfig+0x258>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f003 0304 	and.w	r3, r3, #4
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	f000 80a6 	beq.w	8004b52 <HAL_RCC_OscConfig+0x3de>
 8004a06:	2300      	movs	r3, #0
 8004a08:	75fb      	strb	r3, [r7, #23]
 8004a0a:	4b8b      	ldr	r3, [pc, #556]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a0c:	69db      	ldr	r3, [r3, #28]
 8004a0e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d10d      	bne.n	8004a32 <HAL_RCC_OscConfig+0x2be>
 8004a16:	4b88      	ldr	r3, [pc, #544]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a18:	69db      	ldr	r3, [r3, #28]
 8004a1a:	4a87      	ldr	r2, [pc, #540]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a1c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004a20:	61d3      	str	r3, [r2, #28]
 8004a22:	4b85      	ldr	r3, [pc, #532]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a24:	69db      	ldr	r3, [r3, #28]
 8004a26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004a2a:	60bb      	str	r3, [r7, #8]
 8004a2c:	68bb      	ldr	r3, [r7, #8]
 8004a2e:	2301      	movs	r3, #1
 8004a30:	75fb      	strb	r3, [r7, #23]
 8004a32:	4b82      	ldr	r3, [pc, #520]	@ (8004c3c <HAL_RCC_OscConfig+0x4c8>)
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	d118      	bne.n	8004a70 <HAL_RCC_OscConfig+0x2fc>
 8004a3e:	4b7f      	ldr	r3, [pc, #508]	@ (8004c3c <HAL_RCC_OscConfig+0x4c8>)
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	4a7e      	ldr	r2, [pc, #504]	@ (8004c3c <HAL_RCC_OscConfig+0x4c8>)
 8004a44:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004a48:	6013      	str	r3, [r2, #0]
 8004a4a:	f7fe f909 	bl	8002c60 <HAL_GetTick>
 8004a4e:	6138      	str	r0, [r7, #16]
 8004a50:	e008      	b.n	8004a64 <HAL_RCC_OscConfig+0x2f0>
 8004a52:	f7fe f905 	bl	8002c60 <HAL_GetTick>
 8004a56:	4602      	mov	r2, r0
 8004a58:	693b      	ldr	r3, [r7, #16]
 8004a5a:	1ad3      	subs	r3, r2, r3
 8004a5c:	2b64      	cmp	r3, #100	@ 0x64
 8004a5e:	d901      	bls.n	8004a64 <HAL_RCC_OscConfig+0x2f0>
 8004a60:	2303      	movs	r3, #3
 8004a62:	e103      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004a64:	4b75      	ldr	r3, [pc, #468]	@ (8004c3c <HAL_RCC_OscConfig+0x4c8>)
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	d0f0      	beq.n	8004a52 <HAL_RCC_OscConfig+0x2de>
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	68db      	ldr	r3, [r3, #12]
 8004a74:	2b01      	cmp	r3, #1
 8004a76:	d106      	bne.n	8004a86 <HAL_RCC_OscConfig+0x312>
 8004a78:	4b6f      	ldr	r3, [pc, #444]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a7a:	6a1b      	ldr	r3, [r3, #32]
 8004a7c:	4a6e      	ldr	r2, [pc, #440]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a7e:	f043 0301 	orr.w	r3, r3, #1
 8004a82:	6213      	str	r3, [r2, #32]
 8004a84:	e02d      	b.n	8004ae2 <HAL_RCC_OscConfig+0x36e>
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	68db      	ldr	r3, [r3, #12]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	d10c      	bne.n	8004aa8 <HAL_RCC_OscConfig+0x334>
 8004a8e:	4b6a      	ldr	r3, [pc, #424]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a90:	6a1b      	ldr	r3, [r3, #32]
 8004a92:	4a69      	ldr	r2, [pc, #420]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a94:	f023 0301 	bic.w	r3, r3, #1
 8004a98:	6213      	str	r3, [r2, #32]
 8004a9a:	4b67      	ldr	r3, [pc, #412]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004a9c:	6a1b      	ldr	r3, [r3, #32]
 8004a9e:	4a66      	ldr	r2, [pc, #408]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004aa0:	f023 0304 	bic.w	r3, r3, #4
 8004aa4:	6213      	str	r3, [r2, #32]
 8004aa6:	e01c      	b.n	8004ae2 <HAL_RCC_OscConfig+0x36e>
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	68db      	ldr	r3, [r3, #12]
 8004aac:	2b05      	cmp	r3, #5
 8004aae:	d10c      	bne.n	8004aca <HAL_RCC_OscConfig+0x356>
 8004ab0:	4b61      	ldr	r3, [pc, #388]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ab2:	6a1b      	ldr	r3, [r3, #32]
 8004ab4:	4a60      	ldr	r2, [pc, #384]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ab6:	f043 0304 	orr.w	r3, r3, #4
 8004aba:	6213      	str	r3, [r2, #32]
 8004abc:	4b5e      	ldr	r3, [pc, #376]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004abe:	6a1b      	ldr	r3, [r3, #32]
 8004ac0:	4a5d      	ldr	r2, [pc, #372]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ac2:	f043 0301 	orr.w	r3, r3, #1
 8004ac6:	6213      	str	r3, [r2, #32]
 8004ac8:	e00b      	b.n	8004ae2 <HAL_RCC_OscConfig+0x36e>
 8004aca:	4b5b      	ldr	r3, [pc, #364]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004acc:	6a1b      	ldr	r3, [r3, #32]
 8004ace:	4a5a      	ldr	r2, [pc, #360]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ad0:	f023 0301 	bic.w	r3, r3, #1
 8004ad4:	6213      	str	r3, [r2, #32]
 8004ad6:	4b58      	ldr	r3, [pc, #352]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ad8:	6a1b      	ldr	r3, [r3, #32]
 8004ada:	4a57      	ldr	r2, [pc, #348]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004adc:	f023 0304 	bic.w	r3, r3, #4
 8004ae0:	6213      	str	r3, [r2, #32]
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	68db      	ldr	r3, [r3, #12]
 8004ae6:	2b00      	cmp	r3, #0
 8004ae8:	d015      	beq.n	8004b16 <HAL_RCC_OscConfig+0x3a2>
 8004aea:	f7fe f8b9 	bl	8002c60 <HAL_GetTick>
 8004aee:	6138      	str	r0, [r7, #16]
 8004af0:	e00a      	b.n	8004b08 <HAL_RCC_OscConfig+0x394>
 8004af2:	f7fe f8b5 	bl	8002c60 <HAL_GetTick>
 8004af6:	4602      	mov	r2, r0
 8004af8:	693b      	ldr	r3, [r7, #16]
 8004afa:	1ad3      	subs	r3, r2, r3
 8004afc:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004b00:	4293      	cmp	r3, r2
 8004b02:	d901      	bls.n	8004b08 <HAL_RCC_OscConfig+0x394>
 8004b04:	2303      	movs	r3, #3
 8004b06:	e0b1      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004b08:	4b4b      	ldr	r3, [pc, #300]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b0a:	6a1b      	ldr	r3, [r3, #32]
 8004b0c:	f003 0302 	and.w	r3, r3, #2
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d0ee      	beq.n	8004af2 <HAL_RCC_OscConfig+0x37e>
 8004b14:	e014      	b.n	8004b40 <HAL_RCC_OscConfig+0x3cc>
 8004b16:	f7fe f8a3 	bl	8002c60 <HAL_GetTick>
 8004b1a:	6138      	str	r0, [r7, #16]
 8004b1c:	e00a      	b.n	8004b34 <HAL_RCC_OscConfig+0x3c0>
 8004b1e:	f7fe f89f 	bl	8002c60 <HAL_GetTick>
 8004b22:	4602      	mov	r2, r0
 8004b24:	693b      	ldr	r3, [r7, #16]
 8004b26:	1ad3      	subs	r3, r2, r3
 8004b28:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004b2c:	4293      	cmp	r3, r2
 8004b2e:	d901      	bls.n	8004b34 <HAL_RCC_OscConfig+0x3c0>
 8004b30:	2303      	movs	r3, #3
 8004b32:	e09b      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004b34:	4b40      	ldr	r3, [pc, #256]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b36:	6a1b      	ldr	r3, [r3, #32]
 8004b38:	f003 0302 	and.w	r3, r3, #2
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d1ee      	bne.n	8004b1e <HAL_RCC_OscConfig+0x3aa>
 8004b40:	7dfb      	ldrb	r3, [r7, #23]
 8004b42:	2b01      	cmp	r3, #1
 8004b44:	d105      	bne.n	8004b52 <HAL_RCC_OscConfig+0x3de>
 8004b46:	4b3c      	ldr	r3, [pc, #240]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b48:	69db      	ldr	r3, [r3, #28]
 8004b4a:	4a3b      	ldr	r2, [pc, #236]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b4c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004b50:	61d3      	str	r3, [r2, #28]
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	69db      	ldr	r3, [r3, #28]
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	f000 8087 	beq.w	8004c6a <HAL_RCC_OscConfig+0x4f6>
 8004b5c:	4b36      	ldr	r3, [pc, #216]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b5e:	685b      	ldr	r3, [r3, #4]
 8004b60:	f003 030c 	and.w	r3, r3, #12
 8004b64:	2b08      	cmp	r3, #8
 8004b66:	d061      	beq.n	8004c2c <HAL_RCC_OscConfig+0x4b8>
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	69db      	ldr	r3, [r3, #28]
 8004b6c:	2b02      	cmp	r3, #2
 8004b6e:	d146      	bne.n	8004bfe <HAL_RCC_OscConfig+0x48a>
 8004b70:	4b33      	ldr	r3, [pc, #204]	@ (8004c40 <HAL_RCC_OscConfig+0x4cc>)
 8004b72:	2200      	movs	r2, #0
 8004b74:	601a      	str	r2, [r3, #0]
 8004b76:	f7fe f873 	bl	8002c60 <HAL_GetTick>
 8004b7a:	6138      	str	r0, [r7, #16]
 8004b7c:	e008      	b.n	8004b90 <HAL_RCC_OscConfig+0x41c>
 8004b7e:	f7fe f86f 	bl	8002c60 <HAL_GetTick>
 8004b82:	4602      	mov	r2, r0
 8004b84:	693b      	ldr	r3, [r7, #16]
 8004b86:	1ad3      	subs	r3, r2, r3
 8004b88:	2b02      	cmp	r3, #2
 8004b8a:	d901      	bls.n	8004b90 <HAL_RCC_OscConfig+0x41c>
 8004b8c:	2303      	movs	r3, #3
 8004b8e:	e06d      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004b90:	4b29      	ldr	r3, [pc, #164]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004b98:	2b00      	cmp	r3, #0
 8004b9a:	d1f0      	bne.n	8004b7e <HAL_RCC_OscConfig+0x40a>
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	6a1b      	ldr	r3, [r3, #32]
 8004ba0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004ba4:	d108      	bne.n	8004bb8 <HAL_RCC_OscConfig+0x444>
 8004ba6:	4b24      	ldr	r3, [pc, #144]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004ba8:	685b      	ldr	r3, [r3, #4]
 8004baa:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	689b      	ldr	r3, [r3, #8]
 8004bb2:	4921      	ldr	r1, [pc, #132]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004bb4:	4313      	orrs	r3, r2
 8004bb6:	604b      	str	r3, [r1, #4]
 8004bb8:	4b1f      	ldr	r3, [pc, #124]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004bba:	685b      	ldr	r3, [r3, #4]
 8004bbc:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	6a19      	ldr	r1, [r3, #32]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bc8:	430b      	orrs	r3, r1
 8004bca:	491b      	ldr	r1, [pc, #108]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004bcc:	4313      	orrs	r3, r2
 8004bce:	604b      	str	r3, [r1, #4]
 8004bd0:	4b1b      	ldr	r3, [pc, #108]	@ (8004c40 <HAL_RCC_OscConfig+0x4cc>)
 8004bd2:	2201      	movs	r2, #1
 8004bd4:	601a      	str	r2, [r3, #0]
 8004bd6:	f7fe f843 	bl	8002c60 <HAL_GetTick>
 8004bda:	6138      	str	r0, [r7, #16]
 8004bdc:	e008      	b.n	8004bf0 <HAL_RCC_OscConfig+0x47c>
 8004bde:	f7fe f83f 	bl	8002c60 <HAL_GetTick>
 8004be2:	4602      	mov	r2, r0
 8004be4:	693b      	ldr	r3, [r7, #16]
 8004be6:	1ad3      	subs	r3, r2, r3
 8004be8:	2b02      	cmp	r3, #2
 8004bea:	d901      	bls.n	8004bf0 <HAL_RCC_OscConfig+0x47c>
 8004bec:	2303      	movs	r3, #3
 8004bee:	e03d      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004bf0:	4b11      	ldr	r3, [pc, #68]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	d0f0      	beq.n	8004bde <HAL_RCC_OscConfig+0x46a>
 8004bfc:	e035      	b.n	8004c6a <HAL_RCC_OscConfig+0x4f6>
 8004bfe:	4b10      	ldr	r3, [pc, #64]	@ (8004c40 <HAL_RCC_OscConfig+0x4cc>)
 8004c00:	2200      	movs	r2, #0
 8004c02:	601a      	str	r2, [r3, #0]
 8004c04:	f7fe f82c 	bl	8002c60 <HAL_GetTick>
 8004c08:	6138      	str	r0, [r7, #16]
 8004c0a:	e008      	b.n	8004c1e <HAL_RCC_OscConfig+0x4aa>
 8004c0c:	f7fe f828 	bl	8002c60 <HAL_GetTick>
 8004c10:	4602      	mov	r2, r0
 8004c12:	693b      	ldr	r3, [r7, #16]
 8004c14:	1ad3      	subs	r3, r2, r3
 8004c16:	2b02      	cmp	r3, #2
 8004c18:	d901      	bls.n	8004c1e <HAL_RCC_OscConfig+0x4aa>
 8004c1a:	2303      	movs	r3, #3
 8004c1c:	e026      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004c1e:	4b06      	ldr	r3, [pc, #24]	@ (8004c38 <HAL_RCC_OscConfig+0x4c4>)
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004c26:	2b00      	cmp	r3, #0
 8004c28:	d1f0      	bne.n	8004c0c <HAL_RCC_OscConfig+0x498>
 8004c2a:	e01e      	b.n	8004c6a <HAL_RCC_OscConfig+0x4f6>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	69db      	ldr	r3, [r3, #28]
 8004c30:	2b01      	cmp	r3, #1
 8004c32:	d107      	bne.n	8004c44 <HAL_RCC_OscConfig+0x4d0>
 8004c34:	2301      	movs	r3, #1
 8004c36:	e019      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004c38:	40021000 	.word	0x40021000
 8004c3c:	40007000 	.word	0x40007000
 8004c40:	42420060 	.word	0x42420060
 8004c44:	4b0b      	ldr	r3, [pc, #44]	@ (8004c74 <HAL_RCC_OscConfig+0x500>)
 8004c46:	685b      	ldr	r3, [r3, #4]
 8004c48:	60fb      	str	r3, [r7, #12]
 8004c4a:	68fb      	ldr	r3, [r7, #12]
 8004c4c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	6a1b      	ldr	r3, [r3, #32]
 8004c54:	429a      	cmp	r2, r3
 8004c56:	d106      	bne.n	8004c66 <HAL_RCC_OscConfig+0x4f2>
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c62:	429a      	cmp	r2, r3
 8004c64:	d001      	beq.n	8004c6a <HAL_RCC_OscConfig+0x4f6>
 8004c66:	2301      	movs	r3, #1
 8004c68:	e000      	b.n	8004c6c <HAL_RCC_OscConfig+0x4f8>
 8004c6a:	2300      	movs	r3, #0
 8004c6c:	4618      	mov	r0, r3
 8004c6e:	3718      	adds	r7, #24
 8004c70:	46bd      	mov	sp, r7
 8004c72:	bd80      	pop	{r7, pc}
 8004c74:	40021000 	.word	0x40021000

08004c78 <HAL_RCC_ClockConfig>:
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b084      	sub	sp, #16
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
 8004c80:	6039      	str	r1, [r7, #0]
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	d101      	bne.n	8004c8c <HAL_RCC_ClockConfig+0x14>
 8004c88:	2301      	movs	r3, #1
 8004c8a:	e0d0      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004c8c:	4b6a      	ldr	r3, [pc, #424]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	f003 0307 	and.w	r3, r3, #7
 8004c94:	683a      	ldr	r2, [r7, #0]
 8004c96:	429a      	cmp	r2, r3
 8004c98:	d910      	bls.n	8004cbc <HAL_RCC_ClockConfig+0x44>
 8004c9a:	4b67      	ldr	r3, [pc, #412]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	f023 0207 	bic.w	r2, r3, #7
 8004ca2:	4965      	ldr	r1, [pc, #404]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004ca4:	683b      	ldr	r3, [r7, #0]
 8004ca6:	4313      	orrs	r3, r2
 8004ca8:	600b      	str	r3, [r1, #0]
 8004caa:	4b63      	ldr	r3, [pc, #396]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	f003 0307 	and.w	r3, r3, #7
 8004cb2:	683a      	ldr	r2, [r7, #0]
 8004cb4:	429a      	cmp	r2, r3
 8004cb6:	d001      	beq.n	8004cbc <HAL_RCC_ClockConfig+0x44>
 8004cb8:	2301      	movs	r3, #1
 8004cba:	e0b8      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	f003 0302 	and.w	r3, r3, #2
 8004cc4:	2b00      	cmp	r3, #0
 8004cc6:	d020      	beq.n	8004d0a <HAL_RCC_ClockConfig+0x92>
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	f003 0304 	and.w	r3, r3, #4
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d005      	beq.n	8004ce0 <HAL_RCC_ClockConfig+0x68>
 8004cd4:	4b59      	ldr	r3, [pc, #356]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004cd6:	685b      	ldr	r3, [r3, #4]
 8004cd8:	4a58      	ldr	r2, [pc, #352]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004cda:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8004cde:	6053      	str	r3, [r2, #4]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	f003 0308 	and.w	r3, r3, #8
 8004ce8:	2b00      	cmp	r3, #0
 8004cea:	d005      	beq.n	8004cf8 <HAL_RCC_ClockConfig+0x80>
 8004cec:	4b53      	ldr	r3, [pc, #332]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004cee:	685b      	ldr	r3, [r3, #4]
 8004cf0:	4a52      	ldr	r2, [pc, #328]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004cf2:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8004cf6:	6053      	str	r3, [r2, #4]
 8004cf8:	4b50      	ldr	r3, [pc, #320]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004cfa:	685b      	ldr	r3, [r3, #4]
 8004cfc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	689b      	ldr	r3, [r3, #8]
 8004d04:	494d      	ldr	r1, [pc, #308]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d06:	4313      	orrs	r3, r2
 8004d08:	604b      	str	r3, [r1, #4]
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	f003 0301 	and.w	r3, r3, #1
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d040      	beq.n	8004d98 <HAL_RCC_ClockConfig+0x120>
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	685b      	ldr	r3, [r3, #4]
 8004d1a:	2b01      	cmp	r3, #1
 8004d1c:	d107      	bne.n	8004d2e <HAL_RCC_ClockConfig+0xb6>
 8004d1e:	4b47      	ldr	r3, [pc, #284]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004d26:	2b00      	cmp	r3, #0
 8004d28:	d115      	bne.n	8004d56 <HAL_RCC_ClockConfig+0xde>
 8004d2a:	2301      	movs	r3, #1
 8004d2c:	e07f      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	685b      	ldr	r3, [r3, #4]
 8004d32:	2b02      	cmp	r3, #2
 8004d34:	d107      	bne.n	8004d46 <HAL_RCC_ClockConfig+0xce>
 8004d36:	4b41      	ldr	r3, [pc, #260]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004d3e:	2b00      	cmp	r3, #0
 8004d40:	d109      	bne.n	8004d56 <HAL_RCC_ClockConfig+0xde>
 8004d42:	2301      	movs	r3, #1
 8004d44:	e073      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004d46:	4b3d      	ldr	r3, [pc, #244]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	f003 0302 	and.w	r3, r3, #2
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d101      	bne.n	8004d56 <HAL_RCC_ClockConfig+0xde>
 8004d52:	2301      	movs	r3, #1
 8004d54:	e06b      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004d56:	4b39      	ldr	r3, [pc, #228]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d58:	685b      	ldr	r3, [r3, #4]
 8004d5a:	f023 0203 	bic.w	r2, r3, #3
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	685b      	ldr	r3, [r3, #4]
 8004d62:	4936      	ldr	r1, [pc, #216]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d64:	4313      	orrs	r3, r2
 8004d66:	604b      	str	r3, [r1, #4]
 8004d68:	f7fd ff7a 	bl	8002c60 <HAL_GetTick>
 8004d6c:	60f8      	str	r0, [r7, #12]
 8004d6e:	e00a      	b.n	8004d86 <HAL_RCC_ClockConfig+0x10e>
 8004d70:	f7fd ff76 	bl	8002c60 <HAL_GetTick>
 8004d74:	4602      	mov	r2, r0
 8004d76:	68fb      	ldr	r3, [r7, #12]
 8004d78:	1ad3      	subs	r3, r2, r3
 8004d7a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004d7e:	4293      	cmp	r3, r2
 8004d80:	d901      	bls.n	8004d86 <HAL_RCC_ClockConfig+0x10e>
 8004d82:	2303      	movs	r3, #3
 8004d84:	e053      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004d86:	4b2d      	ldr	r3, [pc, #180]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004d88:	685b      	ldr	r3, [r3, #4]
 8004d8a:	f003 020c 	and.w	r2, r3, #12
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	685b      	ldr	r3, [r3, #4]
 8004d92:	009b      	lsls	r3, r3, #2
 8004d94:	429a      	cmp	r2, r3
 8004d96:	d1eb      	bne.n	8004d70 <HAL_RCC_ClockConfig+0xf8>
 8004d98:	4b27      	ldr	r3, [pc, #156]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	f003 0307 	and.w	r3, r3, #7
 8004da0:	683a      	ldr	r2, [r7, #0]
 8004da2:	429a      	cmp	r2, r3
 8004da4:	d210      	bcs.n	8004dc8 <HAL_RCC_ClockConfig+0x150>
 8004da6:	4b24      	ldr	r3, [pc, #144]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	f023 0207 	bic.w	r2, r3, #7
 8004dae:	4922      	ldr	r1, [pc, #136]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004db0:	683b      	ldr	r3, [r7, #0]
 8004db2:	4313      	orrs	r3, r2
 8004db4:	600b      	str	r3, [r1, #0]
 8004db6:	4b20      	ldr	r3, [pc, #128]	@ (8004e38 <HAL_RCC_ClockConfig+0x1c0>)
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	f003 0307 	and.w	r3, r3, #7
 8004dbe:	683a      	ldr	r2, [r7, #0]
 8004dc0:	429a      	cmp	r2, r3
 8004dc2:	d001      	beq.n	8004dc8 <HAL_RCC_ClockConfig+0x150>
 8004dc4:	2301      	movs	r3, #1
 8004dc6:	e032      	b.n	8004e2e <HAL_RCC_ClockConfig+0x1b6>
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	f003 0304 	and.w	r3, r3, #4
 8004dd0:	2b00      	cmp	r3, #0
 8004dd2:	d008      	beq.n	8004de6 <HAL_RCC_ClockConfig+0x16e>
 8004dd4:	4b19      	ldr	r3, [pc, #100]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004dd6:	685b      	ldr	r3, [r3, #4]
 8004dd8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	68db      	ldr	r3, [r3, #12]
 8004de0:	4916      	ldr	r1, [pc, #88]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004de2:	4313      	orrs	r3, r2
 8004de4:	604b      	str	r3, [r1, #4]
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	f003 0308 	and.w	r3, r3, #8
 8004dee:	2b00      	cmp	r3, #0
 8004df0:	d009      	beq.n	8004e06 <HAL_RCC_ClockConfig+0x18e>
 8004df2:	4b12      	ldr	r3, [pc, #72]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004df4:	685b      	ldr	r3, [r3, #4]
 8004df6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	691b      	ldr	r3, [r3, #16]
 8004dfe:	00db      	lsls	r3, r3, #3
 8004e00:	490e      	ldr	r1, [pc, #56]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004e02:	4313      	orrs	r3, r2
 8004e04:	604b      	str	r3, [r1, #4]
 8004e06:	f000 f821 	bl	8004e4c <HAL_RCC_GetSysClockFreq>
 8004e0a:	4602      	mov	r2, r0
 8004e0c:	4b0b      	ldr	r3, [pc, #44]	@ (8004e3c <HAL_RCC_ClockConfig+0x1c4>)
 8004e0e:	685b      	ldr	r3, [r3, #4]
 8004e10:	091b      	lsrs	r3, r3, #4
 8004e12:	f003 030f 	and.w	r3, r3, #15
 8004e16:	490a      	ldr	r1, [pc, #40]	@ (8004e40 <HAL_RCC_ClockConfig+0x1c8>)
 8004e18:	5ccb      	ldrb	r3, [r1, r3]
 8004e1a:	fa22 f303 	lsr.w	r3, r2, r3
 8004e1e:	4a09      	ldr	r2, [pc, #36]	@ (8004e44 <HAL_RCC_ClockConfig+0x1cc>)
 8004e20:	6013      	str	r3, [r2, #0]
 8004e22:	4b09      	ldr	r3, [pc, #36]	@ (8004e48 <HAL_RCC_ClockConfig+0x1d0>)
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4618      	mov	r0, r3
 8004e28:	f7fd fed8 	bl	8002bdc <HAL_InitTick>
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	4618      	mov	r0, r3
 8004e30:	3710      	adds	r7, #16
 8004e32:	46bd      	mov	sp, r7
 8004e34:	bd80      	pop	{r7, pc}
 8004e36:	bf00      	nop
 8004e38:	40022000 	.word	0x40022000
 8004e3c:	40021000 	.word	0x40021000
 8004e40:	0800593c 	.word	0x0800593c
 8004e44:	20000008 	.word	0x20000008
 8004e48:	2000000c 	.word	0x2000000c

08004e4c <HAL_RCC_GetSysClockFreq>:
 8004e4c:	b480      	push	{r7}
 8004e4e:	b087      	sub	sp, #28
 8004e50:	af00      	add	r7, sp, #0
 8004e52:	2300      	movs	r3, #0
 8004e54:	60fb      	str	r3, [r7, #12]
 8004e56:	2300      	movs	r3, #0
 8004e58:	60bb      	str	r3, [r7, #8]
 8004e5a:	2300      	movs	r3, #0
 8004e5c:	617b      	str	r3, [r7, #20]
 8004e5e:	2300      	movs	r3, #0
 8004e60:	607b      	str	r3, [r7, #4]
 8004e62:	2300      	movs	r3, #0
 8004e64:	613b      	str	r3, [r7, #16]
 8004e66:	4b1e      	ldr	r3, [pc, #120]	@ (8004ee0 <HAL_RCC_GetSysClockFreq+0x94>)
 8004e68:	685b      	ldr	r3, [r3, #4]
 8004e6a:	60fb      	str	r3, [r7, #12]
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	f003 030c 	and.w	r3, r3, #12
 8004e72:	2b04      	cmp	r3, #4
 8004e74:	d002      	beq.n	8004e7c <HAL_RCC_GetSysClockFreq+0x30>
 8004e76:	2b08      	cmp	r3, #8
 8004e78:	d003      	beq.n	8004e82 <HAL_RCC_GetSysClockFreq+0x36>
 8004e7a:	e027      	b.n	8004ecc <HAL_RCC_GetSysClockFreq+0x80>
 8004e7c:	4b19      	ldr	r3, [pc, #100]	@ (8004ee4 <HAL_RCC_GetSysClockFreq+0x98>)
 8004e7e:	613b      	str	r3, [r7, #16]
 8004e80:	e027      	b.n	8004ed2 <HAL_RCC_GetSysClockFreq+0x86>
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	0c9b      	lsrs	r3, r3, #18
 8004e86:	f003 030f 	and.w	r3, r3, #15
 8004e8a:	4a17      	ldr	r2, [pc, #92]	@ (8004ee8 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004e8c:	5cd3      	ldrb	r3, [r2, r3]
 8004e8e:	607b      	str	r3, [r7, #4]
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d010      	beq.n	8004ebc <HAL_RCC_GetSysClockFreq+0x70>
 8004e9a:	4b11      	ldr	r3, [pc, #68]	@ (8004ee0 <HAL_RCC_GetSysClockFreq+0x94>)
 8004e9c:	685b      	ldr	r3, [r3, #4]
 8004e9e:	0c5b      	lsrs	r3, r3, #17
 8004ea0:	f003 0301 	and.w	r3, r3, #1
 8004ea4:	4a11      	ldr	r2, [pc, #68]	@ (8004eec <HAL_RCC_GetSysClockFreq+0xa0>)
 8004ea6:	5cd3      	ldrb	r3, [r2, r3]
 8004ea8:	60bb      	str	r3, [r7, #8]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	4a0d      	ldr	r2, [pc, #52]	@ (8004ee4 <HAL_RCC_GetSysClockFreq+0x98>)
 8004eae:	fb03 f202 	mul.w	r2, r3, r2
 8004eb2:	68bb      	ldr	r3, [r7, #8]
 8004eb4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004eb8:	617b      	str	r3, [r7, #20]
 8004eba:	e004      	b.n	8004ec6 <HAL_RCC_GetSysClockFreq+0x7a>
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	4a0c      	ldr	r2, [pc, #48]	@ (8004ef0 <HAL_RCC_GetSysClockFreq+0xa4>)
 8004ec0:	fb02 f303 	mul.w	r3, r2, r3
 8004ec4:	617b      	str	r3, [r7, #20]
 8004ec6:	697b      	ldr	r3, [r7, #20]
 8004ec8:	613b      	str	r3, [r7, #16]
 8004eca:	e002      	b.n	8004ed2 <HAL_RCC_GetSysClockFreq+0x86>
 8004ecc:	4b05      	ldr	r3, [pc, #20]	@ (8004ee4 <HAL_RCC_GetSysClockFreq+0x98>)
 8004ece:	613b      	str	r3, [r7, #16]
 8004ed0:	bf00      	nop
 8004ed2:	693b      	ldr	r3, [r7, #16]
 8004ed4:	4618      	mov	r0, r3
 8004ed6:	371c      	adds	r7, #28
 8004ed8:	46bd      	mov	sp, r7
 8004eda:	bc80      	pop	{r7}
 8004edc:	4770      	bx	lr
 8004ede:	bf00      	nop
 8004ee0:	40021000 	.word	0x40021000
 8004ee4:	007a1200 	.word	0x007a1200
 8004ee8:	08005954 	.word	0x08005954
 8004eec:	08005964 	.word	0x08005964
 8004ef0:	003d0900 	.word	0x003d0900

08004ef4 <HAL_RCC_GetHCLKFreq>:
 8004ef4:	b480      	push	{r7}
 8004ef6:	af00      	add	r7, sp, #0
 8004ef8:	4b02      	ldr	r3, [pc, #8]	@ (8004f04 <HAL_RCC_GetHCLKFreq+0x10>)
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	4618      	mov	r0, r3
 8004efe:	46bd      	mov	sp, r7
 8004f00:	bc80      	pop	{r7}
 8004f02:	4770      	bx	lr
 8004f04:	20000008 	.word	0x20000008

08004f08 <HAL_RCC_GetPCLK1Freq>:
 8004f08:	b580      	push	{r7, lr}
 8004f0a:	af00      	add	r7, sp, #0
 8004f0c:	f7ff fff2 	bl	8004ef4 <HAL_RCC_GetHCLKFreq>
 8004f10:	4602      	mov	r2, r0
 8004f12:	4b05      	ldr	r3, [pc, #20]	@ (8004f28 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004f14:	685b      	ldr	r3, [r3, #4]
 8004f16:	0a1b      	lsrs	r3, r3, #8
 8004f18:	f003 0307 	and.w	r3, r3, #7
 8004f1c:	4903      	ldr	r1, [pc, #12]	@ (8004f2c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004f1e:	5ccb      	ldrb	r3, [r1, r3]
 8004f20:	fa22 f303 	lsr.w	r3, r2, r3
 8004f24:	4618      	mov	r0, r3
 8004f26:	bd80      	pop	{r7, pc}
 8004f28:	40021000 	.word	0x40021000
 8004f2c:	0800594c 	.word	0x0800594c

08004f30 <RCC_Delay>:
 8004f30:	b480      	push	{r7}
 8004f32:	b085      	sub	sp, #20
 8004f34:	af00      	add	r7, sp, #0
 8004f36:	6078      	str	r0, [r7, #4]
 8004f38:	4b0a      	ldr	r3, [pc, #40]	@ (8004f64 <RCC_Delay+0x34>)
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	4a0a      	ldr	r2, [pc, #40]	@ (8004f68 <RCC_Delay+0x38>)
 8004f3e:	fba2 2303 	umull	r2, r3, r2, r3
 8004f42:	0a5b      	lsrs	r3, r3, #9
 8004f44:	687a      	ldr	r2, [r7, #4]
 8004f46:	fb02 f303 	mul.w	r3, r2, r3
 8004f4a:	60fb      	str	r3, [r7, #12]
 8004f4c:	bf00      	nop
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	1e5a      	subs	r2, r3, #1
 8004f52:	60fa      	str	r2, [r7, #12]
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	d1f9      	bne.n	8004f4c <RCC_Delay+0x1c>
 8004f58:	bf00      	nop
 8004f5a:	bf00      	nop
 8004f5c:	3714      	adds	r7, #20
 8004f5e:	46bd      	mov	sp, r7
 8004f60:	bc80      	pop	{r7}
 8004f62:	4770      	bx	lr
 8004f64:	20000008 	.word	0x20000008
 8004f68:	10624dd3 	.word	0x10624dd3

08004f6c <HAL_RCCEx_PeriphCLKConfig>:
 8004f6c:	b580      	push	{r7, lr}
 8004f6e:	b086      	sub	sp, #24
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	6078      	str	r0, [r7, #4]
 8004f74:	2300      	movs	r3, #0
 8004f76:	613b      	str	r3, [r7, #16]
 8004f78:	2300      	movs	r3, #0
 8004f7a:	60fb      	str	r3, [r7, #12]
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	f003 0301 	and.w	r3, r3, #1
 8004f84:	2b00      	cmp	r3, #0
 8004f86:	d07d      	beq.n	8005084 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8004f88:	2300      	movs	r3, #0
 8004f8a:	75fb      	strb	r3, [r7, #23]
 8004f8c:	4b4f      	ldr	r3, [pc, #316]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004f8e:	69db      	ldr	r3, [r3, #28]
 8004f90:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d10d      	bne.n	8004fb4 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8004f98:	4b4c      	ldr	r3, [pc, #304]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004f9a:	69db      	ldr	r3, [r3, #28]
 8004f9c:	4a4b      	ldr	r2, [pc, #300]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004f9e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004fa2:	61d3      	str	r3, [r2, #28]
 8004fa4:	4b49      	ldr	r3, [pc, #292]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004fa6:	69db      	ldr	r3, [r3, #28]
 8004fa8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004fac:	60bb      	str	r3, [r7, #8]
 8004fae:	68bb      	ldr	r3, [r7, #8]
 8004fb0:	2301      	movs	r3, #1
 8004fb2:	75fb      	strb	r3, [r7, #23]
 8004fb4:	4b46      	ldr	r3, [pc, #280]	@ (80050d0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d118      	bne.n	8004ff2 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004fc0:	4b43      	ldr	r3, [pc, #268]	@ (80050d0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	4a42      	ldr	r2, [pc, #264]	@ (80050d0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004fc6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004fca:	6013      	str	r3, [r2, #0]
 8004fcc:	f7fd fe48 	bl	8002c60 <HAL_GetTick>
 8004fd0:	6138      	str	r0, [r7, #16]
 8004fd2:	e008      	b.n	8004fe6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004fd4:	f7fd fe44 	bl	8002c60 <HAL_GetTick>
 8004fd8:	4602      	mov	r2, r0
 8004fda:	693b      	ldr	r3, [r7, #16]
 8004fdc:	1ad3      	subs	r3, r2, r3
 8004fde:	2b64      	cmp	r3, #100	@ 0x64
 8004fe0:	d901      	bls.n	8004fe6 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004fe2:	2303      	movs	r3, #3
 8004fe4:	e06d      	b.n	80050c2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8004fe6:	4b3a      	ldr	r3, [pc, #232]	@ (80050d0 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d0f0      	beq.n	8004fd4 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8004ff2:	4b36      	ldr	r3, [pc, #216]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8004ff4:	6a1b      	ldr	r3, [r3, #32]
 8004ff6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004ffa:	60fb      	str	r3, [r7, #12]
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d02e      	beq.n	8005060 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	685b      	ldr	r3, [r3, #4]
 8005006:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800500a:	68fa      	ldr	r2, [r7, #12]
 800500c:	429a      	cmp	r2, r3
 800500e:	d027      	beq.n	8005060 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005010:	4b2e      	ldr	r3, [pc, #184]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005012:	6a1b      	ldr	r3, [r3, #32]
 8005014:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005018:	60fb      	str	r3, [r7, #12]
 800501a:	4b2e      	ldr	r3, [pc, #184]	@ (80050d4 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800501c:	2201      	movs	r2, #1
 800501e:	601a      	str	r2, [r3, #0]
 8005020:	4b2c      	ldr	r3, [pc, #176]	@ (80050d4 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8005022:	2200      	movs	r2, #0
 8005024:	601a      	str	r2, [r3, #0]
 8005026:	4a29      	ldr	r2, [pc, #164]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	6213      	str	r3, [r2, #32]
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	f003 0301 	and.w	r3, r3, #1
 8005032:	2b00      	cmp	r3, #0
 8005034:	d014      	beq.n	8005060 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005036:	f7fd fe13 	bl	8002c60 <HAL_GetTick>
 800503a:	6138      	str	r0, [r7, #16]
 800503c:	e00a      	b.n	8005054 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 800503e:	f7fd fe0f 	bl	8002c60 <HAL_GetTick>
 8005042:	4602      	mov	r2, r0
 8005044:	693b      	ldr	r3, [r7, #16]
 8005046:	1ad3      	subs	r3, r2, r3
 8005048:	f241 3288 	movw	r2, #5000	@ 0x1388
 800504c:	4293      	cmp	r3, r2
 800504e:	d901      	bls.n	8005054 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8005050:	2303      	movs	r3, #3
 8005052:	e036      	b.n	80050c2 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8005054:	4b1d      	ldr	r3, [pc, #116]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005056:	6a1b      	ldr	r3, [r3, #32]
 8005058:	f003 0302 	and.w	r3, r3, #2
 800505c:	2b00      	cmp	r3, #0
 800505e:	d0ee      	beq.n	800503e <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8005060:	4b1a      	ldr	r3, [pc, #104]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005062:	6a1b      	ldr	r3, [r3, #32]
 8005064:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	685b      	ldr	r3, [r3, #4]
 800506c:	4917      	ldr	r1, [pc, #92]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800506e:	4313      	orrs	r3, r2
 8005070:	620b      	str	r3, [r1, #32]
 8005072:	7dfb      	ldrb	r3, [r7, #23]
 8005074:	2b01      	cmp	r3, #1
 8005076:	d105      	bne.n	8005084 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8005078:	4b14      	ldr	r3, [pc, #80]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800507a:	69db      	ldr	r3, [r3, #28]
 800507c:	4a13      	ldr	r2, [pc, #76]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800507e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005082:	61d3      	str	r3, [r2, #28]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	f003 0302 	and.w	r3, r3, #2
 800508c:	2b00      	cmp	r3, #0
 800508e:	d008      	beq.n	80050a2 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8005090:	4b0e      	ldr	r3, [pc, #56]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8005092:	685b      	ldr	r3, [r3, #4]
 8005094:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	689b      	ldr	r3, [r3, #8]
 800509c:	490b      	ldr	r1, [pc, #44]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 800509e:	4313      	orrs	r3, r2
 80050a0:	604b      	str	r3, [r1, #4]
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	f003 0310 	and.w	r3, r3, #16
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d008      	beq.n	80050c0 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80050ae:	4b07      	ldr	r3, [pc, #28]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80050b0:	685b      	ldr	r3, [r3, #4]
 80050b2:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	68db      	ldr	r3, [r3, #12]
 80050ba:	4904      	ldr	r1, [pc, #16]	@ (80050cc <HAL_RCCEx_PeriphCLKConfig+0x160>)
 80050bc:	4313      	orrs	r3, r2
 80050be:	604b      	str	r3, [r1, #4]
 80050c0:	2300      	movs	r3, #0
 80050c2:	4618      	mov	r0, r3
 80050c4:	3718      	adds	r7, #24
 80050c6:	46bd      	mov	sp, r7
 80050c8:	bd80      	pop	{r7, pc}
 80050ca:	bf00      	nop
 80050cc:	40021000 	.word	0x40021000
 80050d0:	40007000 	.word	0x40007000
 80050d4:	42420440 	.word	0x42420440

080050d8 <HAL_TIM_Base_Init>:
 80050d8:	b580      	push	{r7, lr}
 80050da:	b082      	sub	sp, #8
 80050dc:	af00      	add	r7, sp, #0
 80050de:	6078      	str	r0, [r7, #4]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d101      	bne.n	80050ea <HAL_TIM_Base_Init+0x12>
 80050e6:	2301      	movs	r3, #1
 80050e8:	e041      	b.n	800516e <HAL_TIM_Base_Init+0x96>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80050f0:	b2db      	uxtb	r3, r3
 80050f2:	2b00      	cmp	r3, #0
 80050f4:	d106      	bne.n	8005104 <HAL_TIM_Base_Init+0x2c>
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	2200      	movs	r2, #0
 80050fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80050fe:	6878      	ldr	r0, [r7, #4]
 8005100:	f7fd fcd4 	bl	8002aac <HAL_TIM_Base_MspInit>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	2202      	movs	r2, #2
 8005108:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	681a      	ldr	r2, [r3, #0]
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	3304      	adds	r3, #4
 8005114:	4619      	mov	r1, r3
 8005116:	4610      	mov	r0, r2
 8005118:	f000 fa64 	bl	80055e4 <TIM_Base_SetConfig>
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	2201      	movs	r2, #1
 8005120:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	2201      	movs	r2, #1
 8005128:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	2201      	movs	r2, #1
 8005130:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	2201      	movs	r2, #1
 8005138:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	2201      	movs	r2, #1
 8005140:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	2201      	movs	r2, #1
 8005148:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	2201      	movs	r2, #1
 8005150:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	2201      	movs	r2, #1
 8005158:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2201      	movs	r2, #1
 8005160:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	2201      	movs	r2, #1
 8005168:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800516c:	2300      	movs	r3, #0
 800516e:	4618      	mov	r0, r3
 8005170:	3708      	adds	r7, #8
 8005172:	46bd      	mov	sp, r7
 8005174:	bd80      	pop	{r7, pc}
	...

08005178 <HAL_TIM_Base_Start_IT>:
 8005178:	b480      	push	{r7}
 800517a:	b085      	sub	sp, #20
 800517c:	af00      	add	r7, sp, #0
 800517e:	6078      	str	r0, [r7, #4]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005186:	b2db      	uxtb	r3, r3
 8005188:	2b01      	cmp	r3, #1
 800518a:	d001      	beq.n	8005190 <HAL_TIM_Base_Start_IT+0x18>
 800518c:	2301      	movs	r3, #1
 800518e:	e03a      	b.n	8005206 <HAL_TIM_Base_Start_IT+0x8e>
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	2202      	movs	r2, #2
 8005194:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	68da      	ldr	r2, [r3, #12]
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	681b      	ldr	r3, [r3, #0]
 80051a2:	f042 0201 	orr.w	r2, r2, #1
 80051a6:	60da      	str	r2, [r3, #12]
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	4a18      	ldr	r2, [pc, #96]	@ (8005210 <HAL_TIM_Base_Start_IT+0x98>)
 80051ae:	4293      	cmp	r3, r2
 80051b0:	d00e      	beq.n	80051d0 <HAL_TIM_Base_Start_IT+0x58>
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80051ba:	d009      	beq.n	80051d0 <HAL_TIM_Base_Start_IT+0x58>
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	4a14      	ldr	r2, [pc, #80]	@ (8005214 <HAL_TIM_Base_Start_IT+0x9c>)
 80051c2:	4293      	cmp	r3, r2
 80051c4:	d004      	beq.n	80051d0 <HAL_TIM_Base_Start_IT+0x58>
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	4a13      	ldr	r2, [pc, #76]	@ (8005218 <HAL_TIM_Base_Start_IT+0xa0>)
 80051cc:	4293      	cmp	r3, r2
 80051ce:	d111      	bne.n	80051f4 <HAL_TIM_Base_Start_IT+0x7c>
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	681b      	ldr	r3, [r3, #0]
 80051d4:	689b      	ldr	r3, [r3, #8]
 80051d6:	f003 0307 	and.w	r3, r3, #7
 80051da:	60fb      	str	r3, [r7, #12]
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	2b06      	cmp	r3, #6
 80051e0:	d010      	beq.n	8005204 <HAL_TIM_Base_Start_IT+0x8c>
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	681a      	ldr	r2, [r3, #0]
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	f042 0201 	orr.w	r2, r2, #1
 80051f0:	601a      	str	r2, [r3, #0]
 80051f2:	e007      	b.n	8005204 <HAL_TIM_Base_Start_IT+0x8c>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	681a      	ldr	r2, [r3, #0]
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	f042 0201 	orr.w	r2, r2, #1
 8005202:	601a      	str	r2, [r3, #0]
 8005204:	2300      	movs	r3, #0
 8005206:	4618      	mov	r0, r3
 8005208:	3714      	adds	r7, #20
 800520a:	46bd      	mov	sp, r7
 800520c:	bc80      	pop	{r7}
 800520e:	4770      	bx	lr
 8005210:	40012c00 	.word	0x40012c00
 8005214:	40000400 	.word	0x40000400
 8005218:	40000800 	.word	0x40000800

0800521c <HAL_TIM_IRQHandler>:
 800521c:	b580      	push	{r7, lr}
 800521e:	b084      	sub	sp, #16
 8005220:	af00      	add	r7, sp, #0
 8005222:	6078      	str	r0, [r7, #4]
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	68db      	ldr	r3, [r3, #12]
 800522a:	60fb      	str	r3, [r7, #12]
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	691b      	ldr	r3, [r3, #16]
 8005232:	60bb      	str	r3, [r7, #8]
 8005234:	68bb      	ldr	r3, [r7, #8]
 8005236:	f003 0302 	and.w	r3, r3, #2
 800523a:	2b00      	cmp	r3, #0
 800523c:	d020      	beq.n	8005280 <HAL_TIM_IRQHandler+0x64>
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	f003 0302 	and.w	r3, r3, #2
 8005244:	2b00      	cmp	r3, #0
 8005246:	d01b      	beq.n	8005280 <HAL_TIM_IRQHandler+0x64>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	f06f 0202 	mvn.w	r2, #2
 8005250:	611a      	str	r2, [r3, #16]
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	2201      	movs	r2, #1
 8005256:	771a      	strb	r2, [r3, #28]
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	699b      	ldr	r3, [r3, #24]
 800525e:	f003 0303 	and.w	r3, r3, #3
 8005262:	2b00      	cmp	r3, #0
 8005264:	d003      	beq.n	800526e <HAL_TIM_IRQHandler+0x52>
 8005266:	6878      	ldr	r0, [r7, #4]
 8005268:	f000 f9a1 	bl	80055ae <HAL_TIM_IC_CaptureCallback>
 800526c:	e005      	b.n	800527a <HAL_TIM_IRQHandler+0x5e>
 800526e:	6878      	ldr	r0, [r7, #4]
 8005270:	f000 f994 	bl	800559c <HAL_TIM_OC_DelayElapsedCallback>
 8005274:	6878      	ldr	r0, [r7, #4]
 8005276:	f000 f9a3 	bl	80055c0 <HAL_TIM_PWM_PulseFinishedCallback>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	2200      	movs	r2, #0
 800527e:	771a      	strb	r2, [r3, #28]
 8005280:	68bb      	ldr	r3, [r7, #8]
 8005282:	f003 0304 	and.w	r3, r3, #4
 8005286:	2b00      	cmp	r3, #0
 8005288:	d020      	beq.n	80052cc <HAL_TIM_IRQHandler+0xb0>
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	f003 0304 	and.w	r3, r3, #4
 8005290:	2b00      	cmp	r3, #0
 8005292:	d01b      	beq.n	80052cc <HAL_TIM_IRQHandler+0xb0>
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	681b      	ldr	r3, [r3, #0]
 8005298:	f06f 0204 	mvn.w	r2, #4
 800529c:	611a      	str	r2, [r3, #16]
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	2202      	movs	r2, #2
 80052a2:	771a      	strb	r2, [r3, #28]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	699b      	ldr	r3, [r3, #24]
 80052aa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d003      	beq.n	80052ba <HAL_TIM_IRQHandler+0x9e>
 80052b2:	6878      	ldr	r0, [r7, #4]
 80052b4:	f000 f97b 	bl	80055ae <HAL_TIM_IC_CaptureCallback>
 80052b8:	e005      	b.n	80052c6 <HAL_TIM_IRQHandler+0xaa>
 80052ba:	6878      	ldr	r0, [r7, #4]
 80052bc:	f000 f96e 	bl	800559c <HAL_TIM_OC_DelayElapsedCallback>
 80052c0:	6878      	ldr	r0, [r7, #4]
 80052c2:	f000 f97d 	bl	80055c0 <HAL_TIM_PWM_PulseFinishedCallback>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	2200      	movs	r2, #0
 80052ca:	771a      	strb	r2, [r3, #28]
 80052cc:	68bb      	ldr	r3, [r7, #8]
 80052ce:	f003 0308 	and.w	r3, r3, #8
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d020      	beq.n	8005318 <HAL_TIM_IRQHandler+0xfc>
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	f003 0308 	and.w	r3, r3, #8
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d01b      	beq.n	8005318 <HAL_TIM_IRQHandler+0xfc>
 80052e0:	687b      	ldr	r3, [r7, #4]
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f06f 0208 	mvn.w	r2, #8
 80052e8:	611a      	str	r2, [r3, #16]
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	2204      	movs	r2, #4
 80052ee:	771a      	strb	r2, [r3, #28]
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	69db      	ldr	r3, [r3, #28]
 80052f6:	f003 0303 	and.w	r3, r3, #3
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d003      	beq.n	8005306 <HAL_TIM_IRQHandler+0xea>
 80052fe:	6878      	ldr	r0, [r7, #4]
 8005300:	f000 f955 	bl	80055ae <HAL_TIM_IC_CaptureCallback>
 8005304:	e005      	b.n	8005312 <HAL_TIM_IRQHandler+0xf6>
 8005306:	6878      	ldr	r0, [r7, #4]
 8005308:	f000 f948 	bl	800559c <HAL_TIM_OC_DelayElapsedCallback>
 800530c:	6878      	ldr	r0, [r7, #4]
 800530e:	f000 f957 	bl	80055c0 <HAL_TIM_PWM_PulseFinishedCallback>
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	2200      	movs	r2, #0
 8005316:	771a      	strb	r2, [r3, #28]
 8005318:	68bb      	ldr	r3, [r7, #8]
 800531a:	f003 0310 	and.w	r3, r3, #16
 800531e:	2b00      	cmp	r3, #0
 8005320:	d020      	beq.n	8005364 <HAL_TIM_IRQHandler+0x148>
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	f003 0310 	and.w	r3, r3, #16
 8005328:	2b00      	cmp	r3, #0
 800532a:	d01b      	beq.n	8005364 <HAL_TIM_IRQHandler+0x148>
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	f06f 0210 	mvn.w	r2, #16
 8005334:	611a      	str	r2, [r3, #16]
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	2208      	movs	r2, #8
 800533a:	771a      	strb	r2, [r3, #28]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	69db      	ldr	r3, [r3, #28]
 8005342:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005346:	2b00      	cmp	r3, #0
 8005348:	d003      	beq.n	8005352 <HAL_TIM_IRQHandler+0x136>
 800534a:	6878      	ldr	r0, [r7, #4]
 800534c:	f000 f92f 	bl	80055ae <HAL_TIM_IC_CaptureCallback>
 8005350:	e005      	b.n	800535e <HAL_TIM_IRQHandler+0x142>
 8005352:	6878      	ldr	r0, [r7, #4]
 8005354:	f000 f922 	bl	800559c <HAL_TIM_OC_DelayElapsedCallback>
 8005358:	6878      	ldr	r0, [r7, #4]
 800535a:	f000 f931 	bl	80055c0 <HAL_TIM_PWM_PulseFinishedCallback>
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	2200      	movs	r2, #0
 8005362:	771a      	strb	r2, [r3, #28]
 8005364:	68bb      	ldr	r3, [r7, #8]
 8005366:	f003 0301 	and.w	r3, r3, #1
 800536a:	2b00      	cmp	r3, #0
 800536c:	d00c      	beq.n	8005388 <HAL_TIM_IRQHandler+0x16c>
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	f003 0301 	and.w	r3, r3, #1
 8005374:	2b00      	cmp	r3, #0
 8005376:	d007      	beq.n	8005388 <HAL_TIM_IRQHandler+0x16c>
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	f06f 0201 	mvn.w	r2, #1
 8005380:	611a      	str	r2, [r3, #16]
 8005382:	6878      	ldr	r0, [r7, #4]
 8005384:	f000 f901 	bl	800558a <HAL_TIM_PeriodElapsedCallback>
 8005388:	68bb      	ldr	r3, [r7, #8]
 800538a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800538e:	2b00      	cmp	r3, #0
 8005390:	d00c      	beq.n	80053ac <HAL_TIM_IRQHandler+0x190>
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005398:	2b00      	cmp	r3, #0
 800539a:	d007      	beq.n	80053ac <HAL_TIM_IRQHandler+0x190>
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80053a4:	611a      	str	r2, [r3, #16]
 80053a6:	6878      	ldr	r0, [r7, #4]
 80053a8:	f000 fa87 	bl	80058ba <HAL_TIMEx_BreakCallback>
 80053ac:	68bb      	ldr	r3, [r7, #8]
 80053ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d00c      	beq.n	80053d0 <HAL_TIM_IRQHandler+0x1b4>
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80053bc:	2b00      	cmp	r3, #0
 80053be:	d007      	beq.n	80053d0 <HAL_TIM_IRQHandler+0x1b4>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80053c8:	611a      	str	r2, [r3, #16]
 80053ca:	6878      	ldr	r0, [r7, #4]
 80053cc:	f000 f901 	bl	80055d2 <HAL_TIM_TriggerCallback>
 80053d0:	68bb      	ldr	r3, [r7, #8]
 80053d2:	f003 0320 	and.w	r3, r3, #32
 80053d6:	2b00      	cmp	r3, #0
 80053d8:	d00c      	beq.n	80053f4 <HAL_TIM_IRQHandler+0x1d8>
 80053da:	68fb      	ldr	r3, [r7, #12]
 80053dc:	f003 0320 	and.w	r3, r3, #32
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d007      	beq.n	80053f4 <HAL_TIM_IRQHandler+0x1d8>
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	f06f 0220 	mvn.w	r2, #32
 80053ec:	611a      	str	r2, [r3, #16]
 80053ee:	6878      	ldr	r0, [r7, #4]
 80053f0:	f000 fa5a 	bl	80058a8 <HAL_TIMEx_CommutCallback>
 80053f4:	bf00      	nop
 80053f6:	3710      	adds	r7, #16
 80053f8:	46bd      	mov	sp, r7
 80053fa:	bd80      	pop	{r7, pc}

080053fc <HAL_TIM_ConfigClockSource>:
 80053fc:	b580      	push	{r7, lr}
 80053fe:	b084      	sub	sp, #16
 8005400:	af00      	add	r7, sp, #0
 8005402:	6078      	str	r0, [r7, #4]
 8005404:	6039      	str	r1, [r7, #0]
 8005406:	2300      	movs	r3, #0
 8005408:	73fb      	strb	r3, [r7, #15]
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005410:	2b01      	cmp	r3, #1
 8005412:	d101      	bne.n	8005418 <HAL_TIM_ConfigClockSource+0x1c>
 8005414:	2302      	movs	r3, #2
 8005416:	e0b4      	b.n	8005582 <HAL_TIM_ConfigClockSource+0x186>
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	2201      	movs	r2, #1
 800541c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	2202      	movs	r2, #2
 8005424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	681b      	ldr	r3, [r3, #0]
 800542c:	689b      	ldr	r3, [r3, #8]
 800542e:	60bb      	str	r3, [r7, #8]
 8005430:	68bb      	ldr	r3, [r7, #8]
 8005432:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005436:	60bb      	str	r3, [r7, #8]
 8005438:	68bb      	ldr	r3, [r7, #8]
 800543a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800543e:	60bb      	str	r3, [r7, #8]
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	68ba      	ldr	r2, [r7, #8]
 8005446:	609a      	str	r2, [r3, #8]
 8005448:	683b      	ldr	r3, [r7, #0]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005450:	d03e      	beq.n	80054d0 <HAL_TIM_ConfigClockSource+0xd4>
 8005452:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005456:	f200 8087 	bhi.w	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 800545a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800545e:	f000 8086 	beq.w	800556e <HAL_TIM_ConfigClockSource+0x172>
 8005462:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005466:	d87f      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005468:	2b70      	cmp	r3, #112	@ 0x70
 800546a:	d01a      	beq.n	80054a2 <HAL_TIM_ConfigClockSource+0xa6>
 800546c:	2b70      	cmp	r3, #112	@ 0x70
 800546e:	d87b      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005470:	2b60      	cmp	r3, #96	@ 0x60
 8005472:	d050      	beq.n	8005516 <HAL_TIM_ConfigClockSource+0x11a>
 8005474:	2b60      	cmp	r3, #96	@ 0x60
 8005476:	d877      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005478:	2b50      	cmp	r3, #80	@ 0x50
 800547a:	d03c      	beq.n	80054f6 <HAL_TIM_ConfigClockSource+0xfa>
 800547c:	2b50      	cmp	r3, #80	@ 0x50
 800547e:	d873      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005480:	2b40      	cmp	r3, #64	@ 0x40
 8005482:	d058      	beq.n	8005536 <HAL_TIM_ConfigClockSource+0x13a>
 8005484:	2b40      	cmp	r3, #64	@ 0x40
 8005486:	d86f      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005488:	2b30      	cmp	r3, #48	@ 0x30
 800548a:	d064      	beq.n	8005556 <HAL_TIM_ConfigClockSource+0x15a>
 800548c:	2b30      	cmp	r3, #48	@ 0x30
 800548e:	d86b      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005490:	2b20      	cmp	r3, #32
 8005492:	d060      	beq.n	8005556 <HAL_TIM_ConfigClockSource+0x15a>
 8005494:	2b20      	cmp	r3, #32
 8005496:	d867      	bhi.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 8005498:	2b00      	cmp	r3, #0
 800549a:	d05c      	beq.n	8005556 <HAL_TIM_ConfigClockSource+0x15a>
 800549c:	2b10      	cmp	r3, #16
 800549e:	d05a      	beq.n	8005556 <HAL_TIM_ConfigClockSource+0x15a>
 80054a0:	e062      	b.n	8005568 <HAL_TIM_ConfigClockSource+0x16c>
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	6818      	ldr	r0, [r3, #0]
 80054a6:	683b      	ldr	r3, [r7, #0]
 80054a8:	6899      	ldr	r1, [r3, #8]
 80054aa:	683b      	ldr	r3, [r7, #0]
 80054ac:	685a      	ldr	r2, [r3, #4]
 80054ae:	683b      	ldr	r3, [r7, #0]
 80054b0:	68db      	ldr	r3, [r3, #12]
 80054b2:	f000 f97c 	bl	80057ae <TIM_ETR_SetConfig>
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	689b      	ldr	r3, [r3, #8]
 80054bc:	60bb      	str	r3, [r7, #8]
 80054be:	68bb      	ldr	r3, [r7, #8]
 80054c0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80054c4:	60bb      	str	r3, [r7, #8]
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	68ba      	ldr	r2, [r7, #8]
 80054cc:	609a      	str	r2, [r3, #8]
 80054ce:	e04f      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	6818      	ldr	r0, [r3, #0]
 80054d4:	683b      	ldr	r3, [r7, #0]
 80054d6:	6899      	ldr	r1, [r3, #8]
 80054d8:	683b      	ldr	r3, [r7, #0]
 80054da:	685a      	ldr	r2, [r3, #4]
 80054dc:	683b      	ldr	r3, [r7, #0]
 80054de:	68db      	ldr	r3, [r3, #12]
 80054e0:	f000 f965 	bl	80057ae <TIM_ETR_SetConfig>
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	689a      	ldr	r2, [r3, #8]
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80054f2:	609a      	str	r2, [r3, #8]
 80054f4:	e03c      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	6818      	ldr	r0, [r3, #0]
 80054fa:	683b      	ldr	r3, [r7, #0]
 80054fc:	6859      	ldr	r1, [r3, #4]
 80054fe:	683b      	ldr	r3, [r7, #0]
 8005500:	68db      	ldr	r3, [r3, #12]
 8005502:	461a      	mov	r2, r3
 8005504:	f000 f8dc 	bl	80056c0 <TIM_TI1_ConfigInputStage>
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	2150      	movs	r1, #80	@ 0x50
 800550e:	4618      	mov	r0, r3
 8005510:	f000 f933 	bl	800577a <TIM_ITRx_SetConfig>
 8005514:	e02c      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	6818      	ldr	r0, [r3, #0]
 800551a:	683b      	ldr	r3, [r7, #0]
 800551c:	6859      	ldr	r1, [r3, #4]
 800551e:	683b      	ldr	r3, [r7, #0]
 8005520:	68db      	ldr	r3, [r3, #12]
 8005522:	461a      	mov	r2, r3
 8005524:	f000 f8fa 	bl	800571c <TIM_TI2_ConfigInputStage>
 8005528:	687b      	ldr	r3, [r7, #4]
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	2160      	movs	r1, #96	@ 0x60
 800552e:	4618      	mov	r0, r3
 8005530:	f000 f923 	bl	800577a <TIM_ITRx_SetConfig>
 8005534:	e01c      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	6818      	ldr	r0, [r3, #0]
 800553a:	683b      	ldr	r3, [r7, #0]
 800553c:	6859      	ldr	r1, [r3, #4]
 800553e:	683b      	ldr	r3, [r7, #0]
 8005540:	68db      	ldr	r3, [r3, #12]
 8005542:	461a      	mov	r2, r3
 8005544:	f000 f8bc 	bl	80056c0 <TIM_TI1_ConfigInputStage>
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	2140      	movs	r1, #64	@ 0x40
 800554e:	4618      	mov	r0, r3
 8005550:	f000 f913 	bl	800577a <TIM_ITRx_SetConfig>
 8005554:	e00c      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	681a      	ldr	r2, [r3, #0]
 800555a:	683b      	ldr	r3, [r7, #0]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	4619      	mov	r1, r3
 8005560:	4610      	mov	r0, r2
 8005562:	f000 f90a 	bl	800577a <TIM_ITRx_SetConfig>
 8005566:	e003      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 8005568:	2301      	movs	r3, #1
 800556a:	73fb      	strb	r3, [r7, #15]
 800556c:	e000      	b.n	8005570 <HAL_TIM_ConfigClockSource+0x174>
 800556e:	bf00      	nop
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	2201      	movs	r2, #1
 8005574:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	2200      	movs	r2, #0
 800557c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005580:	7bfb      	ldrb	r3, [r7, #15]
 8005582:	4618      	mov	r0, r3
 8005584:	3710      	adds	r7, #16
 8005586:	46bd      	mov	sp, r7
 8005588:	bd80      	pop	{r7, pc}

0800558a <HAL_TIM_PeriodElapsedCallback>:
 800558a:	b480      	push	{r7}
 800558c:	b083      	sub	sp, #12
 800558e:	af00      	add	r7, sp, #0
 8005590:	6078      	str	r0, [r7, #4]
 8005592:	bf00      	nop
 8005594:	370c      	adds	r7, #12
 8005596:	46bd      	mov	sp, r7
 8005598:	bc80      	pop	{r7}
 800559a:	4770      	bx	lr

0800559c <HAL_TIM_OC_DelayElapsedCallback>:
 800559c:	b480      	push	{r7}
 800559e:	b083      	sub	sp, #12
 80055a0:	af00      	add	r7, sp, #0
 80055a2:	6078      	str	r0, [r7, #4]
 80055a4:	bf00      	nop
 80055a6:	370c      	adds	r7, #12
 80055a8:	46bd      	mov	sp, r7
 80055aa:	bc80      	pop	{r7}
 80055ac:	4770      	bx	lr

080055ae <HAL_TIM_IC_CaptureCallback>:
 80055ae:	b480      	push	{r7}
 80055b0:	b083      	sub	sp, #12
 80055b2:	af00      	add	r7, sp, #0
 80055b4:	6078      	str	r0, [r7, #4]
 80055b6:	bf00      	nop
 80055b8:	370c      	adds	r7, #12
 80055ba:	46bd      	mov	sp, r7
 80055bc:	bc80      	pop	{r7}
 80055be:	4770      	bx	lr

080055c0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80055c0:	b480      	push	{r7}
 80055c2:	b083      	sub	sp, #12
 80055c4:	af00      	add	r7, sp, #0
 80055c6:	6078      	str	r0, [r7, #4]
 80055c8:	bf00      	nop
 80055ca:	370c      	adds	r7, #12
 80055cc:	46bd      	mov	sp, r7
 80055ce:	bc80      	pop	{r7}
 80055d0:	4770      	bx	lr

080055d2 <HAL_TIM_TriggerCallback>:
 80055d2:	b480      	push	{r7}
 80055d4:	b083      	sub	sp, #12
 80055d6:	af00      	add	r7, sp, #0
 80055d8:	6078      	str	r0, [r7, #4]
 80055da:	bf00      	nop
 80055dc:	370c      	adds	r7, #12
 80055de:	46bd      	mov	sp, r7
 80055e0:	bc80      	pop	{r7}
 80055e2:	4770      	bx	lr

080055e4 <TIM_Base_SetConfig>:
 80055e4:	b480      	push	{r7}
 80055e6:	b085      	sub	sp, #20
 80055e8:	af00      	add	r7, sp, #0
 80055ea:	6078      	str	r0, [r7, #4]
 80055ec:	6039      	str	r1, [r7, #0]
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	60fb      	str	r3, [r7, #12]
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	4a2f      	ldr	r2, [pc, #188]	@ (80056b4 <TIM_Base_SetConfig+0xd0>)
 80055f8:	4293      	cmp	r3, r2
 80055fa:	d00b      	beq.n	8005614 <TIM_Base_SetConfig+0x30>
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005602:	d007      	beq.n	8005614 <TIM_Base_SetConfig+0x30>
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	4a2c      	ldr	r2, [pc, #176]	@ (80056b8 <TIM_Base_SetConfig+0xd4>)
 8005608:	4293      	cmp	r3, r2
 800560a:	d003      	beq.n	8005614 <TIM_Base_SetConfig+0x30>
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	4a2b      	ldr	r2, [pc, #172]	@ (80056bc <TIM_Base_SetConfig+0xd8>)
 8005610:	4293      	cmp	r3, r2
 8005612:	d108      	bne.n	8005626 <TIM_Base_SetConfig+0x42>
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800561a:	60fb      	str	r3, [r7, #12]
 800561c:	683b      	ldr	r3, [r7, #0]
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	68fa      	ldr	r2, [r7, #12]
 8005622:	4313      	orrs	r3, r2
 8005624:	60fb      	str	r3, [r7, #12]
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	4a22      	ldr	r2, [pc, #136]	@ (80056b4 <TIM_Base_SetConfig+0xd0>)
 800562a:	4293      	cmp	r3, r2
 800562c:	d00b      	beq.n	8005646 <TIM_Base_SetConfig+0x62>
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005634:	d007      	beq.n	8005646 <TIM_Base_SetConfig+0x62>
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	4a1f      	ldr	r2, [pc, #124]	@ (80056b8 <TIM_Base_SetConfig+0xd4>)
 800563a:	4293      	cmp	r3, r2
 800563c:	d003      	beq.n	8005646 <TIM_Base_SetConfig+0x62>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	4a1e      	ldr	r2, [pc, #120]	@ (80056bc <TIM_Base_SetConfig+0xd8>)
 8005642:	4293      	cmp	r3, r2
 8005644:	d108      	bne.n	8005658 <TIM_Base_SetConfig+0x74>
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800564c:	60fb      	str	r3, [r7, #12]
 800564e:	683b      	ldr	r3, [r7, #0]
 8005650:	68db      	ldr	r3, [r3, #12]
 8005652:	68fa      	ldr	r2, [r7, #12]
 8005654:	4313      	orrs	r3, r2
 8005656:	60fb      	str	r3, [r7, #12]
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800565e:	683b      	ldr	r3, [r7, #0]
 8005660:	695b      	ldr	r3, [r3, #20]
 8005662:	4313      	orrs	r3, r2
 8005664:	60fb      	str	r3, [r7, #12]
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	68fa      	ldr	r2, [r7, #12]
 800566a:	601a      	str	r2, [r3, #0]
 800566c:	683b      	ldr	r3, [r7, #0]
 800566e:	689a      	ldr	r2, [r3, #8]
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005674:	683b      	ldr	r3, [r7, #0]
 8005676:	681a      	ldr	r2, [r3, #0]
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	629a      	str	r2, [r3, #40]	@ 0x28
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	4a0d      	ldr	r2, [pc, #52]	@ (80056b4 <TIM_Base_SetConfig+0xd0>)
 8005680:	4293      	cmp	r3, r2
 8005682:	d103      	bne.n	800568c <TIM_Base_SetConfig+0xa8>
 8005684:	683b      	ldr	r3, [r7, #0]
 8005686:	691a      	ldr	r2, [r3, #16]
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	631a      	str	r2, [r3, #48]	@ 0x30
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	2201      	movs	r2, #1
 8005690:	615a      	str	r2, [r3, #20]
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	691b      	ldr	r3, [r3, #16]
 8005696:	f003 0301 	and.w	r3, r3, #1
 800569a:	2b00      	cmp	r3, #0
 800569c:	d005      	beq.n	80056aa <TIM_Base_SetConfig+0xc6>
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	691b      	ldr	r3, [r3, #16]
 80056a2:	f023 0201 	bic.w	r2, r3, #1
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	611a      	str	r2, [r3, #16]
 80056aa:	bf00      	nop
 80056ac:	3714      	adds	r7, #20
 80056ae:	46bd      	mov	sp, r7
 80056b0:	bc80      	pop	{r7}
 80056b2:	4770      	bx	lr
 80056b4:	40012c00 	.word	0x40012c00
 80056b8:	40000400 	.word	0x40000400
 80056bc:	40000800 	.word	0x40000800

080056c0 <TIM_TI1_ConfigInputStage>:
 80056c0:	b480      	push	{r7}
 80056c2:	b087      	sub	sp, #28
 80056c4:	af00      	add	r7, sp, #0
 80056c6:	60f8      	str	r0, [r7, #12]
 80056c8:	60b9      	str	r1, [r7, #8]
 80056ca:	607a      	str	r2, [r7, #4]
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	6a1b      	ldr	r3, [r3, #32]
 80056d0:	617b      	str	r3, [r7, #20]
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	6a1b      	ldr	r3, [r3, #32]
 80056d6:	f023 0201 	bic.w	r2, r3, #1
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	621a      	str	r2, [r3, #32]
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	699b      	ldr	r3, [r3, #24]
 80056e2:	613b      	str	r3, [r7, #16]
 80056e4:	693b      	ldr	r3, [r7, #16]
 80056e6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80056ea:	613b      	str	r3, [r7, #16]
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	011b      	lsls	r3, r3, #4
 80056f0:	693a      	ldr	r2, [r7, #16]
 80056f2:	4313      	orrs	r3, r2
 80056f4:	613b      	str	r3, [r7, #16]
 80056f6:	697b      	ldr	r3, [r7, #20]
 80056f8:	f023 030a 	bic.w	r3, r3, #10
 80056fc:	617b      	str	r3, [r7, #20]
 80056fe:	697a      	ldr	r2, [r7, #20]
 8005700:	68bb      	ldr	r3, [r7, #8]
 8005702:	4313      	orrs	r3, r2
 8005704:	617b      	str	r3, [r7, #20]
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	693a      	ldr	r2, [r7, #16]
 800570a:	619a      	str	r2, [r3, #24]
 800570c:	68fb      	ldr	r3, [r7, #12]
 800570e:	697a      	ldr	r2, [r7, #20]
 8005710:	621a      	str	r2, [r3, #32]
 8005712:	bf00      	nop
 8005714:	371c      	adds	r7, #28
 8005716:	46bd      	mov	sp, r7
 8005718:	bc80      	pop	{r7}
 800571a:	4770      	bx	lr

0800571c <TIM_TI2_ConfigInputStage>:
 800571c:	b480      	push	{r7}
 800571e:	b087      	sub	sp, #28
 8005720:	af00      	add	r7, sp, #0
 8005722:	60f8      	str	r0, [r7, #12]
 8005724:	60b9      	str	r1, [r7, #8]
 8005726:	607a      	str	r2, [r7, #4]
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	6a1b      	ldr	r3, [r3, #32]
 800572c:	617b      	str	r3, [r7, #20]
 800572e:	68fb      	ldr	r3, [r7, #12]
 8005730:	6a1b      	ldr	r3, [r3, #32]
 8005732:	f023 0210 	bic.w	r2, r3, #16
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	621a      	str	r2, [r3, #32]
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	699b      	ldr	r3, [r3, #24]
 800573e:	613b      	str	r3, [r7, #16]
 8005740:	693b      	ldr	r3, [r7, #16]
 8005742:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005746:	613b      	str	r3, [r7, #16]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	031b      	lsls	r3, r3, #12
 800574c:	693a      	ldr	r2, [r7, #16]
 800574e:	4313      	orrs	r3, r2
 8005750:	613b      	str	r3, [r7, #16]
 8005752:	697b      	ldr	r3, [r7, #20]
 8005754:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005758:	617b      	str	r3, [r7, #20]
 800575a:	68bb      	ldr	r3, [r7, #8]
 800575c:	011b      	lsls	r3, r3, #4
 800575e:	697a      	ldr	r2, [r7, #20]
 8005760:	4313      	orrs	r3, r2
 8005762:	617b      	str	r3, [r7, #20]
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	693a      	ldr	r2, [r7, #16]
 8005768:	619a      	str	r2, [r3, #24]
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	697a      	ldr	r2, [r7, #20]
 800576e:	621a      	str	r2, [r3, #32]
 8005770:	bf00      	nop
 8005772:	371c      	adds	r7, #28
 8005774:	46bd      	mov	sp, r7
 8005776:	bc80      	pop	{r7}
 8005778:	4770      	bx	lr

0800577a <TIM_ITRx_SetConfig>:
 800577a:	b480      	push	{r7}
 800577c:	b085      	sub	sp, #20
 800577e:	af00      	add	r7, sp, #0
 8005780:	6078      	str	r0, [r7, #4]
 8005782:	6039      	str	r1, [r7, #0]
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	689b      	ldr	r3, [r3, #8]
 8005788:	60fb      	str	r3, [r7, #12]
 800578a:	68fb      	ldr	r3, [r7, #12]
 800578c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005790:	60fb      	str	r3, [r7, #12]
 8005792:	683a      	ldr	r2, [r7, #0]
 8005794:	68fb      	ldr	r3, [r7, #12]
 8005796:	4313      	orrs	r3, r2
 8005798:	f043 0307 	orr.w	r3, r3, #7
 800579c:	60fb      	str	r3, [r7, #12]
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	68fa      	ldr	r2, [r7, #12]
 80057a2:	609a      	str	r2, [r3, #8]
 80057a4:	bf00      	nop
 80057a6:	3714      	adds	r7, #20
 80057a8:	46bd      	mov	sp, r7
 80057aa:	bc80      	pop	{r7}
 80057ac:	4770      	bx	lr

080057ae <TIM_ETR_SetConfig>:
 80057ae:	b480      	push	{r7}
 80057b0:	b087      	sub	sp, #28
 80057b2:	af00      	add	r7, sp, #0
 80057b4:	60f8      	str	r0, [r7, #12]
 80057b6:	60b9      	str	r1, [r7, #8]
 80057b8:	607a      	str	r2, [r7, #4]
 80057ba:	603b      	str	r3, [r7, #0]
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	689b      	ldr	r3, [r3, #8]
 80057c0:	617b      	str	r3, [r7, #20]
 80057c2:	697b      	ldr	r3, [r7, #20]
 80057c4:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80057c8:	617b      	str	r3, [r7, #20]
 80057ca:	683b      	ldr	r3, [r7, #0]
 80057cc:	021a      	lsls	r2, r3, #8
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	431a      	orrs	r2, r3
 80057d2:	68bb      	ldr	r3, [r7, #8]
 80057d4:	4313      	orrs	r3, r2
 80057d6:	697a      	ldr	r2, [r7, #20]
 80057d8:	4313      	orrs	r3, r2
 80057da:	617b      	str	r3, [r7, #20]
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	697a      	ldr	r2, [r7, #20]
 80057e0:	609a      	str	r2, [r3, #8]
 80057e2:	bf00      	nop
 80057e4:	371c      	adds	r7, #28
 80057e6:	46bd      	mov	sp, r7
 80057e8:	bc80      	pop	{r7}
 80057ea:	4770      	bx	lr

080057ec <HAL_TIMEx_MasterConfigSynchronization>:
 80057ec:	b480      	push	{r7}
 80057ee:	b085      	sub	sp, #20
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
 80057f4:	6039      	str	r1, [r7, #0]
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80057fc:	2b01      	cmp	r3, #1
 80057fe:	d101      	bne.n	8005804 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005800:	2302      	movs	r3, #2
 8005802:	e046      	b.n	8005892 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	2201      	movs	r2, #1
 8005808:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	2202      	movs	r2, #2
 8005810:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	681b      	ldr	r3, [r3, #0]
 8005818:	685b      	ldr	r3, [r3, #4]
 800581a:	60fb      	str	r3, [r7, #12]
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	689b      	ldr	r3, [r3, #8]
 8005822:	60bb      	str	r3, [r7, #8]
 8005824:	68fb      	ldr	r3, [r7, #12]
 8005826:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800582a:	60fb      	str	r3, [r7, #12]
 800582c:	683b      	ldr	r3, [r7, #0]
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	68fa      	ldr	r2, [r7, #12]
 8005832:	4313      	orrs	r3, r2
 8005834:	60fb      	str	r3, [r7, #12]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	68fa      	ldr	r2, [r7, #12]
 800583c:	605a      	str	r2, [r3, #4]
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	681b      	ldr	r3, [r3, #0]
 8005842:	4a16      	ldr	r2, [pc, #88]	@ (800589c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8005844:	4293      	cmp	r3, r2
 8005846:	d00e      	beq.n	8005866 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005850:	d009      	beq.n	8005866 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	4a12      	ldr	r2, [pc, #72]	@ (80058a0 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8005858:	4293      	cmp	r3, r2
 800585a:	d004      	beq.n	8005866 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	681b      	ldr	r3, [r3, #0]
 8005860:	4a10      	ldr	r2, [pc, #64]	@ (80058a4 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8005862:	4293      	cmp	r3, r2
 8005864:	d10c      	bne.n	8005880 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8005866:	68bb      	ldr	r3, [r7, #8]
 8005868:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800586c:	60bb      	str	r3, [r7, #8]
 800586e:	683b      	ldr	r3, [r7, #0]
 8005870:	685b      	ldr	r3, [r3, #4]
 8005872:	68ba      	ldr	r2, [r7, #8]
 8005874:	4313      	orrs	r3, r2
 8005876:	60bb      	str	r3, [r7, #8]
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	68ba      	ldr	r2, [r7, #8]
 800587e:	609a      	str	r2, [r3, #8]
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	2201      	movs	r2, #1
 8005884:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	2200      	movs	r2, #0
 800588c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005890:	2300      	movs	r3, #0
 8005892:	4618      	mov	r0, r3
 8005894:	3714      	adds	r7, #20
 8005896:	46bd      	mov	sp, r7
 8005898:	bc80      	pop	{r7}
 800589a:	4770      	bx	lr
 800589c:	40012c00 	.word	0x40012c00
 80058a0:	40000400 	.word	0x40000400
 80058a4:	40000800 	.word	0x40000800

080058a8 <HAL_TIMEx_CommutCallback>:
 80058a8:	b480      	push	{r7}
 80058aa:	b083      	sub	sp, #12
 80058ac:	af00      	add	r7, sp, #0
 80058ae:	6078      	str	r0, [r7, #4]
 80058b0:	bf00      	nop
 80058b2:	370c      	adds	r7, #12
 80058b4:	46bd      	mov	sp, r7
 80058b6:	bc80      	pop	{r7}
 80058b8:	4770      	bx	lr

080058ba <HAL_TIMEx_BreakCallback>:
 80058ba:	b480      	push	{r7}
 80058bc:	b083      	sub	sp, #12
 80058be:	af00      	add	r7, sp, #0
 80058c0:	6078      	str	r0, [r7, #4]
 80058c2:	bf00      	nop
 80058c4:	370c      	adds	r7, #12
 80058c6:	46bd      	mov	sp, r7
 80058c8:	bc80      	pop	{r7}
 80058ca:	4770      	bx	lr

080058cc <memset>:
 80058cc:	4603      	mov	r3, r0
 80058ce:	4402      	add	r2, r0
 80058d0:	4293      	cmp	r3, r2
 80058d2:	d100      	bne.n	80058d6 <memset+0xa>
 80058d4:	4770      	bx	lr
 80058d6:	f803 1b01 	strb.w	r1, [r3], #1
 80058da:	e7f9      	b.n	80058d0 <memset+0x4>

080058dc <__libc_init_array>:
 80058dc:	b570      	push	{r4, r5, r6, lr}
 80058de:	2600      	movs	r6, #0
 80058e0:	4d0c      	ldr	r5, [pc, #48]	@ (8005914 <__libc_init_array+0x38>)
 80058e2:	4c0d      	ldr	r4, [pc, #52]	@ (8005918 <__libc_init_array+0x3c>)
 80058e4:	1b64      	subs	r4, r4, r5
 80058e6:	10a4      	asrs	r4, r4, #2
 80058e8:	42a6      	cmp	r6, r4
 80058ea:	d109      	bne.n	8005900 <__libc_init_array+0x24>
 80058ec:	f000 f81a 	bl	8005924 <_init>
 80058f0:	2600      	movs	r6, #0
 80058f2:	4d0a      	ldr	r5, [pc, #40]	@ (800591c <__libc_init_array+0x40>)
 80058f4:	4c0a      	ldr	r4, [pc, #40]	@ (8005920 <__libc_init_array+0x44>)
 80058f6:	1b64      	subs	r4, r4, r5
 80058f8:	10a4      	asrs	r4, r4, #2
 80058fa:	42a6      	cmp	r6, r4
 80058fc:	d105      	bne.n	800590a <__libc_init_array+0x2e>
 80058fe:	bd70      	pop	{r4, r5, r6, pc}
 8005900:	f855 3b04 	ldr.w	r3, [r5], #4
 8005904:	4798      	blx	r3
 8005906:	3601      	adds	r6, #1
 8005908:	e7ee      	b.n	80058e8 <__libc_init_array+0xc>
 800590a:	f855 3b04 	ldr.w	r3, [r5], #4
 800590e:	4798      	blx	r3
 8005910:	3601      	adds	r6, #1
 8005912:	e7f2      	b.n	80058fa <__libc_init_array+0x1e>
 8005914:	08005968 	.word	0x08005968
 8005918:	08005968 	.word	0x08005968
 800591c:	08005968 	.word	0x08005968
 8005920:	0800596c 	.word	0x0800596c

08005924 <_init>:
 8005924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005926:	bf00      	nop
 8005928:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800592a:	bc08      	pop	{r3}
 800592c:	469e      	mov	lr, r3
 800592e:	4770      	bx	lr

08005930 <_fini>:
 8005930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005932:	bf00      	nop
 8005934:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005936:	bc08      	pop	{r3}
 8005938:	469e      	mov	lr, r3
 800593a:	4770      	bx	lr
